// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: TSPArchiveMessages.proto

package kpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldInfo_Type int32

const (
	FieldInfo_Value           FieldInfo_Type = 0
	FieldInfo_ObjectReference FieldInfo_Type = 1
	FieldInfo_DataReference   FieldInfo_Type = 2
	FieldInfo_Message         FieldInfo_Type = 3
)

// Enum value maps for FieldInfo_Type.
var (
	FieldInfo_Type_name = map[int32]string{
		0: "Value",
		1: "ObjectReference",
		2: "DataReference",
		3: "Message",
	}
	FieldInfo_Type_value = map[string]int32{
		"Value":           0,
		"ObjectReference": 1,
		"DataReference":   2,
		"Message":         3,
	}
)

func (x FieldInfo_Type) Enum() *FieldInfo_Type {
	p := new(FieldInfo_Type)
	*p = x
	return p
}

func (x FieldInfo_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldInfo_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[0].Descriptor()
}

func (FieldInfo_Type) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[0]
}

func (x FieldInfo_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldInfo_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldInfo_Type(num)
	return nil
}

// Deprecated: Use FieldInfo_Type.Descriptor instead.
func (FieldInfo_Type) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2, 0}
}

type FieldInfo_UnknownFieldRule int32

const (
	FieldInfo_IgnoreAndPreserveUntilModified FieldInfo_UnknownFieldRule = 0
	FieldInfo_IgnoreAndPreserve              FieldInfo_UnknownFieldRule = 1
	FieldInfo_MustUnderstand                 FieldInfo_UnknownFieldRule = 2
	FieldInfo_NotSupported                   FieldInfo_UnknownFieldRule = -1
)

// Enum value maps for FieldInfo_UnknownFieldRule.
var (
	FieldInfo_UnknownFieldRule_name = map[int32]string{
		0:  "IgnoreAndPreserveUntilModified",
		1:  "IgnoreAndPreserve",
		2:  "MustUnderstand",
		-1: "NotSupported",
	}
	FieldInfo_UnknownFieldRule_value = map[string]int32{
		"IgnoreAndPreserveUntilModified": 0,
		"IgnoreAndPreserve":              1,
		"MustUnderstand":                 2,
		"NotSupported":                   -1,
	}
)

func (x FieldInfo_UnknownFieldRule) Enum() *FieldInfo_UnknownFieldRule {
	p := new(FieldInfo_UnknownFieldRule)
	*p = x
	return p
}

func (x FieldInfo_UnknownFieldRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldInfo_UnknownFieldRule) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[1].Descriptor()
}

func (FieldInfo_UnknownFieldRule) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[1]
}

func (x FieldInfo_UnknownFieldRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldInfo_UnknownFieldRule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldInfo_UnknownFieldRule(num)
	return nil
}

// Deprecated: Use FieldInfo_UnknownFieldRule.Descriptor instead.
func (FieldInfo_UnknownFieldRule) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2, 1}
}

type FieldInfo_KnownFieldRule int32

const (
	FieldInfo_None                            FieldInfo_KnownFieldRule = 0
	FieldInfo_PreserveNewerValueUntilModified FieldInfo_KnownFieldRule = 1
	FieldInfo_PreserveNewerValue              FieldInfo_KnownFieldRule = 2
)

// Enum value maps for FieldInfo_KnownFieldRule.
var (
	FieldInfo_KnownFieldRule_name = map[int32]string{
		0: "None",
		1: "PreserveNewerValueUntilModified",
		2: "PreserveNewerValue",
	}
	FieldInfo_KnownFieldRule_value = map[string]int32{
		"None":                            0,
		"PreserveNewerValueUntilModified": 1,
		"PreserveNewerValue":              2,
	}
)

func (x FieldInfo_KnownFieldRule) Enum() *FieldInfo_KnownFieldRule {
	p := new(FieldInfo_KnownFieldRule)
	*p = x
	return p
}

func (x FieldInfo_KnownFieldRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldInfo_KnownFieldRule) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[2].Descriptor()
}

func (FieldInfo_KnownFieldRule) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[2]
}

func (x FieldInfo_KnownFieldRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldInfo_KnownFieldRule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldInfo_KnownFieldRule(num)
	return nil
}

// Deprecated: Use FieldInfo_KnownFieldRule.Descriptor instead.
func (FieldInfo_KnownFieldRule) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2, 2}
}

type PackageMetadata_PackageType int32

const (
	PackageMetadata_Default    PackageMetadata_PackageType = 0
	PackageMetadata_Directory  PackageMetadata_PackageType = 1
	PackageMetadata_SingleFile PackageMetadata_PackageType = 2
)

// Enum value maps for PackageMetadata_PackageType.
var (
	PackageMetadata_PackageType_name = map[int32]string{
		0: "Default",
		1: "Directory",
		2: "SingleFile",
	}
	PackageMetadata_PackageType_value = map[string]int32{
		"Default":    0,
		"Directory":  1,
		"SingleFile": 2,
	}
)

func (x PackageMetadata_PackageType) Enum() *PackageMetadata_PackageType {
	p := new(PackageMetadata_PackageType)
	*p = x
	return p
}

func (x PackageMetadata_PackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageMetadata_PackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[3].Descriptor()
}

func (PackageMetadata_PackageType) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[3]
}

func (x PackageMetadata_PackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PackageMetadata_PackageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PackageMetadata_PackageType(num)
	return nil
}

// Deprecated: Use PackageMetadata_PackageType.Descriptor instead.
func (PackageMetadata_PackageType) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{9, 0}
}

type DataInfo_DownloadPriority int32

const (
	DataInfo_High    DataInfo_DownloadPriority = 0
	DataInfo_Default DataInfo_DownloadPriority = 1
)

// Enum value maps for DataInfo_DownloadPriority.
var (
	DataInfo_DownloadPriority_name = map[int32]string{
		0: "High",
		1: "Default",
	}
	DataInfo_DownloadPriority_value = map[string]int32{
		"High":    0,
		"Default": 1,
	}
)

func (x DataInfo_DownloadPriority) Enum() *DataInfo_DownloadPriority {
	p := new(DataInfo_DownloadPriority)
	*p = x
	return p
}

func (x DataInfo_DownloadPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataInfo_DownloadPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_TSPArchiveMessages_proto_enumTypes[4].Descriptor()
}

func (DataInfo_DownloadPriority) Type() protoreflect.EnumType {
	return &file_TSPArchiveMessages_proto_enumTypes[4]
}

func (x DataInfo_DownloadPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DataInfo_DownloadPriority) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DataInfo_DownloadPriority(num)
	return nil
}

// Deprecated: Use DataInfo_DownloadPriority.Descriptor instead.
func (DataInfo_DownloadPriority) EnumDescriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{12, 0}
}

type ArchiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier   *uint64        `protobuf:"varint,1,opt,name=identifier" json:"identifier,omitempty"`
	MessageInfos []*MessageInfo `protobuf:"bytes,2,rep,name=message_infos,json=messageInfos" json:"message_infos,omitempty"`
	ShouldMerge  *bool          `protobuf:"varint,3,opt,name=should_merge,json=shouldMerge" json:"should_merge,omitempty"`
}

func (x *ArchiveInfo) Reset() {
	*x = ArchiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveInfo) ProtoMessage() {}

func (x *ArchiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveInfo.ProtoReflect.Descriptor instead.
func (*ArchiveInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{0}
}

func (x *ArchiveInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *ArchiveInfo) GetMessageInfos() []*MessageInfo {
	if x != nil {
		return x.MessageInfos
	}
	return nil
}

func (x *ArchiveInfo) GetShouldMerge() bool {
	if x != nil && x.ShouldMerge != nil {
		return *x.ShouldMerge
	}
	return false
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             *uint32      `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Version          []uint32     `protobuf:"varint,2,rep,packed,name=version" json:"version,omitempty"`
	Length           *uint32      `protobuf:"varint,3,req,name=length" json:"length,omitempty"`
	FieldInfos       []*FieldInfo `protobuf:"bytes,4,rep,name=field_infos,json=fieldInfos" json:"field_infos,omitempty"`
	ObjectReferences []uint64     `protobuf:"varint,5,rep,packed,name=object_references,json=objectReferences" json:"object_references,omitempty"`
	DataReferences   []uint64     `protobuf:"varint,6,rep,packed,name=data_references,json=dataReferences" json:"data_references,omitempty"`
	BaseMessageIndex *uint32      `protobuf:"varint,7,opt,name=base_message_index,json=baseMessageIndex" json:"base_message_index,omitempty"`
	DiffMergeVersion []uint32     `protobuf:"varint,8,rep,packed,name=diff_merge_version,json=diffMergeVersion" json:"diff_merge_version,omitempty"`
	DiffFieldPath    *FieldPath   `protobuf:"bytes,9,opt,name=diff_field_path,json=diffFieldPath" json:"diff_field_path,omitempty"`
	FieldsToRemove   []*FieldPath `protobuf:"bytes,10,rep,name=fields_to_remove,json=fieldsToRemove" json:"fields_to_remove,omitempty"`
	DiffReadVersion  []uint32     `protobuf:"varint,11,rep,packed,name=diff_read_version,json=diffReadVersion" json:"diff_read_version,omitempty"`
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{1}
}

func (x *MessageInfo) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MessageInfo) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *MessageInfo) GetLength() uint32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *MessageInfo) GetFieldInfos() []*FieldInfo {
	if x != nil {
		return x.FieldInfos
	}
	return nil
}

func (x *MessageInfo) GetObjectReferences() []uint64 {
	if x != nil {
		return x.ObjectReferences
	}
	return nil
}

func (x *MessageInfo) GetDataReferences() []uint64 {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

func (x *MessageInfo) GetBaseMessageIndex() uint32 {
	if x != nil && x.BaseMessageIndex != nil {
		return *x.BaseMessageIndex
	}
	return 0
}

func (x *MessageInfo) GetDiffMergeVersion() []uint32 {
	if x != nil {
		return x.DiffMergeVersion
	}
	return nil
}

func (x *MessageInfo) GetDiffFieldPath() *FieldPath {
	if x != nil {
		return x.DiffFieldPath
	}
	return nil
}

func (x *MessageInfo) GetFieldsToRemove() []*FieldPath {
	if x != nil {
		return x.FieldsToRemove
	}
	return nil
}

func (x *MessageInfo) GetDiffReadVersion() []uint32 {
	if x != nil {
		return x.DiffReadVersion
	}
	return nil
}

type FieldInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                        *FieldPath                  `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Type                        *FieldInfo_Type             `protobuf:"varint,2,opt,name=type,enum=TSP.FieldInfo_Type,def=0" json:"type,omitempty"`
	UnknownFieldRule            *FieldInfo_UnknownFieldRule `protobuf:"varint,3,opt,name=unknown_field_rule,json=unknownFieldRule,enum=TSP.FieldInfo_UnknownFieldRule,def=0" json:"unknown_field_rule,omitempty"`
	ObjectReferences            []uint64                    `protobuf:"varint,4,rep,packed,name=object_references,json=objectReferences" json:"object_references,omitempty"`
	DataReferences              []uint64                    `protobuf:"varint,5,rep,packed,name=data_references,json=dataReferences" json:"data_references,omitempty"`
	KnownFieldRule              *FieldInfo_KnownFieldRule   `protobuf:"varint,6,opt,name=known_field_rule,json=knownFieldRule,enum=TSP.FieldInfo_KnownFieldRule,def=0" json:"known_field_rule,omitempty"`
	KnownFieldVersion           []uint32                    `protobuf:"varint,7,rep,packed,name=known_field_version,json=knownFieldVersion" json:"known_field_version,omitempty"`
	KnownFieldFeatureIdentifier *string                     `protobuf:"bytes,8,opt,name=known_field_feature_identifier,json=knownFieldFeatureIdentifier" json:"known_field_feature_identifier,omitempty"`
}

// Default values for FieldInfo fields.
const (
	Default_FieldInfo_Type             = FieldInfo_Value
	Default_FieldInfo_UnknownFieldRule = FieldInfo_IgnoreAndPreserveUntilModified
	Default_FieldInfo_KnownFieldRule   = FieldInfo_None
)

func (x *FieldInfo) Reset() {
	*x = FieldInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldInfo) ProtoMessage() {}

func (x *FieldInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldInfo.ProtoReflect.Descriptor instead.
func (*FieldInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{2}
}

func (x *FieldInfo) GetPath() *FieldPath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *FieldInfo) GetType() FieldInfo_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_FieldInfo_Type
}

func (x *FieldInfo) GetUnknownFieldRule() FieldInfo_UnknownFieldRule {
	if x != nil && x.UnknownFieldRule != nil {
		return *x.UnknownFieldRule
	}
	return Default_FieldInfo_UnknownFieldRule
}

func (x *FieldInfo) GetObjectReferences() []uint64 {
	if x != nil {
		return x.ObjectReferences
	}
	return nil
}

func (x *FieldInfo) GetDataReferences() []uint64 {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

func (x *FieldInfo) GetKnownFieldRule() FieldInfo_KnownFieldRule {
	if x != nil && x.KnownFieldRule != nil {
		return *x.KnownFieldRule
	}
	return Default_FieldInfo_KnownFieldRule
}

func (x *FieldInfo) GetKnownFieldVersion() []uint32 {
	if x != nil {
		return x.KnownFieldVersion
	}
	return nil
}

func (x *FieldInfo) GetKnownFieldFeatureIdentifier() string {
	if x != nil && x.KnownFieldFeatureIdentifier != nil {
		return *x.KnownFieldFeatureIdentifier
	}
	return ""
}

type FieldPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path []uint32 `protobuf:"varint,1,rep,packed,name=path" json:"path,omitempty"`
}

func (x *FieldPath) Reset() {
	*x = FieldPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldPath) ProtoMessage() {}

func (x *FieldPath) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldPath.ProtoReflect.Descriptor instead.
func (*FieldPath) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{3}
}

func (x *FieldPath) GetPath() []uint32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type ComponentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                   *uint64                       `protobuf:"varint,1,req,name=identifier" json:"identifier,omitempty"`
	PreferredLocator             *string                       `protobuf:"bytes,2,req,name=preferred_locator,json=preferredLocator" json:"preferred_locator,omitempty"`
	Locator                      *string                       `protobuf:"bytes,3,opt,name=locator" json:"locator,omitempty"`
	DocumentReadVersion          []uint32                      `protobuf:"varint,4,rep,packed,name=document_read_version,json=documentReadVersion" json:"document_read_version,omitempty"`
	DocumentWriteVersion         []uint32                      `protobuf:"varint,5,rep,packed,name=document_write_version,json=documentWriteVersion" json:"document_write_version,omitempty"`
	ExternalReferences           []*ComponentExternalReference `protobuf:"bytes,6,rep,name=external_references,json=externalReferences" json:"external_references,omitempty"`
	DataReferences               []*ComponentDataReference     `protobuf:"bytes,7,rep,name=data_references,json=dataReferences" json:"data_references,omitempty"`
	IsStoredOutsideObjectArchive *bool                         `protobuf:"varint,10,opt,name=is_stored_outside_object_archive,json=isStoredOutsideObjectArchive,def=0" json:"is_stored_outside_object_archive,omitempty"`
	ObjectUuidMapEntries         []*ObjectUUIDMapEntry         `protobuf:"bytes,11,rep,name=object_uuid_map_entries,json=objectUuidMapEntries" json:"object_uuid_map_entries,omitempty"`
	SaveToken                    *uint64                       `protobuf:"varint,12,opt,name=save_token,json=saveToken,def=0" json:"save_token,omitempty"`
	FeatureInfos                 []*FeatureInfo                `protobuf:"bytes,13,rep,name=feature_infos,json=featureInfos" json:"feature_infos,omitempty"`
	ComponentReadVersion         []uint32                      `protobuf:"varint,14,rep,packed,name=component_read_version,json=componentReadVersion" json:"component_read_version,omitempty"`
	ComponentRequiredVersion     []uint32                      `protobuf:"varint,15,rep,packed,name=component_required_version,json=componentRequiredVersion" json:"component_required_version,omitempty"`
	CompressionAlgorithm         *uint32                       `protobuf:"varint,16,opt,name=compression_algorithm,json=compressionAlgorithm" json:"compression_algorithm,omitempty"`
	CanBeDropped                 *bool                         `protobuf:"varint,17,opt,name=can_be_dropped,json=canBeDropped" json:"can_be_dropped,omitempty"`
	VersionedExternalReferences  []*ComponentExternalReference `protobuf:"bytes,18,rep,name=versioned_external_references,json=versionedExternalReferences" json:"versioned_external_references,omitempty"`
	IsWasteful                   *bool                         `protobuf:"varint,19,opt,name=is_wasteful,json=isWasteful" json:"is_wasteful,omitempty"`
	AmbiguousObjectIdentifiers   []uint64                      `protobuf:"varint,20,rep,packed,name=ambiguous_object_identifiers,json=ambiguousObjectIdentifiers" json:"ambiguous_object_identifiers,omitempty"`
	RequiredPackageIdentifier    *uint32                       `protobuf:"varint,21,opt,name=required_package_identifier,json=requiredPackageIdentifier" json:"required_package_identifier,omitempty"`
}

// Default values for ComponentInfo fields.
const (
	Default_ComponentInfo_IsStoredOutsideObjectArchive = bool(false)
	Default_ComponentInfo_SaveToken                    = uint64(0)
)

func (x *ComponentInfo) Reset() {
	*x = ComponentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentInfo) ProtoMessage() {}

func (x *ComponentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentInfo.ProtoReflect.Descriptor instead.
func (*ComponentInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *ComponentInfo) GetPreferredLocator() string {
	if x != nil && x.PreferredLocator != nil {
		return *x.PreferredLocator
	}
	return ""
}

func (x *ComponentInfo) GetLocator() string {
	if x != nil && x.Locator != nil {
		return *x.Locator
	}
	return ""
}

func (x *ComponentInfo) GetDocumentReadVersion() []uint32 {
	if x != nil {
		return x.DocumentReadVersion
	}
	return nil
}

func (x *ComponentInfo) GetDocumentWriteVersion() []uint32 {
	if x != nil {
		return x.DocumentWriteVersion
	}
	return nil
}

func (x *ComponentInfo) GetExternalReferences() []*ComponentExternalReference {
	if x != nil {
		return x.ExternalReferences
	}
	return nil
}

func (x *ComponentInfo) GetDataReferences() []*ComponentDataReference {
	if x != nil {
		return x.DataReferences
	}
	return nil
}

func (x *ComponentInfo) GetIsStoredOutsideObjectArchive() bool {
	if x != nil && x.IsStoredOutsideObjectArchive != nil {
		return *x.IsStoredOutsideObjectArchive
	}
	return Default_ComponentInfo_IsStoredOutsideObjectArchive
}

func (x *ComponentInfo) GetObjectUuidMapEntries() []*ObjectUUIDMapEntry {
	if x != nil {
		return x.ObjectUuidMapEntries
	}
	return nil
}

func (x *ComponentInfo) GetSaveToken() uint64 {
	if x != nil && x.SaveToken != nil {
		return *x.SaveToken
	}
	return Default_ComponentInfo_SaveToken
}

func (x *ComponentInfo) GetFeatureInfos() []*FeatureInfo {
	if x != nil {
		return x.FeatureInfos
	}
	return nil
}

func (x *ComponentInfo) GetComponentReadVersion() []uint32 {
	if x != nil {
		return x.ComponentReadVersion
	}
	return nil
}

func (x *ComponentInfo) GetComponentRequiredVersion() []uint32 {
	if x != nil {
		return x.ComponentRequiredVersion
	}
	return nil
}

func (x *ComponentInfo) GetCompressionAlgorithm() uint32 {
	if x != nil && x.CompressionAlgorithm != nil {
		return *x.CompressionAlgorithm
	}
	return 0
}

func (x *ComponentInfo) GetCanBeDropped() bool {
	if x != nil && x.CanBeDropped != nil {
		return *x.CanBeDropped
	}
	return false
}

func (x *ComponentInfo) GetVersionedExternalReferences() []*ComponentExternalReference {
	if x != nil {
		return x.VersionedExternalReferences
	}
	return nil
}

func (x *ComponentInfo) GetIsWasteful() bool {
	if x != nil && x.IsWasteful != nil {
		return *x.IsWasteful
	}
	return false
}

func (x *ComponentInfo) GetAmbiguousObjectIdentifiers() []uint64 {
	if x != nil {
		return x.AmbiguousObjectIdentifiers
	}
	return nil
}

func (x *ComponentInfo) GetRequiredPackageIdentifier() uint32 {
	if x != nil && x.RequiredPackageIdentifier != nil {
		return *x.RequiredPackageIdentifier
	}
	return 0
}

type ComponentExternalReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentIdentifier *uint64 `protobuf:"varint,1,req,name=component_identifier,json=componentIdentifier" json:"component_identifier,omitempty"`
	ObjectIdentifier    *uint64 `protobuf:"varint,2,opt,name=object_identifier,json=objectIdentifier" json:"object_identifier,omitempty"`
	IsWeak              *bool   `protobuf:"varint,3,opt,name=is_weak,json=isWeak" json:"is_weak,omitempty"`
}

func (x *ComponentExternalReference) Reset() {
	*x = ComponentExternalReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentExternalReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentExternalReference) ProtoMessage() {}

func (x *ComponentExternalReference) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentExternalReference.ProtoReflect.Descriptor instead.
func (*ComponentExternalReference) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{5}
}

func (x *ComponentExternalReference) GetComponentIdentifier() uint64 {
	if x != nil && x.ComponentIdentifier != nil {
		return *x.ComponentIdentifier
	}
	return 0
}

func (x *ComponentExternalReference) GetObjectIdentifier() uint64 {
	if x != nil && x.ObjectIdentifier != nil {
		return *x.ObjectIdentifier
	}
	return 0
}

func (x *ComponentExternalReference) GetIsWeak() bool {
	if x != nil && x.IsWeak != nil {
		return *x.IsWeak
	}
	return false
}

type ComponentDataReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataIdentifier      *uint64                                   `protobuf:"varint,1,req,name=data_identifier,json=dataIdentifier" json:"data_identifier,omitempty"`
	ObjectReferenceList []*ComponentDataReference_ObjectReference `protobuf:"bytes,2,rep,name=object_reference_list,json=objectReferenceList" json:"object_reference_list,omitempty"`
}

func (x *ComponentDataReference) Reset() {
	*x = ComponentDataReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDataReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDataReference) ProtoMessage() {}

func (x *ComponentDataReference) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDataReference.ProtoReflect.Descriptor instead.
func (*ComponentDataReference) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{6}
}

func (x *ComponentDataReference) GetDataIdentifier() uint64 {
	if x != nil && x.DataIdentifier != nil {
		return *x.DataIdentifier
	}
	return 0
}

func (x *ComponentDataReference) GetObjectReferenceList() []*ComponentDataReference_ObjectReference {
	if x != nil {
		return x.ObjectReferenceList
	}
	return nil
}

type ObjectUUIDMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *uint64 `protobuf:"varint,1,req,name=identifier" json:"identifier,omitempty"`
	Uuid       *UUID   `protobuf:"bytes,2,req,name=uuid" json:"uuid,omitempty"`
}

func (x *ObjectUUIDMapEntry) Reset() {
	*x = ObjectUUIDMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectUUIDMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectUUIDMapEntry) ProtoMessage() {}

func (x *ObjectUUIDMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectUUIDMapEntry.ProtoReflect.Descriptor instead.
func (*ObjectUUIDMapEntry) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{7}
}

func (x *ObjectUUIDMapEntry) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *ObjectUUIDMapEntry) GetUuid() *UUID {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type FeatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier   *string  `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	ReadVersion  []uint32 `protobuf:"varint,2,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
	WriteVersion []uint32 `protobuf:"varint,3,rep,packed,name=write_version,json=writeVersion" json:"write_version,omitempty"`
}

func (x *FeatureInfo) Reset() {
	*x = FeatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureInfo) ProtoMessage() {}

func (x *FeatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureInfo.ProtoReflect.Descriptor instead.
func (*FeatureInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{8}
}

func (x *FeatureInfo) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *FeatureInfo) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

func (x *FeatureInfo) GetWriteVersion() []uint32 {
	if x != nil {
		return x.WriteVersion
	}
	return nil
}

type PackageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastObjectIdentifier *uint64                      `protobuf:"varint,1,req,name=last_object_identifier,json=lastObjectIdentifier" json:"last_object_identifier,omitempty"`
	Revision             *DocumentRevision            `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	Components           []*ComponentInfo             `protobuf:"bytes,3,rep,name=components" json:"components,omitempty"`
	Datas                []*DataInfo                  `protobuf:"bytes,4,rep,name=datas" json:"datas,omitempty"`
	ReadVersion          []uint32                     `protobuf:"varint,5,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
	WriteVersion         []uint32                     `protobuf:"varint,6,rep,packed,name=write_version,json=writeVersion" json:"write_version,omitempty"`
	FileFormatVersion    []uint32                     `protobuf:"varint,7,rep,packed,name=file_format_version,json=fileFormatVersion" json:"file_format_version,omitempty"`
	SaveToken            *uint64                      `protobuf:"varint,8,opt,name=save_token,json=saveToken,def=0" json:"save_token,omitempty"`
	PreferredPackageType *PackageMetadata_PackageType `protobuf:"varint,9,opt,name=preferred_package_type,json=preferredPackageType,enum=TSP.PackageMetadata_PackageType,def=0" json:"preferred_package_type,omitempty"`
	DataMetadataMap      *Reference                   `protobuf:"bytes,10,opt,name=data_metadata_map,json=dataMetadataMap" json:"data_metadata_map,omitempty"`
	VersionedComponents  []*ComponentInfo             `protobuf:"bytes,11,rep,name=versioned_components,json=versionedComponents" json:"versioned_components,omitempty"`
}

// Default values for PackageMetadata fields.
const (
	Default_PackageMetadata_SaveToken            = uint64(0)
	Default_PackageMetadata_PreferredPackageType = PackageMetadata_Default
)

func (x *PackageMetadata) Reset() {
	*x = PackageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageMetadata) ProtoMessage() {}

func (x *PackageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageMetadata.ProtoReflect.Descriptor instead.
func (*PackageMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{9}
}

func (x *PackageMetadata) GetLastObjectIdentifier() uint64 {
	if x != nil && x.LastObjectIdentifier != nil {
		return *x.LastObjectIdentifier
	}
	return 0
}

func (x *PackageMetadata) GetRevision() *DocumentRevision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *PackageMetadata) GetComponents() []*ComponentInfo {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *PackageMetadata) GetDatas() []*DataInfo {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *PackageMetadata) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

func (x *PackageMetadata) GetWriteVersion() []uint32 {
	if x != nil {
		return x.WriteVersion
	}
	return nil
}

func (x *PackageMetadata) GetFileFormatVersion() []uint32 {
	if x != nil {
		return x.FileFormatVersion
	}
	return nil
}

func (x *PackageMetadata) GetSaveToken() uint64 {
	if x != nil && x.SaveToken != nil {
		return *x.SaveToken
	}
	return Default_PackageMetadata_SaveToken
}

func (x *PackageMetadata) GetPreferredPackageType() PackageMetadata_PackageType {
	if x != nil && x.PreferredPackageType != nil {
		return *x.PreferredPackageType
	}
	return Default_PackageMetadata_PreferredPackageType
}

func (x *PackageMetadata) GetDataMetadataMap() *Reference {
	if x != nil {
		return x.DataMetadataMap
	}
	return nil
}

func (x *PackageMetadata) GetVersionedComponents() []*ComponentInfo {
	if x != nil {
		return x.VersionedComponents
	}
	return nil
}

type DocumentRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence_32 *int32  `protobuf:"varint,3,opt,name=sequence_32,json=sequence32,def=0" json:"sequence_32,omitempty"`
	Identifier  *string `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	Sequence_64 *uint64 `protobuf:"varint,1,opt,name=sequence_64,json=sequence64,def=0" json:"sequence_64,omitempty"`
}

// Default values for DocumentRevision fields.
const (
	Default_DocumentRevision_Sequence_32 = int32(0)
	Default_DocumentRevision_Sequence_64 = uint64(0)
)

func (x *DocumentRevision) Reset() {
	*x = DocumentRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentRevision) ProtoMessage() {}

func (x *DocumentRevision) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentRevision.ProtoReflect.Descriptor instead.
func (*DocumentRevision) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{10}
}

func (x *DocumentRevision) GetSequence_32() int32 {
	if x != nil && x.Sequence_32 != nil {
		return *x.Sequence_32
	}
	return Default_DocumentRevision_Sequence_32
}

func (x *DocumentRevision) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *DocumentRevision) GetSequence_64() uint64 {
	if x != nil && x.Sequence_64 != nil {
		return *x.Sequence_64
	}
	return Default_DocumentRevision_Sequence_64
}

type PasteboardMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version            []uint32    `protobuf:"varint,1,rep,packed,name=version" json:"version,omitempty"`
	AppName            *string     `protobuf:"bytes,2,req,name=app_name,json=appName" json:"app_name,omitempty"`
	Datas              []*DataInfo `protobuf:"bytes,3,rep,name=datas" json:"datas,omitempty"`
	SourceDocumentUuid *UUID       `protobuf:"bytes,5,opt,name=source_document_uuid,json=sourceDocumentUuid" json:"source_document_uuid,omitempty"`
	DataMetadataMap    *Reference  `protobuf:"bytes,6,opt,name=data_metadata_map,json=dataMetadataMap" json:"data_metadata_map,omitempty"`
	ReadVersion        []uint32    `protobuf:"varint,7,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
}

func (x *PasteboardMetadata) Reset() {
	*x = PasteboardMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasteboardMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasteboardMetadata) ProtoMessage() {}

func (x *PasteboardMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasteboardMetadata.ProtoReflect.Descriptor instead.
func (*PasteboardMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{11}
}

func (x *PasteboardMetadata) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *PasteboardMetadata) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *PasteboardMetadata) GetDatas() []*DataInfo {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *PasteboardMetadata) GetSourceDocumentUuid() *UUID {
	if x != nil {
		return x.SourceDocumentUuid
	}
	return nil
}

func (x *PasteboardMetadata) GetDataMetadataMap() *Reference {
	if x != nil {
		return x.DataMetadataMap
	}
	return nil
}

func (x *PasteboardMetadata) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

type DataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier                  *uint64                    `protobuf:"varint,1,req,name=identifier" json:"identifier,omitempty"`
	Digest                      []byte                     `protobuf:"bytes,2,req,name=digest" json:"digest,omitempty"`
	PreferredFileName           *string                    `protobuf:"bytes,3,req,name=preferred_file_name,json=preferredFileName" json:"preferred_file_name,omitempty"`
	FileName                    *string                    `protobuf:"bytes,4,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	DocumentResourceLocator     *string                    `protobuf:"bytes,5,opt,name=document_resource_locator,json=documentResourceLocator" json:"document_resource_locator,omitempty"`
	SourceBookmarkData          []byte                     `protobuf:"bytes,6,opt,name=source_bookmark_data,json=sourceBookmarkData" json:"source_bookmark_data,omitempty"`
	RemoteUrl                   *string                    `protobuf:"bytes,7,opt,name=remote_url,json=remoteUrl" json:"remote_url,omitempty"`
	CanDownload                 *bool                      `protobuf:"varint,8,opt,name=can_download,json=canDownload,def=0" json:"can_download,omitempty"`
	DownloadPriority            *DataInfo_DownloadPriority `protobuf:"varint,9,opt,name=download_priority,json=downloadPriority,enum=TSP.DataInfo_DownloadPriority,def=1" json:"download_priority,omitempty"`
	Attributes                  *DataAttributes            `protobuf:"bytes,10,opt,name=attributes" json:"attributes,omitempty"`
	EncryptionInfo              *EncryptionInfo            `protobuf:"bytes,11,opt,name=encryption_info,json=encryptionInfo" json:"encryption_info,omitempty"`
	LastMismatchedDigest        []byte                     `protobuf:"bytes,12,opt,name=last_mismatched_digest,json=lastMismatchedDigest" json:"last_mismatched_digest,omitempty"`
	UnmaterializedRanges        *IndexSet                  `protobuf:"bytes,13,opt,name=unmaterialized_ranges,json=unmaterializedRanges" json:"unmaterialized_ranges,omitempty"`
	RemoteDataLength            *uint64                    `protobuf:"varint,14,opt,name=remote_data_length,json=remoteDataLength" json:"remote_data_length,omitempty"`
	RemoteDataHasPackageStorage *bool                      `protobuf:"varint,15,opt,name=remote_data_has_package_storage,json=remoteDataHasPackageStorage,def=0" json:"remote_data_has_package_storage,omitempty"`
	UploadStatus                *DataUploadStatus          `protobuf:"varint,16,opt,name=upload_status,json=uploadStatus,enum=TSP.DataUploadStatus,def=0" json:"upload_status,omitempty"`
	RemoteDataMtime             *float64                   `protobuf:"fixed64,17,opt,name=remote_data_mtime,json=remoteDataMtime" json:"remote_data_mtime,omitempty"`
	PasteboardExternalFilePath  *string                    `protobuf:"bytes,99,opt,name=pasteboard_external_file_path,json=pasteboardExternalFilePath" json:"pasteboard_external_file_path,omitempty"`
}

// Default values for DataInfo fields.
const (
	Default_DataInfo_CanDownload                 = bool(false)
	Default_DataInfo_DownloadPriority            = DataInfo_Default
	Default_DataInfo_RemoteDataHasPackageStorage = bool(false)
	Default_DataInfo_UploadStatus                = DataUploadStatus_DataUploadStatus_Pending
)

func (x *DataInfo) Reset() {
	*x = DataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInfo) ProtoMessage() {}

func (x *DataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInfo.ProtoReflect.Descriptor instead.
func (*DataInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{12}
}

func (x *DataInfo) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *DataInfo) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *DataInfo) GetPreferredFileName() string {
	if x != nil && x.PreferredFileName != nil {
		return *x.PreferredFileName
	}
	return ""
}

func (x *DataInfo) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *DataInfo) GetDocumentResourceLocator() string {
	if x != nil && x.DocumentResourceLocator != nil {
		return *x.DocumentResourceLocator
	}
	return ""
}

func (x *DataInfo) GetSourceBookmarkData() []byte {
	if x != nil {
		return x.SourceBookmarkData
	}
	return nil
}

func (x *DataInfo) GetRemoteUrl() string {
	if x != nil && x.RemoteUrl != nil {
		return *x.RemoteUrl
	}
	return ""
}

func (x *DataInfo) GetCanDownload() bool {
	if x != nil && x.CanDownload != nil {
		return *x.CanDownload
	}
	return Default_DataInfo_CanDownload
}

func (x *DataInfo) GetDownloadPriority() DataInfo_DownloadPriority {
	if x != nil && x.DownloadPriority != nil {
		return *x.DownloadPriority
	}
	return Default_DataInfo_DownloadPriority
}

func (x *DataInfo) GetAttributes() *DataAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *DataInfo) GetEncryptionInfo() *EncryptionInfo {
	if x != nil {
		return x.EncryptionInfo
	}
	return nil
}

func (x *DataInfo) GetLastMismatchedDigest() []byte {
	if x != nil {
		return x.LastMismatchedDigest
	}
	return nil
}

func (x *DataInfo) GetUnmaterializedRanges() *IndexSet {
	if x != nil {
		return x.UnmaterializedRanges
	}
	return nil
}

func (x *DataInfo) GetRemoteDataLength() uint64 {
	if x != nil && x.RemoteDataLength != nil {
		return *x.RemoteDataLength
	}
	return 0
}

func (x *DataInfo) GetRemoteDataHasPackageStorage() bool {
	if x != nil && x.RemoteDataHasPackageStorage != nil {
		return *x.RemoteDataHasPackageStorage
	}
	return Default_DataInfo_RemoteDataHasPackageStorage
}

func (x *DataInfo) GetUploadStatus() DataUploadStatus {
	if x != nil && x.UploadStatus != nil {
		return *x.UploadStatus
	}
	return Default_DataInfo_UploadStatus
}

func (x *DataInfo) GetRemoteDataMtime() float64 {
	if x != nil && x.RemoteDataMtime != nil {
		return *x.RemoteDataMtime
	}
	return 0
}

func (x *DataInfo) GetPasteboardExternalFilePath() string {
	if x != nil && x.PasteboardExternalFilePath != nil {
		return *x.PasteboardExternalFilePath
	}
	return ""
}

type DataMetadataMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataMetadataEntries []*DataMetadataMap_DataMetadataMapEntry `protobuf:"bytes,1,rep,name=data_metadata_entries,json=dataMetadataEntries" json:"data_metadata_entries,omitempty"`
}

func (x *DataMetadataMap) Reset() {
	*x = DataMetadataMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMetadataMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMetadataMap) ProtoMessage() {}

func (x *DataMetadataMap) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMetadataMap.ProtoReflect.Descriptor instead.
func (*DataMetadataMap) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{13}
}

func (x *DataMetadataMap) GetDataMetadataEntries() []*DataMetadataMap_DataMetadataMapEntry {
	if x != nil {
		return x.DataMetadataEntries
	}
	return nil
}

type DataMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FallbackColor *Color `protobuf:"bytes,1,opt,name=fallback_color,json=fallbackColor" json:"fallback_color,omitempty"`
}

func (x *DataMetadata) Reset() {
	*x = DataMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMetadata) ProtoMessage() {}

func (x *DataMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMetadata.ProtoReflect.Descriptor instead.
func (*DataMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{14}
}

func (x *DataMetadata) GetFallbackColor() *Color {
	if x != nil {
		return x.FallbackColor
	}
	return nil
}

type EncryptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecodedLength      *uint64                `protobuf:"varint,1,opt,name=decoded_length,json=decodedLength" json:"decoded_length,omitempty"`
	PreferredBlockSize *uint64                `protobuf:"varint,2,opt,name=preferred_block_size,json=preferredBlockSize" json:"preferred_block_size,omitempty"`
	BlockInfos         []*EncryptionBlockInfo `protobuf:"bytes,3,rep,name=block_infos,json=blockInfos" json:"block_infos,omitempty"`
}

func (x *EncryptionInfo) Reset() {
	*x = EncryptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionInfo) ProtoMessage() {}

func (x *EncryptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionInfo.ProtoReflect.Descriptor instead.
func (*EncryptionInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{15}
}

func (x *EncryptionInfo) GetDecodedLength() uint64 {
	if x != nil && x.DecodedLength != nil {
		return *x.DecodedLength
	}
	return 0
}

func (x *EncryptionInfo) GetPreferredBlockSize() uint64 {
	if x != nil && x.PreferredBlockSize != nil {
		return *x.PreferredBlockSize
	}
	return 0
}

func (x *EncryptionInfo) GetBlockInfos() []*EncryptionBlockInfo {
	if x != nil {
		return x.BlockInfos
	}
	return nil
}

type EncryptionBlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncodedLength *uint64 `protobuf:"varint,1,req,name=encoded_length,json=encodedLength" json:"encoded_length,omitempty"`
	DecodedLength *uint64 `protobuf:"varint,2,opt,name=decoded_length,json=decodedLength" json:"decoded_length,omitempty"`
}

func (x *EncryptionBlockInfo) Reset() {
	*x = EncryptionBlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionBlockInfo) ProtoMessage() {}

func (x *EncryptionBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionBlockInfo.ProtoReflect.Descriptor instead.
func (*EncryptionBlockInfo) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{16}
}

func (x *EncryptionBlockInfo) GetEncodedLength() uint64 {
	if x != nil && x.EncodedLength != nil {
		return *x.EncodedLength
	}
	return 0
}

func (x *EncryptionBlockInfo) GetDecodedLength() uint64 {
	if x != nil && x.DecodedLength != nil {
		return *x.DecodedLength
	}
	return 0
}

type ViewStateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                      []uint32              `protobuf:"varint,1,rep,packed,name=version" json:"version,omitempty"`
	VersionUuid                  *UUID                 `protobuf:"bytes,4,opt,name=version_uuid,json=versionUuid" json:"version_uuid,omitempty"`
	Component                    *ComponentInfo        `protobuf:"bytes,3,req,name=component" json:"component,omitempty"`
	ExternalObjectUuidMapEntries []*ObjectUUIDMapEntry `protobuf:"bytes,5,rep,name=external_object_uuid_map_entries,json=externalObjectUuidMapEntries" json:"external_object_uuid_map_entries,omitempty"`
	ReadVersion                  []uint32              `protobuf:"varint,6,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
}

func (x *ViewStateMetadata) Reset() {
	*x = ViewStateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateMetadata) ProtoMessage() {}

func (x *ViewStateMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateMetadata.ProtoReflect.Descriptor instead.
func (*ViewStateMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{17}
}

func (x *ViewStateMetadata) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ViewStateMetadata) GetVersionUuid() *UUID {
	if x != nil {
		return x.VersionUuid
	}
	return nil
}

func (x *ViewStateMetadata) GetComponent() *ComponentInfo {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *ViewStateMetadata) GetExternalObjectUuidMapEntries() []*ObjectUUIDMapEntry {
	if x != nil {
		return x.ExternalObjectUuidMapEntries
	}
	return nil
}

func (x *ViewStateMetadata) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

type ObjectSerializationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                      []uint32              `protobuf:"varint,1,rep,packed,name=version" json:"version,omitempty"`
	SourceDocumentUuid           *UUID                 `protobuf:"bytes,2,opt,name=source_document_uuid,json=sourceDocumentUuid" json:"source_document_uuid,omitempty"`
	VersionUuid                  *UUID                 `protobuf:"bytes,3,opt,name=version_uuid,json=versionUuid" json:"version_uuid,omitempty"`
	Component                    *ComponentInfo        `protobuf:"bytes,4,req,name=component" json:"component,omitempty"`
	Datas                        []*DataInfo           `protobuf:"bytes,5,rep,name=datas" json:"datas,omitempty"`
	ExternalObjectUuidMapEntries []*ObjectUUIDMapEntry `protobuf:"bytes,6,rep,name=external_object_uuid_map_entries,json=externalObjectUuidMapEntries" json:"external_object_uuid_map_entries,omitempty"`
	DataMetadataMap              *Reference            `protobuf:"bytes,7,opt,name=data_metadata_map,json=dataMetadataMap" json:"data_metadata_map,omitempty"`
	ReadVersion                  []uint32              `protobuf:"varint,8,rep,packed,name=read_version,json=readVersion" json:"read_version,omitempty"`
}

func (x *ObjectSerializationMetadata) Reset() {
	*x = ObjectSerializationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSerializationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSerializationMetadata) ProtoMessage() {}

func (x *ObjectSerializationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSerializationMetadata.ProtoReflect.Descriptor instead.
func (*ObjectSerializationMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{18}
}

func (x *ObjectSerializationMetadata) GetVersion() []uint32 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetSourceDocumentUuid() *UUID {
	if x != nil {
		return x.SourceDocumentUuid
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetVersionUuid() *UUID {
	if x != nil {
		return x.VersionUuid
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetComponent() *ComponentInfo {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetDatas() []*DataInfo {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetExternalObjectUuidMapEntries() []*ObjectUUIDMapEntry {
	if x != nil {
		return x.ExternalObjectUuidMapEntries
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetDataMetadataMap() *Reference {
	if x != nil {
		return x.DataMetadataMap
	}
	return nil
}

func (x *ObjectSerializationMetadata) GetReadVersion() []uint32 {
	if x != nil {
		return x.ReadVersion
	}
	return nil
}

type ObjectSerializationDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ObjectSerializationDirectory_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *ObjectSerializationDirectory) Reset() {
	*x = ObjectSerializationDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSerializationDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSerializationDirectory) ProtoMessage() {}

func (x *ObjectSerializationDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSerializationDirectory.ProtoReflect.Descriptor instead.
func (*ObjectSerializationDirectory) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{19}
}

func (x *ObjectSerializationDirectory) GetEntries() []*ObjectSerializationDirectory_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type DataPropertiesEntryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest                         []byte   `protobuf:"bytes,1,req,name=digest" json:"digest,omitempty"`
	ExpectsMatchedDigest           *bool    `protobuf:"varint,2,opt,name=expects_matched_digest,json=expectsMatchedDigest" json:"expects_matched_digest,omitempty"`
	CreationTimeIntervalSince_1970 *float64 `protobuf:"fixed64,3,opt,name=creation_time_interval_since_1970,json=creationTimeIntervalSince1970" json:"creation_time_interval_since_1970,omitempty"`
	CreationVersion                []uint32 `protobuf:"varint,4,rep,packed,name=creation_version,json=creationVersion" json:"creation_version,omitempty"`
	LastMismatchedDigest           []byte   `protobuf:"bytes,5,opt,name=last_mismatched_digest,json=lastMismatchedDigest" json:"last_mismatched_digest,omitempty"`
}

func (x *DataPropertiesEntryV1) Reset() {
	*x = DataPropertiesEntryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPropertiesEntryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPropertiesEntryV1) ProtoMessage() {}

func (x *DataPropertiesEntryV1) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPropertiesEntryV1.ProtoReflect.Descriptor instead.
func (*DataPropertiesEntryV1) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{20}
}

func (x *DataPropertiesEntryV1) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *DataPropertiesEntryV1) GetExpectsMatchedDigest() bool {
	if x != nil && x.ExpectsMatchedDigest != nil {
		return *x.ExpectsMatchedDigest
	}
	return false
}

func (x *DataPropertiesEntryV1) GetCreationTimeIntervalSince_1970() float64 {
	if x != nil && x.CreationTimeIntervalSince_1970 != nil {
		return *x.CreationTimeIntervalSince_1970
	}
	return 0
}

func (x *DataPropertiesEntryV1) GetCreationVersion() []uint32 {
	if x != nil {
		return x.CreationVersion
	}
	return nil
}

func (x *DataPropertiesEntryV1) GetLastMismatchedDigest() []byte {
	if x != nil {
		return x.LastMismatchedDigest
	}
	return nil
}

type DataPropertiesV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*DataPropertiesEntryV1 `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`
}

func (x *DataPropertiesV1) Reset() {
	*x = DataPropertiesV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPropertiesV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPropertiesV1) ProtoMessage() {}

func (x *DataPropertiesV1) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPropertiesV1.ProtoReflect.Descriptor instead.
func (*DataPropertiesV1) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{21}
}

func (x *DataPropertiesV1) GetProperties() []*DataPropertiesEntryV1 {
	if x != nil {
		return x.Properties
	}
	return nil
}

type DocumentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInCollaborationMode *bool             `protobuf:"varint,1,opt,name=is_in_collaboration_mode,json=isInCollaborationMode" json:"is_in_collaboration_mode,omitempty"`
	DataPropertiesV1      *DataPropertiesV1 `protobuf:"bytes,3,opt,name=data_properties_v1,json=dataPropertiesV1" json:"data_properties_v1,omitempty"`
}

func (x *DocumentMetadata) Reset() {
	*x = DocumentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentMetadata) ProtoMessage() {}

func (x *DocumentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentMetadata.ProtoReflect.Descriptor instead.
func (*DocumentMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{22}
}

func (x *DocumentMetadata) GetIsInCollaborationMode() bool {
	if x != nil && x.IsInCollaborationMode != nil {
		return *x.IsInCollaborationMode
	}
	return false
}

func (x *DocumentMetadata) GetDataPropertiesV1() *DataPropertiesV1 {
	if x != nil {
		return x.DataPropertiesV1
	}
	return nil
}

type SupportMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInCollaborationMode       *bool                                          `protobuf:"varint,1,opt,name=is_in_collaboration_mode,json=isInCollaborationMode" json:"is_in_collaboration_mode,omitempty"`
	DataCollaborationProperties []*SupportMetadata_DataCollaborationProperties `protobuf:"bytes,2,rep,name=data_collaboration_properties,json=dataCollaborationProperties" json:"data_collaboration_properties,omitempty"`
}

func (x *SupportMetadata) Reset() {
	*x = SupportMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportMetadata) ProtoMessage() {}

func (x *SupportMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportMetadata.ProtoReflect.Descriptor instead.
func (*SupportMetadata) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{23}
}

func (x *SupportMetadata) GetIsInCollaborationMode() bool {
	if x != nil && x.IsInCollaborationMode != nil {
		return *x.IsInCollaborationMode
	}
	return false
}

func (x *SupportMetadata) GetDataCollaborationProperties() []*SupportMetadata_DataCollaborationProperties {
	if x != nil {
		return x.DataCollaborationProperties
	}
	return nil
}

type ComponentDataReference_ObjectReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdentifier *uint64 `protobuf:"varint,1,req,name=object_identifier,json=objectIdentifier" json:"object_identifier,omitempty"`
	Count            *uint32 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *ComponentDataReference_ObjectReference) Reset() {
	*x = ComponentDataReference_ObjectReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDataReference_ObjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDataReference_ObjectReference) ProtoMessage() {}

func (x *ComponentDataReference_ObjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDataReference_ObjectReference.ProtoReflect.Descriptor instead.
func (*ComponentDataReference_ObjectReference) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ComponentDataReference_ObjectReference) GetObjectIdentifier() uint64 {
	if x != nil && x.ObjectIdentifier != nil {
		return *x.ObjectIdentifier
	}
	return 0
}

func (x *ComponentDataReference_ObjectReference) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type DataMetadataMap_DataMetadataMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataIdentifier *uint64    `protobuf:"varint,1,req,name=data_identifier,json=dataIdentifier" json:"data_identifier,omitempty"`
	DataMetadata   *Reference `protobuf:"bytes,2,req,name=data_metadata,json=dataMetadata" json:"data_metadata,omitempty"`
}

func (x *DataMetadataMap_DataMetadataMapEntry) Reset() {
	*x = DataMetadataMap_DataMetadataMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMetadataMap_DataMetadataMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMetadataMap_DataMetadataMapEntry) ProtoMessage() {}

func (x *DataMetadataMap_DataMetadataMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMetadataMap_DataMetadataMapEntry.ProtoReflect.Descriptor instead.
func (*DataMetadataMap_DataMetadataMapEntry) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{13, 0}
}

func (x *DataMetadataMap_DataMetadataMapEntry) GetDataIdentifier() uint64 {
	if x != nil && x.DataIdentifier != nil {
		return *x.DataIdentifier
	}
	return 0
}

func (x *DataMetadataMap_DataMetadataMapEntry) GetDataMetadata() *Reference {
	if x != nil {
		return x.DataMetadata
	}
	return nil
}

type ObjectSerializationDirectory_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locator *string `protobuf:"bytes,1,req,name=locator" json:"locator,omitempty"`
	Offset  *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	Size    *uint64 `protobuf:"varint,3,req,name=size" json:"size,omitempty"`
}

func (x *ObjectSerializationDirectory_Entry) Reset() {
	*x = ObjectSerializationDirectory_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSerializationDirectory_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSerializationDirectory_Entry) ProtoMessage() {}

func (x *ObjectSerializationDirectory_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSerializationDirectory_Entry.ProtoReflect.Descriptor instead.
func (*ObjectSerializationDirectory_Entry) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ObjectSerializationDirectory_Entry) GetLocator() string {
	if x != nil && x.Locator != nil {
		return *x.Locator
	}
	return ""
}

func (x *ObjectSerializationDirectory_Entry) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ObjectSerializationDirectory_Entry) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type SupportMetadata_DataCollaborationProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest                                  []byte            `protobuf:"bytes,1,req,name=digest" json:"digest,omitempty"`
	AcknowledgedByServer                    *bool             `protobuf:"varint,2,opt,name=acknowledged_by_server,json=acknowledgedByServer,def=0" json:"acknowledged_by_server,omitempty"`
	MaterializedOnServer                    *bool             `protobuf:"varint,3,opt,name=materialized_on_server,json=materializedOnServer,def=0" json:"materialized_on_server,omitempty"`
	RevisionSequenceForMaterializedOnServer *int32            `protobuf:"varint,5,opt,name=revision_sequence_for_materialized_on_server,json=revisionSequenceForMaterializedOnServer,def=0" json:"revision_sequence_for_materialized_on_server,omitempty"`
	UploadStatus                            *DataUploadStatus `protobuf:"varint,4,opt,name=upload_status,json=uploadStatus,enum=TSP.DataUploadStatus,def=0" json:"upload_status,omitempty"`
	IsRemoteDataEver                        *bool             `protobuf:"varint,6,opt,name=is_remote_data_ever,json=isRemoteDataEver,def=0" json:"is_remote_data_ever,omitempty"`
}

// Default values for SupportMetadata_DataCollaborationProperties fields.
const (
	Default_SupportMetadata_DataCollaborationProperties_AcknowledgedByServer                    = bool(false)
	Default_SupportMetadata_DataCollaborationProperties_MaterializedOnServer                    = bool(false)
	Default_SupportMetadata_DataCollaborationProperties_RevisionSequenceForMaterializedOnServer = int32(0)
	Default_SupportMetadata_DataCollaborationProperties_UploadStatus                            = DataUploadStatus_DataUploadStatus_Pending
	Default_SupportMetadata_DataCollaborationProperties_IsRemoteDataEver                        = bool(false)
)

func (x *SupportMetadata_DataCollaborationProperties) Reset() {
	*x = SupportMetadata_DataCollaborationProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSPArchiveMessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportMetadata_DataCollaborationProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportMetadata_DataCollaborationProperties) ProtoMessage() {}

func (x *SupportMetadata_DataCollaborationProperties) ProtoReflect() protoreflect.Message {
	mi := &file_TSPArchiveMessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportMetadata_DataCollaborationProperties.ProtoReflect.Descriptor instead.
func (*SupportMetadata_DataCollaborationProperties) Descriptor() ([]byte, []int) {
	return file_TSPArchiveMessages_proto_rawDescGZIP(), []int{23, 0}
}

func (x *SupportMetadata_DataCollaborationProperties) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *SupportMetadata_DataCollaborationProperties) GetAcknowledgedByServer() bool {
	if x != nil && x.AcknowledgedByServer != nil {
		return *x.AcknowledgedByServer
	}
	return Default_SupportMetadata_DataCollaborationProperties_AcknowledgedByServer
}

func (x *SupportMetadata_DataCollaborationProperties) GetMaterializedOnServer() bool {
	if x != nil && x.MaterializedOnServer != nil {
		return *x.MaterializedOnServer
	}
	return Default_SupportMetadata_DataCollaborationProperties_MaterializedOnServer
}

func (x *SupportMetadata_DataCollaborationProperties) GetRevisionSequenceForMaterializedOnServer() int32 {
	if x != nil && x.RevisionSequenceForMaterializedOnServer != nil {
		return *x.RevisionSequenceForMaterializedOnServer
	}
	return Default_SupportMetadata_DataCollaborationProperties_RevisionSequenceForMaterializedOnServer
}

func (x *SupportMetadata_DataCollaborationProperties) GetUploadStatus() DataUploadStatus {
	if x != nil && x.UploadStatus != nil {
		return *x.UploadStatus
	}
	return Default_SupportMetadata_DataCollaborationProperties_UploadStatus
}

func (x *SupportMetadata_DataCollaborationProperties) GetIsRemoteDataEver() bool {
	if x != nil && x.IsRemoteDataEver != nil {
		return *x.IsRemoteDataEver
	}
	return Default_SupportMetadata_DataCollaborationProperties_IsRemoteDataEver
}

var File_TSPArchiveMessages_proto protoreflect.FileDescriptor

var file_TSPArchiveMessages_proto_rawDesc = []byte{
	0x0a, 0x18, 0x54, 0x53, 0x50, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x54, 0x53, 0x50, 0x1a,
	0x11, 0x54, 0x53, 0x50, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x53, 0x50, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x22, 0xe8, 0x03, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53,
	0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2f, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x12, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x10, 0x64, 0x69, 0x66, 0x66, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d,
	0x64, 0x69, 0x66, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x38, 0x0a,
	0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x54,
	0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x11, 0x64, 0x69, 0x66, 0x66, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x06, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x3a, 0x1e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6e,
	0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x3a,
	0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x52, 0x0e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x13, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x11, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x1e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1b, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x46,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0x03, 0x22, 0x7c, 0x0a, 0x10, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x75, 0x73, 0x74, 0x55, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x0c, 0x4e, 0x6f, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x22, 0x57, 0x0a, 0x0e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x4e, 0x65, 0x77, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x02, 0x22, 0x23, 0x0a,
	0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0xdb, 0x08, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x15, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x13,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x16, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x14, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a,
	0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x20, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1c, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x4e, 0x0a, 0x17, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x55, 0x49, 0x44, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x73, 0x61, 0x76,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x54, 0x53, 0x50, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x38, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x18, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x44, 0x72, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x1d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x53,
	0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x1b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x77, 0x61, 0x73, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x57, 0x61, 0x73, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x12, 0x44, 0x0a, 0x1c, 0x61, 0x6d,
	0x62, 0x69, 0x67, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x02, 0x10, 0x01, 0x52, 0x1a, 0x61, 0x6d, 0x62, 0x69, 0x67, 0x75, 0x6f, 0x75, 0x73, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x12, 0x3e, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0x95, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x13, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x57, 0x65, 0x61, 0x6b, 0x22, 0xf8, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x15,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53,
	0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x54, 0x0a,
	0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x12, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x05, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x16, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x25, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52,
	0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x11,
	0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x73, 0x61, 0x76, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x5f, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x14,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70,
	0x12, 0x45, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x13, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x10, 0x02, 0x22, 0x7a, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0a,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x33, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x3a,
	0x01, 0x30, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x36, 0x34, 0x22, 0x92,
	0x02, 0x0a, 0x12, 0x50, 0x61, 0x73, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x12, 0x3b, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x12, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x3a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53,
	0x50, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x0c,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xf4, 0x07, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x54, 0x0a, 0x11,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x3a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x69,
	0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x15, 0x75,
	0x6e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x74, 0x52, 0x14, 0x75, 0x6e, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x4b, 0x0a,
	0x1f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61, 0x73,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x1b, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x18, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x1d,
	0x70, 0x61, 0x73, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x63, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x61, 0x73, 0x74, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0x29, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x12, 0x5d,
	0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x61, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x74, 0x0a,
	0x14, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0e,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x33,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0e, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x53,
	0x50, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x63, 0x0a,
	0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0x99, 0x02, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54,
	0x53, 0x50, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6d,
	0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1c, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc1,
	0x03, 0x0a, 0x1b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x14,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x5f,
	0x0a, 0x20, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x55, 0x49, 0x44, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x1c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x3a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x53, 0x50,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x12, 0x25, 0x0a, 0x0c, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x1c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x4d, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x31, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x21, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x31, 0x39,
	0x37, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x31, 0x39, 0x37, 0x30, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x56, 0x31,
	0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x56, 0x31,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a,
	0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x76, 0x31,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x56, 0x31, 0x52, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x56, 0x31, 0x22,
	0xe0, 0x04, 0x0a, 0x0f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x74, 0x0a, 0x1d,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x54, 0x53, 0x50, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x1b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x1a, 0x9d, 0x03, 0x0a, 0x1b, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x16, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x14, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x16, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x14,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x2c, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x27, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x46,
	0x6f, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x54, 0x53, 0x50, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x3a, 0x18, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x13,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65,
	0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x10, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76,
	0x65, 0x72, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6b, 0x70, 0x62,
}

var (
	file_TSPArchiveMessages_proto_rawDescOnce sync.Once
	file_TSPArchiveMessages_proto_rawDescData = file_TSPArchiveMessages_proto_rawDesc
)

func file_TSPArchiveMessages_proto_rawDescGZIP() []byte {
	file_TSPArchiveMessages_proto_rawDescOnce.Do(func() {
		file_TSPArchiveMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_TSPArchiveMessages_proto_rawDescData)
	})
	return file_TSPArchiveMessages_proto_rawDescData
}

var file_TSPArchiveMessages_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_TSPArchiveMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_TSPArchiveMessages_proto_goTypes = []interface{}{
	(FieldInfo_Type)(0),                                 // 0: TSP.FieldInfo.Type
	(FieldInfo_UnknownFieldRule)(0),                     // 1: TSP.FieldInfo.UnknownFieldRule
	(FieldInfo_KnownFieldRule)(0),                       // 2: TSP.FieldInfo.KnownFieldRule
	(PackageMetadata_PackageType)(0),                    // 3: TSP.PackageMetadata.PackageType
	(DataInfo_DownloadPriority)(0),                      // 4: TSP.DataInfo.DownloadPriority
	(*ArchiveInfo)(nil),                                 // 5: TSP.ArchiveInfo
	(*MessageInfo)(nil),                                 // 6: TSP.MessageInfo
	(*FieldInfo)(nil),                                   // 7: TSP.FieldInfo
	(*FieldPath)(nil),                                   // 8: TSP.FieldPath
	(*ComponentInfo)(nil),                               // 9: TSP.ComponentInfo
	(*ComponentExternalReference)(nil),                  // 10: TSP.ComponentExternalReference
	(*ComponentDataReference)(nil),                      // 11: TSP.ComponentDataReference
	(*ObjectUUIDMapEntry)(nil),                          // 12: TSP.ObjectUUIDMapEntry
	(*FeatureInfo)(nil),                                 // 13: TSP.FeatureInfo
	(*PackageMetadata)(nil),                             // 14: TSP.PackageMetadata
	(*DocumentRevision)(nil),                            // 15: TSP.DocumentRevision
	(*PasteboardMetadata)(nil),                          // 16: TSP.PasteboardMetadata
	(*DataInfo)(nil),                                    // 17: TSP.DataInfo
	(*DataMetadataMap)(nil),                             // 18: TSP.DataMetadataMap
	(*DataMetadata)(nil),                                // 19: TSP.DataMetadata
	(*EncryptionInfo)(nil),                              // 20: TSP.EncryptionInfo
	(*EncryptionBlockInfo)(nil),                         // 21: TSP.EncryptionBlockInfo
	(*ViewStateMetadata)(nil),                           // 22: TSP.ViewStateMetadata
	(*ObjectSerializationMetadata)(nil),                 // 23: TSP.ObjectSerializationMetadata
	(*ObjectSerializationDirectory)(nil),                // 24: TSP.ObjectSerializationDirectory
	(*DataPropertiesEntryV1)(nil),                       // 25: TSP.DataPropertiesEntryV1
	(*DataPropertiesV1)(nil),                            // 26: TSP.DataPropertiesV1
	(*DocumentMetadata)(nil),                            // 27: TSP.DocumentMetadata
	(*SupportMetadata)(nil),                             // 28: TSP.SupportMetadata
	(*ComponentDataReference_ObjectReference)(nil),      // 29: TSP.ComponentDataReference.ObjectReference
	(*DataMetadataMap_DataMetadataMapEntry)(nil),        // 30: TSP.DataMetadataMap.DataMetadataMapEntry
	(*ObjectSerializationDirectory_Entry)(nil),          // 31: TSP.ObjectSerializationDirectory.Entry
	(*SupportMetadata_DataCollaborationProperties)(nil), // 32: TSP.SupportMetadata.DataCollaborationProperties
	(*UUID)(nil),                                        // 33: TSP.UUID
	(*Reference)(nil),                                   // 34: TSP.Reference
	(*DataAttributes)(nil),                              // 35: TSP.DataAttributes
	(*IndexSet)(nil),                                    // 36: TSP.IndexSet
	(DataUploadStatus)(0),                               // 37: TSP.DataUploadStatus
	(*Color)(nil),                                       // 38: TSP.Color
}
var file_TSPArchiveMessages_proto_depIdxs = []int32{
	6,  // 0: TSP.ArchiveInfo.message_infos:type_name -> TSP.MessageInfo
	7,  // 1: TSP.MessageInfo.field_infos:type_name -> TSP.FieldInfo
	8,  // 2: TSP.MessageInfo.diff_field_path:type_name -> TSP.FieldPath
	8,  // 3: TSP.MessageInfo.fields_to_remove:type_name -> TSP.FieldPath
	8,  // 4: TSP.FieldInfo.path:type_name -> TSP.FieldPath
	0,  // 5: TSP.FieldInfo.type:type_name -> TSP.FieldInfo.Type
	1,  // 6: TSP.FieldInfo.unknown_field_rule:type_name -> TSP.FieldInfo.UnknownFieldRule
	2,  // 7: TSP.FieldInfo.known_field_rule:type_name -> TSP.FieldInfo.KnownFieldRule
	10, // 8: TSP.ComponentInfo.external_references:type_name -> TSP.ComponentExternalReference
	11, // 9: TSP.ComponentInfo.data_references:type_name -> TSP.ComponentDataReference
	12, // 10: TSP.ComponentInfo.object_uuid_map_entries:type_name -> TSP.ObjectUUIDMapEntry
	13, // 11: TSP.ComponentInfo.feature_infos:type_name -> TSP.FeatureInfo
	10, // 12: TSP.ComponentInfo.versioned_external_references:type_name -> TSP.ComponentExternalReference
	29, // 13: TSP.ComponentDataReference.object_reference_list:type_name -> TSP.ComponentDataReference.ObjectReference
	33, // 14: TSP.ObjectUUIDMapEntry.uuid:type_name -> TSP.UUID
	15, // 15: TSP.PackageMetadata.revision:type_name -> TSP.DocumentRevision
	9,  // 16: TSP.PackageMetadata.components:type_name -> TSP.ComponentInfo
	17, // 17: TSP.PackageMetadata.datas:type_name -> TSP.DataInfo
	3,  // 18: TSP.PackageMetadata.preferred_package_type:type_name -> TSP.PackageMetadata.PackageType
	34, // 19: TSP.PackageMetadata.data_metadata_map:type_name -> TSP.Reference
	9,  // 20: TSP.PackageMetadata.versioned_components:type_name -> TSP.ComponentInfo
	17, // 21: TSP.PasteboardMetadata.datas:type_name -> TSP.DataInfo
	33, // 22: TSP.PasteboardMetadata.source_document_uuid:type_name -> TSP.UUID
	34, // 23: TSP.PasteboardMetadata.data_metadata_map:type_name -> TSP.Reference
	4,  // 24: TSP.DataInfo.download_priority:type_name -> TSP.DataInfo.DownloadPriority
	35, // 25: TSP.DataInfo.attributes:type_name -> TSP.DataAttributes
	20, // 26: TSP.DataInfo.encryption_info:type_name -> TSP.EncryptionInfo
	36, // 27: TSP.DataInfo.unmaterialized_ranges:type_name -> TSP.IndexSet
	37, // 28: TSP.DataInfo.upload_status:type_name -> TSP.DataUploadStatus
	30, // 29: TSP.DataMetadataMap.data_metadata_entries:type_name -> TSP.DataMetadataMap.DataMetadataMapEntry
	38, // 30: TSP.DataMetadata.fallback_color:type_name -> TSP.Color
	21, // 31: TSP.EncryptionInfo.block_infos:type_name -> TSP.EncryptionBlockInfo
	33, // 32: TSP.ViewStateMetadata.version_uuid:type_name -> TSP.UUID
	9,  // 33: TSP.ViewStateMetadata.component:type_name -> TSP.ComponentInfo
	12, // 34: TSP.ViewStateMetadata.external_object_uuid_map_entries:type_name -> TSP.ObjectUUIDMapEntry
	33, // 35: TSP.ObjectSerializationMetadata.source_document_uuid:type_name -> TSP.UUID
	33, // 36: TSP.ObjectSerializationMetadata.version_uuid:type_name -> TSP.UUID
	9,  // 37: TSP.ObjectSerializationMetadata.component:type_name -> TSP.ComponentInfo
	17, // 38: TSP.ObjectSerializationMetadata.datas:type_name -> TSP.DataInfo
	12, // 39: TSP.ObjectSerializationMetadata.external_object_uuid_map_entries:type_name -> TSP.ObjectUUIDMapEntry
	34, // 40: TSP.ObjectSerializationMetadata.data_metadata_map:type_name -> TSP.Reference
	31, // 41: TSP.ObjectSerializationDirectory.entries:type_name -> TSP.ObjectSerializationDirectory.Entry
	25, // 42: TSP.DataPropertiesV1.properties:type_name -> TSP.DataPropertiesEntryV1
	26, // 43: TSP.DocumentMetadata.data_properties_v1:type_name -> TSP.DataPropertiesV1
	32, // 44: TSP.SupportMetadata.data_collaboration_properties:type_name -> TSP.SupportMetadata.DataCollaborationProperties
	34, // 45: TSP.DataMetadataMap.DataMetadataMapEntry.data_metadata:type_name -> TSP.Reference
	37, // 46: TSP.SupportMetadata.DataCollaborationProperties.upload_status:type_name -> TSP.DataUploadStatus
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_TSPArchiveMessages_proto_init() }
func file_TSPArchiveMessages_proto_init() {
	if File_TSPArchiveMessages_proto != nil {
		return
	}
	file_TSPMessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TSPArchiveMessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentExternalReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDataReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectUUIDMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasteboardMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMetadataMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionBlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSerializationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSerializationDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPropertiesEntryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPropertiesV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDataReference_ObjectReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMetadataMap_DataMetadataMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSerializationDirectory_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSPArchiveMessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportMetadata_DataCollaborationProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TSPArchiveMessages_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TSPArchiveMessages_proto_goTypes,
		DependencyIndexes: file_TSPArchiveMessages_proto_depIdxs,
		EnumInfos:         file_TSPArchiveMessages_proto_enumTypes,
		MessageInfos:      file_TSPArchiveMessages_proto_msgTypes,
	}.Build()
	File_TSPArchiveMessages_proto = out.File
	file_TSPArchiveMessages_proto_rawDesc = nil
	file_TSPArchiveMessages_proto_goTypes = nil
	file_TSPArchiveMessages_proto_depIdxs = nil
}
