// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: TSTArchives_sos.proto

package kpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecSetTableStrokePresetListArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableStrokePresetList *StrokePresetListArchive `protobuf:"bytes,1,opt,name=table_stroke_preset_list,json=tableStrokePresetList" json:"table_stroke_preset_list,omitempty"`
	Unset                 *bool                    `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetTableStrokePresetListArchive) Reset() {
	*x = SpecSetTableStrokePresetListArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSTArchives_sos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetTableStrokePresetListArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetTableStrokePresetListArchive) ProtoMessage() {}

func (x *SpecSetTableStrokePresetListArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSTArchives_sos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetTableStrokePresetListArchive.ProtoReflect.Descriptor instead.
func (*SpecSetTableStrokePresetListArchive) Descriptor() ([]byte, []int) {
	return file_TSTArchives_sos_proto_rawDescGZIP(), []int{0}
}

func (x *SpecSetTableStrokePresetListArchive) GetTableStrokePresetList() *StrokePresetListArchive {
	if x != nil {
		return x.TableStrokePresetList
	}
	return nil
}

func (x *SpecSetTableStrokePresetListArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecTableStrokePresetListArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetTableStrokePresetList *SpecSetTableStrokePresetListArchive `protobuf:"bytes,1,opt,name=spec_set_table_stroke_preset_list,json=specSetTableStrokePresetList" json:"spec_set_table_stroke_preset_list,omitempty"`
}

func (x *SpecTableStrokePresetListArchive) Reset() {
	*x = SpecTableStrokePresetListArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSTArchives_sos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecTableStrokePresetListArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecTableStrokePresetListArchive) ProtoMessage() {}

func (x *SpecTableStrokePresetListArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSTArchives_sos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecTableStrokePresetListArchive.ProtoReflect.Descriptor instead.
func (*SpecTableStrokePresetListArchive) Descriptor() ([]byte, []int) {
	return file_TSTArchives_sos_proto_rawDescGZIP(), []int{1}
}

func (x *SpecTableStrokePresetListArchive) GetSpecSetTableStrokePresetList() *SpecSetTableStrokePresetListArchive {
	if x != nil {
		return x.SpecSetTableStrokePresetList
	}
	return nil
}

type TableCellStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextWrap                   *SpecBoolArchive    `protobuf:"bytes,1,opt,name=text_wrap,json=textWrap" json:"text_wrap,omitempty"`
	TextWrapUndefined          *bool               `protobuf:"varint,2,opt,name=text_wrap_undefined,json=textWrapUndefined" json:"text_wrap_undefined,omitempty"`
	Type                       *SpecIntegerArchive `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	TypeUndefined              *bool               `protobuf:"varint,4,opt,name=type_undefined,json=typeUndefined" json:"type_undefined,omitempty"`
	Fill                       *SpecFillArchive    `protobuf:"bytes,5,opt,name=fill" json:"fill,omitempty"`
	FillUndefined              *bool               `protobuf:"varint,6,opt,name=fill_undefined,json=fillUndefined" json:"fill_undefined,omitempty"`
	VerticalAlignment          *SpecIntegerArchive `protobuf:"bytes,7,opt,name=vertical_alignment,json=verticalAlignment" json:"vertical_alignment,omitempty"`
	VerticalAlignmentUndefined *bool               `protobuf:"varint,8,opt,name=vertical_alignment_undefined,json=verticalAlignmentUndefined" json:"vertical_alignment_undefined,omitempty"`
	Padding                    *SpecPaddingArchive `protobuf:"bytes,9,opt,name=padding" json:"padding,omitempty"`
	PaddingUndefined           *bool               `protobuf:"varint,10,opt,name=padding_undefined,json=paddingUndefined" json:"padding_undefined,omitempty"`
}

func (x *TableCellStylePropertyChangeSetArchive) Reset() {
	*x = TableCellStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSTArchives_sos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCellStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCellStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *TableCellStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSTArchives_sos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCellStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*TableCellStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSTArchives_sos_proto_rawDescGZIP(), []int{2}
}

func (x *TableCellStylePropertyChangeSetArchive) GetTextWrap() *SpecBoolArchive {
	if x != nil {
		return x.TextWrap
	}
	return nil
}

func (x *TableCellStylePropertyChangeSetArchive) GetTextWrapUndefined() bool {
	if x != nil && x.TextWrapUndefined != nil {
		return *x.TextWrapUndefined
	}
	return false
}

func (x *TableCellStylePropertyChangeSetArchive) GetType() *SpecIntegerArchive {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *TableCellStylePropertyChangeSetArchive) GetTypeUndefined() bool {
	if x != nil && x.TypeUndefined != nil {
		return *x.TypeUndefined
	}
	return false
}

func (x *TableCellStylePropertyChangeSetArchive) GetFill() *SpecFillArchive {
	if x != nil {
		return x.Fill
	}
	return nil
}

func (x *TableCellStylePropertyChangeSetArchive) GetFillUndefined() bool {
	if x != nil && x.FillUndefined != nil {
		return *x.FillUndefined
	}
	return false
}

func (x *TableCellStylePropertyChangeSetArchive) GetVerticalAlignment() *SpecIntegerArchive {
	if x != nil {
		return x.VerticalAlignment
	}
	return nil
}

func (x *TableCellStylePropertyChangeSetArchive) GetVerticalAlignmentUndefined() bool {
	if x != nil && x.VerticalAlignmentUndefined != nil {
		return *x.VerticalAlignmentUndefined
	}
	return false
}

func (x *TableCellStylePropertyChangeSetArchive) GetPadding() *SpecPaddingArchive {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *TableCellStylePropertyChangeSetArchive) GetPaddingUndefined() bool {
	if x != nil && x.PaddingUndefined != nil {
		return *x.PaddingUndefined
	}
	return false
}

type TableStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoResize                                      *SpecBoolArchive                  `protobuf:"bytes,1,opt,name=auto_resize,json=autoResize" json:"auto_resize,omitempty"`
	AutoResizeUndefined                             *bool                             `protobuf:"varint,2,opt,name=auto_resize_undefined,json=autoResizeUndefined" json:"auto_resize_undefined,omitempty"`
	BandedRows                                      *SpecBoolArchive                  `protobuf:"bytes,3,opt,name=banded_rows,json=bandedRows" json:"banded_rows,omitempty"`
	BandedRowsUndefined                             *bool                             `protobuf:"varint,4,opt,name=banded_rows_undefined,json=bandedRowsUndefined" json:"banded_rows_undefined,omitempty"`
	BandedCellFill                                  *SpecFillArchive                  `protobuf:"bytes,5,opt,name=banded_cell_fill,json=bandedCellFill" json:"banded_cell_fill,omitempty"`
	BandedCellFillUndefined                         *bool                             `protobuf:"varint,6,opt,name=banded_cell_fill_undefined,json=bandedCellFillUndefined" json:"banded_cell_fill_undefined,omitempty"`
	BehavesLikeSpreadsheet                          *SpecBoolArchive                  `protobuf:"bytes,7,opt,name=behaves_like_spreadsheet,json=behavesLikeSpreadsheet" json:"behaves_like_spreadsheet,omitempty"`
	BehavesLikeSpreadsheetUndefined                 *bool                             `protobuf:"varint,8,opt,name=behaves_like_spreadsheet_undefined,json=behavesLikeSpreadsheetUndefined" json:"behaves_like_spreadsheet_undefined,omitempty"`
	BodyHorizontalBorderStroke                      *SpecStrokeArchive                `protobuf:"bytes,9,opt,name=body_horizontal_border_stroke,json=bodyHorizontalBorderStroke" json:"body_horizontal_border_stroke,omitempty"`
	BodyHorizontalBorderStrokeUndefined             *bool                             `protobuf:"varint,10,opt,name=body_horizontal_border_stroke_undefined,json=bodyHorizontalBorderStrokeUndefined" json:"body_horizontal_border_stroke_undefined,omitempty"`
	BodyVerticalBorderStroke                        *SpecStrokeArchive                `protobuf:"bytes,11,opt,name=body_vertical_border_stroke,json=bodyVerticalBorderStroke" json:"body_vertical_border_stroke,omitempty"`
	BodyVerticalBorderStrokeUndefined               *bool                             `protobuf:"varint,12,opt,name=body_vertical_border_stroke_undefined,json=bodyVerticalBorderStrokeUndefined" json:"body_vertical_border_stroke_undefined,omitempty"`
	BodyHorizontalStroke                            *SpecStrokeArchive                `protobuf:"bytes,13,opt,name=body_horizontal_stroke,json=bodyHorizontalStroke" json:"body_horizontal_stroke,omitempty"`
	BodyHorizontalStrokeUndefined                   *bool                             `protobuf:"varint,14,opt,name=body_horizontal_stroke_undefined,json=bodyHorizontalStrokeUndefined" json:"body_horizontal_stroke_undefined,omitempty"`
	BodyVerticalStroke                              *SpecStrokeArchive                `protobuf:"bytes,15,opt,name=body_vertical_stroke,json=bodyVerticalStroke" json:"body_vertical_stroke,omitempty"`
	BodyVerticalStrokeUndefined                     *bool                             `protobuf:"varint,16,opt,name=body_vertical_stroke_undefined,json=bodyVerticalStrokeUndefined" json:"body_vertical_stroke_undefined,omitempty"`
	HeaderColumnBorderStroke                        *SpecStrokeArchive                `protobuf:"bytes,17,opt,name=header_column_border_stroke,json=headerColumnBorderStroke" json:"header_column_border_stroke,omitempty"`
	HeaderColumnBorderStrokeUndefined               *bool                             `protobuf:"varint,18,opt,name=header_column_border_stroke_undefined,json=headerColumnBorderStrokeUndefined" json:"header_column_border_stroke_undefined,omitempty"`
	HeaderColumnVerticalStroke                      *SpecStrokeArchive                `protobuf:"bytes,19,opt,name=header_column_vertical_stroke,json=headerColumnVerticalStroke" json:"header_column_vertical_stroke,omitempty"`
	HeaderColumnVerticalStrokeUndefined             *bool                             `protobuf:"varint,20,opt,name=header_column_vertical_stroke_undefined,json=headerColumnVerticalStrokeUndefined" json:"header_column_vertical_stroke_undefined,omitempty"`
	HeaderColumnHorizontalStroke                    *SpecStrokeArchive                `protobuf:"bytes,21,opt,name=header_column_horizontal_stroke,json=headerColumnHorizontalStroke" json:"header_column_horizontal_stroke,omitempty"`
	HeaderColumnHorizontalStrokeUndefined           *bool                             `protobuf:"varint,22,opt,name=header_column_horizontal_stroke_undefined,json=headerColumnHorizontalStrokeUndefined" json:"header_column_horizontal_stroke_undefined,omitempty"`
	HeaderColumnSeparatorStroke                     *SpecStrokeArchive                `protobuf:"bytes,23,opt,name=header_column_separator_stroke,json=headerColumnSeparatorStroke" json:"header_column_separator_stroke,omitempty"`
	HeaderColumnSeparatorStrokeUndefined            *bool                             `protobuf:"varint,24,opt,name=header_column_separator_stroke_undefined,json=headerColumnSeparatorStrokeUndefined" json:"header_column_separator_stroke_undefined,omitempty"`
	HeaderRowBorderStroke                           *SpecStrokeArchive                `protobuf:"bytes,25,opt,name=header_row_border_stroke,json=headerRowBorderStroke" json:"header_row_border_stroke,omitempty"`
	HeaderRowBorderStrokeUndefined                  *bool                             `protobuf:"varint,26,opt,name=header_row_border_stroke_undefined,json=headerRowBorderStrokeUndefined" json:"header_row_border_stroke_undefined,omitempty"`
	HeaderRowHorizontalStroke                       *SpecStrokeArchive                `protobuf:"bytes,27,opt,name=header_row_horizontal_stroke,json=headerRowHorizontalStroke" json:"header_row_horizontal_stroke,omitempty"`
	HeaderRowHorizontalStrokeUndefined              *bool                             `protobuf:"varint,28,opt,name=header_row_horizontal_stroke_undefined,json=headerRowHorizontalStrokeUndefined" json:"header_row_horizontal_stroke_undefined,omitempty"`
	HeaderRowVerticalStroke                         *SpecStrokeArchive                `protobuf:"bytes,29,opt,name=header_row_vertical_stroke,json=headerRowVerticalStroke" json:"header_row_vertical_stroke,omitempty"`
	HeaderRowVerticalStrokeUndefined                *bool                             `protobuf:"varint,30,opt,name=header_row_vertical_stroke_undefined,json=headerRowVerticalStrokeUndefined" json:"header_row_vertical_stroke_undefined,omitempty"`
	HeaderRowSeparatorStroke                        *SpecStrokeArchive                `protobuf:"bytes,31,opt,name=header_row_separator_stroke,json=headerRowSeparatorStroke" json:"header_row_separator_stroke,omitempty"`
	HeaderRowSeparatorStrokeUndefined               *bool                             `protobuf:"varint,32,opt,name=header_row_separator_stroke_undefined,json=headerRowSeparatorStrokeUndefined" json:"header_row_separator_stroke_undefined,omitempty"`
	FooterRowBorderStroke                           *SpecStrokeArchive                `protobuf:"bytes,33,opt,name=footer_row_border_stroke,json=footerRowBorderStroke" json:"footer_row_border_stroke,omitempty"`
	FooterRowBorderStrokeUndefined                  *bool                             `protobuf:"varint,34,opt,name=footer_row_border_stroke_undefined,json=footerRowBorderStrokeUndefined" json:"footer_row_border_stroke_undefined,omitempty"`
	FooterRowHorizontalStroke                       *SpecStrokeArchive                `protobuf:"bytes,35,opt,name=footer_row_horizontal_stroke,json=footerRowHorizontalStroke" json:"footer_row_horizontal_stroke,omitempty"`
	FooterRowHorizontalStrokeUndefined              *bool                             `protobuf:"varint,36,opt,name=footer_row_horizontal_stroke_undefined,json=footerRowHorizontalStrokeUndefined" json:"footer_row_horizontal_stroke_undefined,omitempty"`
	FooterRowVerticalStroke                         *SpecStrokeArchive                `protobuf:"bytes,37,opt,name=footer_row_vertical_stroke,json=footerRowVerticalStroke" json:"footer_row_vertical_stroke,omitempty"`
	FooterRowVerticalStrokeUndefined                *bool                             `protobuf:"varint,38,opt,name=footer_row_vertical_stroke_undefined,json=footerRowVerticalStrokeUndefined" json:"footer_row_vertical_stroke_undefined,omitempty"`
	FooterRowSeparatorStroke                        *SpecStrokeArchive                `protobuf:"bytes,39,opt,name=footer_row_separator_stroke,json=footerRowSeparatorStroke" json:"footer_row_separator_stroke,omitempty"`
	FooterRowSeparatorStrokeUndefined               *bool                             `protobuf:"varint,40,opt,name=footer_row_separator_stroke_undefined,json=footerRowSeparatorStrokeUndefined" json:"footer_row_separator_stroke_undefined,omitempty"`
	StrokePresetListObject                          *SpecTableStrokePresetListArchive `protobuf:"bytes,41,opt,name=stroke_preset_list_object,json=strokePresetListObject" json:"stroke_preset_list_object,omitempty"`
	StrokePresetListObjectUndefined                 *bool                             `protobuf:"varint,42,opt,name=stroke_preset_list_object_undefined,json=strokePresetListObjectUndefined" json:"stroke_preset_list_object_undefined,omitempty"`
	VerticalStrokesVisible                          *SpecBoolArchive                  `protobuf:"bytes,43,opt,name=vertical_strokes_visible,json=verticalStrokesVisible" json:"vertical_strokes_visible,omitempty"`
	VerticalStrokesVisibleUndefined                 *bool                             `protobuf:"varint,44,opt,name=vertical_strokes_visible_undefined,json=verticalStrokesVisibleUndefined" json:"vertical_strokes_visible_undefined,omitempty"`
	HorizontalStrokesVisible                        *SpecBoolArchive                  `protobuf:"bytes,45,opt,name=horizontal_strokes_visible,json=horizontalStrokesVisible" json:"horizontal_strokes_visible,omitempty"`
	HorizontalStrokesVisibleUndefined               *bool                             `protobuf:"varint,46,opt,name=horizontal_strokes_visible_undefined,json=horizontalStrokesVisibleUndefined" json:"horizontal_strokes_visible_undefined,omitempty"`
	HeaderRowSepVisible                             *SpecBoolArchive                  `protobuf:"bytes,47,opt,name=header_row_sep_visible,json=headerRowSepVisible" json:"header_row_sep_visible,omitempty"`
	HeaderRowSepVisibleUndefined                    *bool                             `protobuf:"varint,48,opt,name=header_row_sep_visible_undefined,json=headerRowSepVisibleUndefined" json:"header_row_sep_visible_undefined,omitempty"`
	HeaderRowVerticalsVisible                       *SpecBoolArchive                  `protobuf:"bytes,49,opt,name=header_row_verticals_visible,json=headerRowVerticalsVisible" json:"header_row_verticals_visible,omitempty"`
	HeaderRowVerticalsVisibleUndefined              *bool                             `protobuf:"varint,50,opt,name=header_row_verticals_visible_undefined,json=headerRowVerticalsVisibleUndefined" json:"header_row_verticals_visible_undefined,omitempty"`
	HeaderColSepVisible                             *SpecBoolArchive                  `protobuf:"bytes,51,opt,name=header_col_sep_visible,json=headerColSepVisible" json:"header_col_sep_visible,omitempty"`
	HeaderColSepVisibleUndefined                    *bool                             `protobuf:"varint,52,opt,name=header_col_sep_visible_undefined,json=headerColSepVisibleUndefined" json:"header_col_sep_visible_undefined,omitempty"`
	HeaderColHorizontalsVisible                     *SpecBoolArchive                  `protobuf:"bytes,53,opt,name=header_col_horizontals_visible,json=headerColHorizontalsVisible" json:"header_col_horizontals_visible,omitempty"`
	HeaderColHorizontalsVisibleUndefined            *bool                             `protobuf:"varint,54,opt,name=header_col_horizontals_visible_undefined,json=headerColHorizontalsVisibleUndefined" json:"header_col_horizontals_visible_undefined,omitempty"`
	FooterSepVisible                                *SpecBoolArchive                  `protobuf:"bytes,55,opt,name=footer_sep_visible,json=footerSepVisible" json:"footer_sep_visible,omitempty"`
	FooterSepVisibleUndefined                       *bool                             `protobuf:"varint,56,opt,name=footer_sep_visible_undefined,json=footerSepVisibleUndefined" json:"footer_sep_visible_undefined,omitempty"`
	FooterVerticalsVisible                          *SpecBoolArchive                  `protobuf:"bytes,57,opt,name=footer_verticals_visible,json=footerVerticalsVisible" json:"footer_verticals_visible,omitempty"`
	FooterVerticalsVisibleUndefined                 *bool                             `protobuf:"varint,58,opt,name=footer_verticals_visible_undefined,json=footerVerticalsVisibleUndefined" json:"footer_verticals_visible_undefined,omitempty"`
	BorderStrokesVisible                            *SpecBoolArchive                  `protobuf:"bytes,59,opt,name=border_strokes_visible,json=borderStrokesVisible" json:"border_strokes_visible,omitempty"`
	BorderStrokesVisibleUndefined                   *bool                             `protobuf:"varint,60,opt,name=border_strokes_visible_undefined,json=borderStrokesVisibleUndefined" json:"border_strokes_visible_undefined,omitempty"`
	MasterFontFamily                                *SpecStringArchive                `protobuf:"bytes,61,opt,name=master_font_family,json=masterFontFamily" json:"master_font_family,omitempty"`
	MasterFontFamilyUndefined                       *bool                             `protobuf:"varint,62,opt,name=master_font_family_undefined,json=masterFontFamilyUndefined" json:"master_font_family_undefined,omitempty"`
	WritingDirection                                *SpecIntegerArchive               `protobuf:"bytes,63,opt,name=writing_direction,json=writingDirection" json:"writing_direction,omitempty"`
	WritingDirectionUndefined                       *bool                             `protobuf:"varint,64,opt,name=writing_direction_undefined,json=writingDirectionUndefined" json:"writing_direction_undefined,omitempty"`
	CategoryLevel1TopStroke                         *SpecStrokeArchive                `protobuf:"bytes,65,opt,name=category_level1_top_stroke,json=categoryLevel1TopStroke" json:"category_level1_top_stroke,omitempty"`
	CategoryLevel1TopStrokeUndefined                *bool                             `protobuf:"varint,66,opt,name=category_level1_top_stroke_undefined,json=categoryLevel1TopStrokeUndefined" json:"category_level1_top_stroke_undefined,omitempty"`
	CategoryLevel2TopStroke                         *SpecStrokeArchive                `protobuf:"bytes,67,opt,name=category_level2_top_stroke,json=categoryLevel2TopStroke" json:"category_level2_top_stroke,omitempty"`
	CategoryLevel2TopStrokeUndefined                *bool                             `protobuf:"varint,68,opt,name=category_level2_top_stroke_undefined,json=categoryLevel2TopStrokeUndefined" json:"category_level2_top_stroke_undefined,omitempty"`
	CategoryLevel3TopStroke                         *SpecStrokeArchive                `protobuf:"bytes,69,opt,name=category_level3_top_stroke,json=categoryLevel3TopStroke" json:"category_level3_top_stroke,omitempty"`
	CategoryLevel3TopStrokeUndefined                *bool                             `protobuf:"varint,70,opt,name=category_level3_top_stroke_undefined,json=categoryLevel3TopStrokeUndefined" json:"category_level3_top_stroke_undefined,omitempty"`
	CategoryLevel4TopStroke                         *SpecStrokeArchive                `protobuf:"bytes,71,opt,name=category_level4_top_stroke,json=categoryLevel4TopStroke" json:"category_level4_top_stroke,omitempty"`
	CategoryLevel4TopStrokeUndefined                *bool                             `protobuf:"varint,72,opt,name=category_level4_top_stroke_undefined,json=categoryLevel4TopStrokeUndefined" json:"category_level4_top_stroke_undefined,omitempty"`
	CategoryLevel5TopStroke                         *SpecStrokeArchive                `protobuf:"bytes,73,opt,name=category_level5_top_stroke,json=categoryLevel5TopStroke" json:"category_level5_top_stroke,omitempty"`
	CategoryLevel5TopStrokeUndefined                *bool                             `protobuf:"varint,74,opt,name=category_level5_top_stroke_undefined,json=categoryLevel5TopStrokeUndefined" json:"category_level5_top_stroke_undefined,omitempty"`
	CategoryLevel1LabelSeparatorStroke              *SpecStrokeArchive                `protobuf:"bytes,75,opt,name=category_level1_label_separator_stroke,json=categoryLevel1LabelSeparatorStroke" json:"category_level1_label_separator_stroke,omitempty"`
	CategoryLevel1LabelSeparatorStrokeUndefined     *bool                             `protobuf:"varint,76,opt,name=category_level1_label_separator_stroke_undefined,json=categoryLevel1LabelSeparatorStrokeUndefined" json:"category_level1_label_separator_stroke_undefined,omitempty"`
	CategoryLevel2LabelSeparatorStroke              *SpecStrokeArchive                `protobuf:"bytes,77,opt,name=category_level2_label_separator_stroke,json=categoryLevel2LabelSeparatorStroke" json:"category_level2_label_separator_stroke,omitempty"`
	CategoryLevel2LabelSeparatorStrokeUndefined     *bool                             `protobuf:"varint,78,opt,name=category_level2_label_separator_stroke_undefined,json=categoryLevel2LabelSeparatorStrokeUndefined" json:"category_level2_label_separator_stroke_undefined,omitempty"`
	CategoryLevel3LabelSeparatorStroke              *SpecStrokeArchive                `protobuf:"bytes,79,opt,name=category_level3_label_separator_stroke,json=categoryLevel3LabelSeparatorStroke" json:"category_level3_label_separator_stroke,omitempty"`
	CategoryLevel3LabelSeparatorStrokeUndefined     *bool                             `protobuf:"varint,80,opt,name=category_level3_label_separator_stroke_undefined,json=categoryLevel3LabelSeparatorStrokeUndefined" json:"category_level3_label_separator_stroke_undefined,omitempty"`
	CategoryLevel4LabelSeparatorStroke              *SpecStrokeArchive                `protobuf:"bytes,81,opt,name=category_level4_label_separator_stroke,json=categoryLevel4LabelSeparatorStroke" json:"category_level4_label_separator_stroke,omitempty"`
	CategoryLevel4LabelSeparatorStrokeUndefined     *bool                             `protobuf:"varint,82,opt,name=category_level4_label_separator_stroke_undefined,json=categoryLevel4LabelSeparatorStrokeUndefined" json:"category_level4_label_separator_stroke_undefined,omitempty"`
	CategoryLevel5LabelSeparatorStroke              *SpecStrokeArchive                `protobuf:"bytes,83,opt,name=category_level5_label_separator_stroke,json=categoryLevel5LabelSeparatorStroke" json:"category_level5_label_separator_stroke,omitempty"`
	CategoryLevel5LabelSeparatorStrokeUndefined     *bool                             `protobuf:"varint,84,opt,name=category_level5_label_separator_stroke_undefined,json=categoryLevel5LabelSeparatorStrokeUndefined" json:"category_level5_label_separator_stroke_undefined,omitempty"`
	CategoryLevel1BottomStroke                      *SpecStrokeArchive                `protobuf:"bytes,85,opt,name=category_level1_bottom_stroke,json=categoryLevel1BottomStroke" json:"category_level1_bottom_stroke,omitempty"`
	CategoryLevel1BottomStrokeUndefined             *bool                             `protobuf:"varint,86,opt,name=category_level1_bottom_stroke_undefined,json=categoryLevel1BottomStrokeUndefined" json:"category_level1_bottom_stroke_undefined,omitempty"`
	CategoryLevel2BottomStroke                      *SpecStrokeArchive                `protobuf:"bytes,87,opt,name=category_level2_bottom_stroke,json=categoryLevel2BottomStroke" json:"category_level2_bottom_stroke,omitempty"`
	CategoryLevel2BottomStrokeUndefined             *bool                             `protobuf:"varint,88,opt,name=category_level2_bottom_stroke_undefined,json=categoryLevel2BottomStrokeUndefined" json:"category_level2_bottom_stroke_undefined,omitempty"`
	CategoryLevel3BottomStroke                      *SpecStrokeArchive                `protobuf:"bytes,89,opt,name=category_level3_bottom_stroke,json=categoryLevel3BottomStroke" json:"category_level3_bottom_stroke,omitempty"`
	CategoryLevel3BottomStrokeUndefined             *bool                             `protobuf:"varint,90,opt,name=category_level3_bottom_stroke_undefined,json=categoryLevel3BottomStrokeUndefined" json:"category_level3_bottom_stroke_undefined,omitempty"`
	CategoryLevel4BottomStroke                      *SpecStrokeArchive                `protobuf:"bytes,91,opt,name=category_level4_bottom_stroke,json=categoryLevel4BottomStroke" json:"category_level4_bottom_stroke,omitempty"`
	CategoryLevel4BottomStrokeUndefined             *bool                             `protobuf:"varint,92,opt,name=category_level4_bottom_stroke_undefined,json=categoryLevel4BottomStrokeUndefined" json:"category_level4_bottom_stroke_undefined,omitempty"`
	CategoryLevel5BottomStroke                      *SpecStrokeArchive                `protobuf:"bytes,93,opt,name=category_level5_bottom_stroke,json=categoryLevel5BottomStroke" json:"category_level5_bottom_stroke,omitempty"`
	CategoryLevel5BottomStrokeUndefined             *bool                             `protobuf:"varint,94,opt,name=category_level5_bottom_stroke_undefined,json=categoryLevel5BottomStrokeUndefined" json:"category_level5_bottom_stroke_undefined,omitempty"`
	CategoryLevel1InteriorStroke                    *SpecStrokeArchive                `protobuf:"bytes,95,opt,name=category_level1_interior_stroke,json=categoryLevel1InteriorStroke" json:"category_level1_interior_stroke,omitempty"`
	CategoryLevel1InteriorStrokeUndefined           *bool                             `protobuf:"varint,96,opt,name=category_level1_interior_stroke_undefined,json=categoryLevel1InteriorStrokeUndefined" json:"category_level1_interior_stroke_undefined,omitempty"`
	CategoryLevel2InteriorStroke                    *SpecStrokeArchive                `protobuf:"bytes,97,opt,name=category_level2_interior_stroke,json=categoryLevel2InteriorStroke" json:"category_level2_interior_stroke,omitempty"`
	CategoryLevel2InteriorStrokeUndefined           *bool                             `protobuf:"varint,98,opt,name=category_level2_interior_stroke_undefined,json=categoryLevel2InteriorStrokeUndefined" json:"category_level2_interior_stroke_undefined,omitempty"`
	CategoryLevel3InteriorStroke                    *SpecStrokeArchive                `protobuf:"bytes,99,opt,name=category_level3_interior_stroke,json=categoryLevel3InteriorStroke" json:"category_level3_interior_stroke,omitempty"`
	CategoryLevel3InteriorStrokeUndefined           *bool                             `protobuf:"varint,100,opt,name=category_level3_interior_stroke_undefined,json=categoryLevel3InteriorStrokeUndefined" json:"category_level3_interior_stroke_undefined,omitempty"`
	CategoryLevel4InteriorStroke                    *SpecStrokeArchive                `protobuf:"bytes,101,opt,name=category_level4_interior_stroke,json=categoryLevel4InteriorStroke" json:"category_level4_interior_stroke,omitempty"`
	CategoryLevel4InteriorStrokeUndefined           *bool                             `protobuf:"varint,102,opt,name=category_level4_interior_stroke_undefined,json=categoryLevel4InteriorStrokeUndefined" json:"category_level4_interior_stroke_undefined,omitempty"`
	CategoryLevel5InteriorStroke                    *SpecStrokeArchive                `protobuf:"bytes,103,opt,name=category_level5_interior_stroke,json=categoryLevel5InteriorStroke" json:"category_level5_interior_stroke,omitempty"`
	CategoryLevel5InteriorStrokeUndefined           *bool                             `protobuf:"varint,104,opt,name=category_level5_interior_stroke_undefined,json=categoryLevel5InteriorStrokeUndefined" json:"category_level5_interior_stroke_undefined,omitempty"`
	BodyPivotGroupHorizontalStroke                  *SpecStrokeArchive                `protobuf:"bytes,105,opt,name=body_pivot_group_horizontal_stroke,json=bodyPivotGroupHorizontalStroke" json:"body_pivot_group_horizontal_stroke,omitempty"`
	BodyPivotGroupHorizontalStrokeUndefined         *bool                             `protobuf:"varint,106,opt,name=body_pivot_group_horizontal_stroke_undefined,json=bodyPivotGroupHorizontalStrokeUndefined" json:"body_pivot_group_horizontal_stroke_undefined,omitempty"`
	BodyPivotGroupVerticalStroke                    *SpecStrokeArchive                `protobuf:"bytes,107,opt,name=body_pivot_group_vertical_stroke,json=bodyPivotGroupVerticalStroke" json:"body_pivot_group_vertical_stroke,omitempty"`
	BodyPivotGroupVerticalStrokeUndefined           *bool                             `protobuf:"varint,108,opt,name=body_pivot_group_vertical_stroke_undefined,json=bodyPivotGroupVerticalStrokeUndefined" json:"body_pivot_group_vertical_stroke_undefined,omitempty"`
	BodyPivotDeEmphasisHorizontalStroke             *SpecStrokeArchive                `protobuf:"bytes,109,opt,name=body_pivot_de_emphasis_horizontal_stroke,json=bodyPivotDeEmphasisHorizontalStroke" json:"body_pivot_de_emphasis_horizontal_stroke,omitempty"`
	BodyPivotDeEmphasisHorizontalStrokeUndefined    *bool                             `protobuf:"varint,110,opt,name=body_pivot_de_emphasis_horizontal_stroke_undefined,json=bodyPivotDeEmphasisHorizontalStrokeUndefined" json:"body_pivot_de_emphasis_horizontal_stroke_undefined,omitempty"`
	BodyPivotEmphasisVerticalStroke                 *SpecStrokeArchive                `protobuf:"bytes,111,opt,name=body_pivot_emphasis_vertical_stroke,json=bodyPivotEmphasisVerticalStroke" json:"body_pivot_emphasis_vertical_stroke,omitempty"`
	BodyPivotEmphasisVerticalStrokeUndefined        *bool                             `protobuf:"varint,112,opt,name=body_pivot_emphasis_vertical_stroke_undefined,json=bodyPivotEmphasisVerticalStrokeUndefined" json:"body_pivot_emphasis_vertical_stroke_undefined,omitempty"`
	HeaderColumnPivotGroupHorizontalStroke          *SpecStrokeArchive                `protobuf:"bytes,113,opt,name=header_column_pivot_group_horizontal_stroke,json=headerColumnPivotGroupHorizontalStroke" json:"header_column_pivot_group_horizontal_stroke,omitempty"`
	HeaderColumnPivotGroupHorizontalStrokeUndefined *bool                             `protobuf:"varint,114,opt,name=header_column_pivot_group_horizontal_stroke_undefined,json=headerColumnPivotGroupHorizontalStrokeUndefined" json:"header_column_pivot_group_horizontal_stroke_undefined,omitempty"`
	HeaderColumnPivotGroupDeEmphasisStroke          *SpecStrokeArchive                `protobuf:"bytes,115,opt,name=header_column_pivot_group_de_emphasis_stroke,json=headerColumnPivotGroupDeEmphasisStroke" json:"header_column_pivot_group_de_emphasis_stroke,omitempty"`
	HeaderColumnPivotGroupDeEmphasisStrokeUndefined *bool                             `protobuf:"varint,116,opt,name=header_column_pivot_group_de_emphasis_stroke_undefined,json=headerColumnPivotGroupDeEmphasisStrokeUndefined" json:"header_column_pivot_group_de_emphasis_stroke_undefined,omitempty"`
	HeaderColumnPivotSeparatorStroke                *SpecStrokeArchive                `protobuf:"bytes,117,opt,name=header_column_pivot_separator_stroke,json=headerColumnPivotSeparatorStroke" json:"header_column_pivot_separator_stroke,omitempty"`
	HeaderColumnPivotSeparatorStrokeUndefined       *bool                             `protobuf:"varint,118,opt,name=header_column_pivot_separator_stroke_undefined,json=headerColumnPivotSeparatorStrokeUndefined" json:"header_column_pivot_separator_stroke_undefined,omitempty"`
	HeaderRowPivotGroupVerticalStroke               *SpecStrokeArchive                `protobuf:"bytes,119,opt,name=header_row_pivot_group_vertical_stroke,json=headerRowPivotGroupVerticalStroke" json:"header_row_pivot_group_vertical_stroke,omitempty"`
	HeaderRowPivotGroupVerticalStrokeUndefined      *bool                             `protobuf:"varint,120,opt,name=header_row_pivot_group_vertical_stroke_undefined,json=headerRowPivotGroupVerticalStrokeUndefined" json:"header_row_pivot_group_vertical_stroke_undefined,omitempty"`
	HeaderRowPivotGroupDeEmphasisStroke             *SpecStrokeArchive                `protobuf:"bytes,121,opt,name=header_row_pivot_group_de_emphasis_stroke,json=headerRowPivotGroupDeEmphasisStroke" json:"header_row_pivot_group_de_emphasis_stroke,omitempty"`
	HeaderRowPivotGroupDeEmphasisStrokeUndefined    *bool                             `protobuf:"varint,122,opt,name=header_row_pivot_group_de_emphasis_stroke_undefined,json=headerRowPivotGroupDeEmphasisStrokeUndefined" json:"header_row_pivot_group_de_emphasis_stroke_undefined,omitempty"`
	HeaderRowPivotTitleStroke                       *SpecStrokeArchive                `protobuf:"bytes,123,opt,name=header_row_pivot_title_stroke,json=headerRowPivotTitleStroke" json:"header_row_pivot_title_stroke,omitempty"`
	HeaderRowPivotTitleStrokeUndefined              *bool                             `protobuf:"varint,124,opt,name=header_row_pivot_title_stroke_undefined,json=headerRowPivotTitleStrokeUndefined" json:"header_row_pivot_title_stroke_undefined,omitempty"`
	FooterRowPivotGroupVerticalStroke               *SpecStrokeArchive                `protobuf:"bytes,125,opt,name=footer_row_pivot_group_vertical_stroke,json=footerRowPivotGroupVerticalStroke" json:"footer_row_pivot_group_vertical_stroke,omitempty"`
	FooterRowPivotGroupVerticalStrokeUndefined      *bool                             `protobuf:"varint,126,opt,name=footer_row_pivot_group_vertical_stroke_undefined,json=footerRowPivotGroupVerticalStrokeUndefined" json:"footer_row_pivot_group_vertical_stroke_undefined,omitempty"`
}

func (x *TableStylePropertyChangeSetArchive) Reset() {
	*x = TableStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSTArchives_sos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *TableStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSTArchives_sos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*TableStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSTArchives_sos_proto_rawDescGZIP(), []int{3}
}

func (x *TableStylePropertyChangeSetArchive) GetAutoResize() *SpecBoolArchive {
	if x != nil {
		return x.AutoResize
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetAutoResizeUndefined() bool {
	if x != nil && x.AutoResizeUndefined != nil {
		return *x.AutoResizeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBandedRows() *SpecBoolArchive {
	if x != nil {
		return x.BandedRows
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBandedRowsUndefined() bool {
	if x != nil && x.BandedRowsUndefined != nil {
		return *x.BandedRowsUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBandedCellFill() *SpecFillArchive {
	if x != nil {
		return x.BandedCellFill
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBandedCellFillUndefined() bool {
	if x != nil && x.BandedCellFillUndefined != nil {
		return *x.BandedCellFillUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBehavesLikeSpreadsheet() *SpecBoolArchive {
	if x != nil {
		return x.BehavesLikeSpreadsheet
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBehavesLikeSpreadsheetUndefined() bool {
	if x != nil && x.BehavesLikeSpreadsheetUndefined != nil {
		return *x.BehavesLikeSpreadsheetUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyHorizontalBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyHorizontalBorderStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyHorizontalBorderStrokeUndefined() bool {
	if x != nil && x.BodyHorizontalBorderStrokeUndefined != nil {
		return *x.BodyHorizontalBorderStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyVerticalBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyVerticalBorderStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyVerticalBorderStrokeUndefined() bool {
	if x != nil && x.BodyVerticalBorderStrokeUndefined != nil {
		return *x.BodyVerticalBorderStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyHorizontalStrokeUndefined() bool {
	if x != nil && x.BodyHorizontalStrokeUndefined != nil {
		return *x.BodyHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyVerticalStrokeUndefined() bool {
	if x != nil && x.BodyVerticalStrokeUndefined != nil {
		return *x.BodyVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnBorderStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnBorderStrokeUndefined() bool {
	if x != nil && x.HeaderColumnBorderStrokeUndefined != nil {
		return *x.HeaderColumnBorderStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnVerticalStrokeUndefined() bool {
	if x != nil && x.HeaderColumnVerticalStrokeUndefined != nil {
		return *x.HeaderColumnVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnHorizontalStrokeUndefined() bool {
	if x != nil && x.HeaderColumnHorizontalStrokeUndefined != nil {
		return *x.HeaderColumnHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnSeparatorStrokeUndefined() bool {
	if x != nil && x.HeaderColumnSeparatorStrokeUndefined != nil {
		return *x.HeaderColumnSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowBorderStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowBorderStrokeUndefined() bool {
	if x != nil && x.HeaderRowBorderStrokeUndefined != nil {
		return *x.HeaderRowBorderStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowHorizontalStrokeUndefined() bool {
	if x != nil && x.HeaderRowHorizontalStrokeUndefined != nil {
		return *x.HeaderRowHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowVerticalStrokeUndefined() bool {
	if x != nil && x.HeaderRowVerticalStrokeUndefined != nil {
		return *x.HeaderRowVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowSeparatorStrokeUndefined() bool {
	if x != nil && x.HeaderRowSeparatorStrokeUndefined != nil {
		return *x.HeaderRowSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.FooterRowBorderStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowBorderStrokeUndefined() bool {
	if x != nil && x.FooterRowBorderStrokeUndefined != nil {
		return *x.FooterRowBorderStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.FooterRowHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowHorizontalStrokeUndefined() bool {
	if x != nil && x.FooterRowHorizontalStrokeUndefined != nil {
		return *x.FooterRowHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.FooterRowVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowVerticalStrokeUndefined() bool {
	if x != nil && x.FooterRowVerticalStrokeUndefined != nil {
		return *x.FooterRowVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.FooterRowSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowSeparatorStrokeUndefined() bool {
	if x != nil && x.FooterRowSeparatorStrokeUndefined != nil {
		return *x.FooterRowSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetStrokePresetListObject() *SpecTableStrokePresetListArchive {
	if x != nil {
		return x.StrokePresetListObject
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetStrokePresetListObjectUndefined() bool {
	if x != nil && x.StrokePresetListObjectUndefined != nil {
		return *x.StrokePresetListObjectUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetVerticalStrokesVisible() *SpecBoolArchive {
	if x != nil {
		return x.VerticalStrokesVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetVerticalStrokesVisibleUndefined() bool {
	if x != nil && x.VerticalStrokesVisibleUndefined != nil {
		return *x.VerticalStrokesVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHorizontalStrokesVisible() *SpecBoolArchive {
	if x != nil {
		return x.HorizontalStrokesVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHorizontalStrokesVisibleUndefined() bool {
	if x != nil && x.HorizontalStrokesVisibleUndefined != nil {
		return *x.HorizontalStrokesVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowSepVisible() *SpecBoolArchive {
	if x != nil {
		return x.HeaderRowSepVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowSepVisibleUndefined() bool {
	if x != nil && x.HeaderRowSepVisibleUndefined != nil {
		return *x.HeaderRowSepVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowVerticalsVisible() *SpecBoolArchive {
	if x != nil {
		return x.HeaderRowVerticalsVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowVerticalsVisibleUndefined() bool {
	if x != nil && x.HeaderRowVerticalsVisibleUndefined != nil {
		return *x.HeaderRowVerticalsVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColSepVisible() *SpecBoolArchive {
	if x != nil {
		return x.HeaderColSepVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColSepVisibleUndefined() bool {
	if x != nil && x.HeaderColSepVisibleUndefined != nil {
		return *x.HeaderColSepVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColHorizontalsVisible() *SpecBoolArchive {
	if x != nil {
		return x.HeaderColHorizontalsVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColHorizontalsVisibleUndefined() bool {
	if x != nil && x.HeaderColHorizontalsVisibleUndefined != nil {
		return *x.HeaderColHorizontalsVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterSepVisible() *SpecBoolArchive {
	if x != nil {
		return x.FooterSepVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterSepVisibleUndefined() bool {
	if x != nil && x.FooterSepVisibleUndefined != nil {
		return *x.FooterSepVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterVerticalsVisible() *SpecBoolArchive {
	if x != nil {
		return x.FooterVerticalsVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterVerticalsVisibleUndefined() bool {
	if x != nil && x.FooterVerticalsVisibleUndefined != nil {
		return *x.FooterVerticalsVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBorderStrokesVisible() *SpecBoolArchive {
	if x != nil {
		return x.BorderStrokesVisible
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBorderStrokesVisibleUndefined() bool {
	if x != nil && x.BorderStrokesVisibleUndefined != nil {
		return *x.BorderStrokesVisibleUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetMasterFontFamily() *SpecStringArchive {
	if x != nil {
		return x.MasterFontFamily
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetMasterFontFamilyUndefined() bool {
	if x != nil && x.MasterFontFamilyUndefined != nil {
		return *x.MasterFontFamilyUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetWritingDirection() *SpecIntegerArchive {
	if x != nil {
		return x.WritingDirection
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetWritingDirectionUndefined() bool {
	if x != nil && x.WritingDirectionUndefined != nil {
		return *x.WritingDirectionUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1TopStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel1TopStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1TopStrokeUndefined() bool {
	if x != nil && x.CategoryLevel1TopStrokeUndefined != nil {
		return *x.CategoryLevel1TopStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2TopStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel2TopStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2TopStrokeUndefined() bool {
	if x != nil && x.CategoryLevel2TopStrokeUndefined != nil {
		return *x.CategoryLevel2TopStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3TopStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel3TopStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3TopStrokeUndefined() bool {
	if x != nil && x.CategoryLevel3TopStrokeUndefined != nil {
		return *x.CategoryLevel3TopStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4TopStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel4TopStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4TopStrokeUndefined() bool {
	if x != nil && x.CategoryLevel4TopStrokeUndefined != nil {
		return *x.CategoryLevel4TopStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5TopStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel5TopStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5TopStrokeUndefined() bool {
	if x != nil && x.CategoryLevel5TopStrokeUndefined != nil {
		return *x.CategoryLevel5TopStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1LabelSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel1LabelSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1LabelSeparatorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel1LabelSeparatorStrokeUndefined != nil {
		return *x.CategoryLevel1LabelSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2LabelSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel2LabelSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2LabelSeparatorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel2LabelSeparatorStrokeUndefined != nil {
		return *x.CategoryLevel2LabelSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3LabelSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel3LabelSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3LabelSeparatorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel3LabelSeparatorStrokeUndefined != nil {
		return *x.CategoryLevel3LabelSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4LabelSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel4LabelSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4LabelSeparatorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel4LabelSeparatorStrokeUndefined != nil {
		return *x.CategoryLevel4LabelSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5LabelSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel5LabelSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5LabelSeparatorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel5LabelSeparatorStrokeUndefined != nil {
		return *x.CategoryLevel5LabelSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1BottomStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel1BottomStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1BottomStrokeUndefined() bool {
	if x != nil && x.CategoryLevel1BottomStrokeUndefined != nil {
		return *x.CategoryLevel1BottomStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2BottomStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel2BottomStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2BottomStrokeUndefined() bool {
	if x != nil && x.CategoryLevel2BottomStrokeUndefined != nil {
		return *x.CategoryLevel2BottomStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3BottomStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel3BottomStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3BottomStrokeUndefined() bool {
	if x != nil && x.CategoryLevel3BottomStrokeUndefined != nil {
		return *x.CategoryLevel3BottomStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4BottomStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel4BottomStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4BottomStrokeUndefined() bool {
	if x != nil && x.CategoryLevel4BottomStrokeUndefined != nil {
		return *x.CategoryLevel4BottomStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5BottomStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel5BottomStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5BottomStrokeUndefined() bool {
	if x != nil && x.CategoryLevel5BottomStrokeUndefined != nil {
		return *x.CategoryLevel5BottomStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1InteriorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel1InteriorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel1InteriorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel1InteriorStrokeUndefined != nil {
		return *x.CategoryLevel1InteriorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2InteriorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel2InteriorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel2InteriorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel2InteriorStrokeUndefined != nil {
		return *x.CategoryLevel2InteriorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3InteriorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel3InteriorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel3InteriorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel3InteriorStrokeUndefined != nil {
		return *x.CategoryLevel3InteriorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4InteriorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel4InteriorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel4InteriorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel4InteriorStrokeUndefined != nil {
		return *x.CategoryLevel4InteriorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5InteriorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryLevel5InteriorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetCategoryLevel5InteriorStrokeUndefined() bool {
	if x != nil && x.CategoryLevel5InteriorStrokeUndefined != nil {
		return *x.CategoryLevel5InteriorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotGroupHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyPivotGroupHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotGroupHorizontalStrokeUndefined() bool {
	if x != nil && x.BodyPivotGroupHorizontalStrokeUndefined != nil {
		return *x.BodyPivotGroupHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotGroupVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyPivotGroupVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotGroupVerticalStrokeUndefined() bool {
	if x != nil && x.BodyPivotGroupVerticalStrokeUndefined != nil {
		return *x.BodyPivotGroupVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotDeEmphasisHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyPivotDeEmphasisHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotDeEmphasisHorizontalStrokeUndefined() bool {
	if x != nil && x.BodyPivotDeEmphasisHorizontalStrokeUndefined != nil {
		return *x.BodyPivotDeEmphasisHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotEmphasisVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BodyPivotEmphasisVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetBodyPivotEmphasisVerticalStrokeUndefined() bool {
	if x != nil && x.BodyPivotEmphasisVerticalStrokeUndefined != nil {
		return *x.BodyPivotEmphasisVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotGroupHorizontalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnPivotGroupHorizontalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotGroupHorizontalStrokeUndefined() bool {
	if x != nil && x.HeaderColumnPivotGroupHorizontalStrokeUndefined != nil {
		return *x.HeaderColumnPivotGroupHorizontalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotGroupDeEmphasisStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnPivotGroupDeEmphasisStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotGroupDeEmphasisStrokeUndefined() bool {
	if x != nil && x.HeaderColumnPivotGroupDeEmphasisStrokeUndefined != nil {
		return *x.HeaderColumnPivotGroupDeEmphasisStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotSeparatorStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderColumnPivotSeparatorStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderColumnPivotSeparatorStrokeUndefined() bool {
	if x != nil && x.HeaderColumnPivotSeparatorStrokeUndefined != nil {
		return *x.HeaderColumnPivotSeparatorStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotGroupVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowPivotGroupVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotGroupVerticalStrokeUndefined() bool {
	if x != nil && x.HeaderRowPivotGroupVerticalStrokeUndefined != nil {
		return *x.HeaderRowPivotGroupVerticalStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotGroupDeEmphasisStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowPivotGroupDeEmphasisStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotGroupDeEmphasisStrokeUndefined() bool {
	if x != nil && x.HeaderRowPivotGroupDeEmphasisStrokeUndefined != nil {
		return *x.HeaderRowPivotGroupDeEmphasisStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotTitleStroke() *SpecStrokeArchive {
	if x != nil {
		return x.HeaderRowPivotTitleStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetHeaderRowPivotTitleStrokeUndefined() bool {
	if x != nil && x.HeaderRowPivotTitleStrokeUndefined != nil {
		return *x.HeaderRowPivotTitleStrokeUndefined
	}
	return false
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowPivotGroupVerticalStroke() *SpecStrokeArchive {
	if x != nil {
		return x.FooterRowPivotGroupVerticalStroke
	}
	return nil
}

func (x *TableStylePropertyChangeSetArchive) GetFooterRowPivotGroupVerticalStrokeUndefined() bool {
	if x != nil && x.FooterRowPivotGroupVerticalStrokeUndefined != nil {
		return *x.FooterRowPivotGroupVerticalStrokeUndefined
	}
	return false
}

var File_TSTArchives_sos_proto protoreflect.FileDescriptor

var file_TSTArchives_sos_proto_rawDesc = []byte{
	0x0a, 0x15, 0x54, 0x53, 0x54, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x73, 0x6f,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x54, 0x53, 0x54, 0x53, 0x4f, 0x53, 0x1a,
	0x15, 0x54, 0x53, 0x44, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x54, 0x53, 0x53, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x54,
	0x53, 0x54, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x54, 0x53, 0x57, 0x50, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x23, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x55,
	0x0a, 0x18, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x54, 0x53, 0x54, 0x2e, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x20,
	0x53, 0x70, 0x65, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x12, 0x74, 0x0a, 0x21, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53,
	0x54, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x73, 0x70, 0x65, 0x63, 0x53, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x04, 0x0a, 0x26, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x08, 0x74,
	0x65, 0x78, 0x74, 0x57, 0x72, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x77, 0x72, 0x61, 0x70, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x74, 0x65, 0x78, 0x74, 0x57, 0x72, 0x61, 0x70, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x74, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x66,
	0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x1c, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x35, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x54, 0x53, 0x57, 0x50, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x50,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x70,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x22, 0xce, 0x57, 0x0a, 0x22, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f,
	0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x64,
	0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x6f,
	0x77, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77,
	0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69,
	0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x43, 0x65, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x61, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x62,
	0x61, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x18, 0x62, 0x65, 0x68, 0x61, 0x76, 0x65,
	0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x16, 0x62, 0x65, 0x68, 0x61, 0x76, 0x65, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x70,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x22, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x65, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x62, 0x6f, 0x64, 0x79, 0x48, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x54, 0x0a, 0x27, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x62, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b, 0x62, 0x6f,
	0x64, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x62, 0x6f, 0x64, 0x79,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x21, 0x62, 0x6f, 0x64, 0x79, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x14, 0x62, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x5f,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1d, 0x62, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x4b, 0x0a, 0x14, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x62, 0x6f, 0x64, 0x79, 0x56,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x43, 0x0a,
	0x1e, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x62, 0x6f, 0x64, 0x79, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x18, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c,
	0x0a, 0x1d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x54, 0x0a, 0x27,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x58, 0x0a, 0x29, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e,
	0x0a, 0x1e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x1b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x56,
	0x0a, 0x28, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x24, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x18, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x15, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x42, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f,
	0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x6f, 0x77, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x12, 0x52, 0x0a, 0x26, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77,
	0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x22, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x48, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e,
	0x0a, 0x24, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58,
	0x0a, 0x1b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x6f, 0x77, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x18, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4a,
	0x0a, 0x22, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1c, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x52, 0x0a, 0x26, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x6f,
	0x77, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x66, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77,
	0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x20, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77,
	0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x18, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x63,
	0x0a, 0x19, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x54, 0x53, 0x54, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x23, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x18, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x22, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x55, 0x0a, 0x1a, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x24, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x5f, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x70, 0x5f, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x13, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x70,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x70, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x70, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x58, 0x0a, 0x1c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x26, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x73, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a,
	0x16, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x5f,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x53, 0x65, 0x70, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c,
	0x53, 0x65, 0x70, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6c, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x12, 0x56, 0x0a, 0x28, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x5f,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x24, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x48, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x70, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x10,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x53, 0x65, 0x70, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x3f, 0x0a, 0x1c, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x70, 0x5f, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x70, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x18, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x73, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x22, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1f, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x4d, 0x0a, 0x16, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x47, 0x0a, 0x20, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18,
	0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x1c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x6e,
	0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x46, 0x6f, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x10, 0x77, 0x72, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1b,
	0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x19, 0x77, 0x72, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x54, 0x6f, 0x70, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x32, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x44, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x54, 0x6f, 0x70, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x34, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x48, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x54, 0x6f, 0x70, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x4a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x35, 0x54, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x26, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x4b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x12, 0x65, 0x0a, 0x30, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x26, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x65, 0x0a, 0x30, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x4e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x2b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x32, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x6d, 0x0a, 0x26, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12,
	0x65, 0x0a, 0x30, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x26, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x34, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x65, 0x0a, 0x30, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x52, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x2b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x26,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x65, 0x0a, 0x30, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x54, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x35, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x31, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x31, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x56, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x58, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x5f, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x59, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x42, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x5f, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c,
	0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x34, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34,
	0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x54, 0x0a, 0x27,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x42, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x35, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x35, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x35, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x58, 0x0a, 0x29, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x60, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x58, 0x0a, 0x29, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x62, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60,
	0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x33, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x58, 0x0a, 0x29, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x25, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x33, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x58, 0x0a, 0x29,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x25, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x58, 0x0a, 0x29, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x65, 0x0a, 0x22, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1e, 0x62, 0x6f, 0x64, 0x79, 0x50,
	0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x5d, 0x0a, 0x2c, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x27, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x20, 0x62, 0x6f, 0x64, 0x79,
	0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x6b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x62,
	0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x59, 0x0a, 0x2a, 0x62,
	0x6f, 0x64, 0x79, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x25, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x70, 0x0a, 0x28, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73,
	0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x23, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x44, 0x65,
	0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x68, 0x0a, 0x32, 0x62, 0x6f, 0x64, 0x79,
	0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73,
	0x69, 0x73, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x2c, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x44,
	0x65, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x67, 0x0a, 0x23, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x62, 0x6f, 0x64, 0x79,
	0x50, 0x69, 0x76, 0x6f, 0x74, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x5f, 0x0a, 0x2d, 0x62,
	0x6f, 0x64, 0x79, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73,
	0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x28, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x45, 0x6d, 0x70,
	0x68, 0x61, 0x73, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x76, 0x0a, 0x2b,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x70, 0x69,
	0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x71, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x26, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x6e, 0x0a, 0x35, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x72, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x77, 0x0a, 0x2c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x26, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x45,
	0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x6f, 0x0a,
	0x36, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x5f, 0x65, 0x6d,
	0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x69,
	0x0a, 0x24, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x61, 0x0a, 0x2e, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x29, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50,
	0x69, 0x76, 0x6f, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6c, 0x0a, 0x26,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x21, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x64, 0x0a, 0x30, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x2a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50,
	0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x71, 0x0a, 0x29, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x5f, 0x65, 0x6d,
	0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x79, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x23,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x12, 0x69, 0x0a, 0x33, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f,
	0x77, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65,
	0x5f, 0x65, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x2c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x45, 0x6d, 0x70, 0x68, 0x61, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5b,
	0x0a, 0x1d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70, 0x69, 0x76,
	0x6f, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x19, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x53, 0x0a, 0x27, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70, 0x69, 0x76, 0x6f, 0x74, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x6c, 0x0a, 0x26, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70,
	0x69, 0x76, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x21, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x64,
	0x0a, 0x30, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x70, 0x69, 0x76,
	0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x52, 0x6f, 0x77, 0x50, 0x69, 0x76, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6b, 0x70, 0x62,
}

var (
	file_TSTArchives_sos_proto_rawDescOnce sync.Once
	file_TSTArchives_sos_proto_rawDescData = file_TSTArchives_sos_proto_rawDesc
)

func file_TSTArchives_sos_proto_rawDescGZIP() []byte {
	file_TSTArchives_sos_proto_rawDescOnce.Do(func() {
		file_TSTArchives_sos_proto_rawDescData = protoimpl.X.CompressGZIP(file_TSTArchives_sos_proto_rawDescData)
	})
	return file_TSTArchives_sos_proto_rawDescData
}

var file_TSTArchives_sos_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_TSTArchives_sos_proto_goTypes = []interface{}{
	(*SpecSetTableStrokePresetListArchive)(nil),    // 0: TSTSOS.SpecSetTableStrokePresetListArchive
	(*SpecTableStrokePresetListArchive)(nil),       // 1: TSTSOS.SpecTableStrokePresetListArchive
	(*TableCellStylePropertyChangeSetArchive)(nil), // 2: TSTSOS.TableCellStylePropertyChangeSetArchive
	(*TableStylePropertyChangeSetArchive)(nil),     // 3: TSTSOS.TableStylePropertyChangeSetArchive
	(*StrokePresetListArchive)(nil),                // 4: TST.StrokePresetListArchive
	(*SpecBoolArchive)(nil),                        // 5: TSSSOS.SpecBoolArchive
	(*SpecIntegerArchive)(nil),                     // 6: TSSSOS.SpecIntegerArchive
	(*SpecFillArchive)(nil),                        // 7: TSDSOS.SpecFillArchive
	(*SpecPaddingArchive)(nil),                     // 8: TSWPSOS.SpecPaddingArchive
	(*SpecStrokeArchive)(nil),                      // 9: TSDSOS.SpecStrokeArchive
	(*SpecStringArchive)(nil),                      // 10: TSSSOS.SpecStringArchive
}
var file_TSTArchives_sos_proto_depIdxs = []int32{
	4,  // 0: TSTSOS.SpecSetTableStrokePresetListArchive.table_stroke_preset_list:type_name -> TST.StrokePresetListArchive
	0,  // 1: TSTSOS.SpecTableStrokePresetListArchive.spec_set_table_stroke_preset_list:type_name -> TSTSOS.SpecSetTableStrokePresetListArchive
	5,  // 2: TSTSOS.TableCellStylePropertyChangeSetArchive.text_wrap:type_name -> TSSSOS.SpecBoolArchive
	6,  // 3: TSTSOS.TableCellStylePropertyChangeSetArchive.type:type_name -> TSSSOS.SpecIntegerArchive
	7,  // 4: TSTSOS.TableCellStylePropertyChangeSetArchive.fill:type_name -> TSDSOS.SpecFillArchive
	6,  // 5: TSTSOS.TableCellStylePropertyChangeSetArchive.vertical_alignment:type_name -> TSSSOS.SpecIntegerArchive
	8,  // 6: TSTSOS.TableCellStylePropertyChangeSetArchive.padding:type_name -> TSWPSOS.SpecPaddingArchive
	5,  // 7: TSTSOS.TableStylePropertyChangeSetArchive.auto_resize:type_name -> TSSSOS.SpecBoolArchive
	5,  // 8: TSTSOS.TableStylePropertyChangeSetArchive.banded_rows:type_name -> TSSSOS.SpecBoolArchive
	7,  // 9: TSTSOS.TableStylePropertyChangeSetArchive.banded_cell_fill:type_name -> TSDSOS.SpecFillArchive
	5,  // 10: TSTSOS.TableStylePropertyChangeSetArchive.behaves_like_spreadsheet:type_name -> TSSSOS.SpecBoolArchive
	9,  // 11: TSTSOS.TableStylePropertyChangeSetArchive.body_horizontal_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 12: TSTSOS.TableStylePropertyChangeSetArchive.body_vertical_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 13: TSTSOS.TableStylePropertyChangeSetArchive.body_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 14: TSTSOS.TableStylePropertyChangeSetArchive.body_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 15: TSTSOS.TableStylePropertyChangeSetArchive.header_column_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 16: TSTSOS.TableStylePropertyChangeSetArchive.header_column_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 17: TSTSOS.TableStylePropertyChangeSetArchive.header_column_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 18: TSTSOS.TableStylePropertyChangeSetArchive.header_column_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 19: TSTSOS.TableStylePropertyChangeSetArchive.header_row_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 20: TSTSOS.TableStylePropertyChangeSetArchive.header_row_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 21: TSTSOS.TableStylePropertyChangeSetArchive.header_row_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 22: TSTSOS.TableStylePropertyChangeSetArchive.header_row_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 23: TSTSOS.TableStylePropertyChangeSetArchive.footer_row_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 24: TSTSOS.TableStylePropertyChangeSetArchive.footer_row_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 25: TSTSOS.TableStylePropertyChangeSetArchive.footer_row_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 26: TSTSOS.TableStylePropertyChangeSetArchive.footer_row_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	1,  // 27: TSTSOS.TableStylePropertyChangeSetArchive.stroke_preset_list_object:type_name -> TSTSOS.SpecTableStrokePresetListArchive
	5,  // 28: TSTSOS.TableStylePropertyChangeSetArchive.vertical_strokes_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 29: TSTSOS.TableStylePropertyChangeSetArchive.horizontal_strokes_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 30: TSTSOS.TableStylePropertyChangeSetArchive.header_row_sep_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 31: TSTSOS.TableStylePropertyChangeSetArchive.header_row_verticals_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 32: TSTSOS.TableStylePropertyChangeSetArchive.header_col_sep_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 33: TSTSOS.TableStylePropertyChangeSetArchive.header_col_horizontals_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 34: TSTSOS.TableStylePropertyChangeSetArchive.footer_sep_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 35: TSTSOS.TableStylePropertyChangeSetArchive.footer_verticals_visible:type_name -> TSSSOS.SpecBoolArchive
	5,  // 36: TSTSOS.TableStylePropertyChangeSetArchive.border_strokes_visible:type_name -> TSSSOS.SpecBoolArchive
	10, // 37: TSTSOS.TableStylePropertyChangeSetArchive.master_font_family:type_name -> TSSSOS.SpecStringArchive
	6,  // 38: TSTSOS.TableStylePropertyChangeSetArchive.writing_direction:type_name -> TSSSOS.SpecIntegerArchive
	9,  // 39: TSTSOS.TableStylePropertyChangeSetArchive.category_level1_top_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 40: TSTSOS.TableStylePropertyChangeSetArchive.category_level2_top_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 41: TSTSOS.TableStylePropertyChangeSetArchive.category_level3_top_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 42: TSTSOS.TableStylePropertyChangeSetArchive.category_level4_top_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 43: TSTSOS.TableStylePropertyChangeSetArchive.category_level5_top_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 44: TSTSOS.TableStylePropertyChangeSetArchive.category_level1_label_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 45: TSTSOS.TableStylePropertyChangeSetArchive.category_level2_label_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 46: TSTSOS.TableStylePropertyChangeSetArchive.category_level3_label_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 47: TSTSOS.TableStylePropertyChangeSetArchive.category_level4_label_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 48: TSTSOS.TableStylePropertyChangeSetArchive.category_level5_label_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 49: TSTSOS.TableStylePropertyChangeSetArchive.category_level1_bottom_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 50: TSTSOS.TableStylePropertyChangeSetArchive.category_level2_bottom_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 51: TSTSOS.TableStylePropertyChangeSetArchive.category_level3_bottom_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 52: TSTSOS.TableStylePropertyChangeSetArchive.category_level4_bottom_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 53: TSTSOS.TableStylePropertyChangeSetArchive.category_level5_bottom_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 54: TSTSOS.TableStylePropertyChangeSetArchive.category_level1_interior_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 55: TSTSOS.TableStylePropertyChangeSetArchive.category_level2_interior_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 56: TSTSOS.TableStylePropertyChangeSetArchive.category_level3_interior_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 57: TSTSOS.TableStylePropertyChangeSetArchive.category_level4_interior_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 58: TSTSOS.TableStylePropertyChangeSetArchive.category_level5_interior_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 59: TSTSOS.TableStylePropertyChangeSetArchive.body_pivot_group_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 60: TSTSOS.TableStylePropertyChangeSetArchive.body_pivot_group_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 61: TSTSOS.TableStylePropertyChangeSetArchive.body_pivot_de_emphasis_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 62: TSTSOS.TableStylePropertyChangeSetArchive.body_pivot_emphasis_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 63: TSTSOS.TableStylePropertyChangeSetArchive.header_column_pivot_group_horizontal_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 64: TSTSOS.TableStylePropertyChangeSetArchive.header_column_pivot_group_de_emphasis_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 65: TSTSOS.TableStylePropertyChangeSetArchive.header_column_pivot_separator_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 66: TSTSOS.TableStylePropertyChangeSetArchive.header_row_pivot_group_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 67: TSTSOS.TableStylePropertyChangeSetArchive.header_row_pivot_group_de_emphasis_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 68: TSTSOS.TableStylePropertyChangeSetArchive.header_row_pivot_title_stroke:type_name -> TSDSOS.SpecStrokeArchive
	9,  // 69: TSTSOS.TableStylePropertyChangeSetArchive.footer_row_pivot_group_vertical_stroke:type_name -> TSDSOS.SpecStrokeArchive
	70, // [70:70] is the sub-list for method output_type
	70, // [70:70] is the sub-list for method input_type
	70, // [70:70] is the sub-list for extension type_name
	70, // [70:70] is the sub-list for extension extendee
	0,  // [0:70] is the sub-list for field type_name
}

func init() { file_TSTArchives_sos_proto_init() }
func file_TSTArchives_sos_proto_init() {
	if File_TSTArchives_sos_proto != nil {
		return
	}
	file_TSDArchives_sos_proto_init()
	file_TSSArchives_sos_proto_init()
	file_TSTStylePropertyArchiving_proto_init()
	file_TSWPArchives_sos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TSTArchives_sos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetTableStrokePresetListArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSTArchives_sos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecTableStrokePresetListArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSTArchives_sos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCellStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSTArchives_sos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TSTArchives_sos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TSTArchives_sos_proto_goTypes,
		DependencyIndexes: file_TSTArchives_sos_proto_depIdxs,
		MessageInfos:      file_TSTArchives_sos_proto_msgTypes,
	}.Build()
	File_TSTArchives_sos_proto = out.File
	file_TSTArchives_sos_proto_rawDesc = nil
	file_TSTArchives_sos_proto_goTypes = nil
	file_TSTArchives_sos_proto_depIdxs = nil
}
