// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: TSCHArchives_sos.proto

package kpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecSetChart3DLightingPackageArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chart3DLightingPackage *Chart3DLightingPackageArchive `protobuf:"bytes,1,opt,name=chart3d_lighting_package,json=chart3dLightingPackage" json:"chart3d_lighting_package,omitempty"`
	Unset                  *bool                          `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetChart3DLightingPackageArchive) Reset() {
	*x = SpecSetChart3DLightingPackageArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetChart3DLightingPackageArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetChart3DLightingPackageArchive) ProtoMessage() {}

func (x *SpecSetChart3DLightingPackageArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetChart3DLightingPackageArchive.ProtoReflect.Descriptor instead.
func (*SpecSetChart3DLightingPackageArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{0}
}

func (x *SpecSetChart3DLightingPackageArchive) GetChart3DLightingPackage() *Chart3DLightingPackageArchive {
	if x != nil {
		return x.Chart3DLightingPackage
	}
	return nil
}

func (x *SpecSetChart3DLightingPackageArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecSetChart3DVectorArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chart3DVector *Chart3DVectorArchive `protobuf:"bytes,1,opt,name=chart3d_vector,json=chart3dVector" json:"chart3d_vector,omitempty"`
	Unset         *bool                 `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetChart3DVectorArchive) Reset() {
	*x = SpecSetChart3DVectorArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetChart3DVectorArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetChart3DVectorArchive) ProtoMessage() {}

func (x *SpecSetChart3DVectorArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetChart3DVectorArchive.ProtoReflect.Descriptor instead.
func (*SpecSetChart3DVectorArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{1}
}

func (x *SpecSetChart3DVectorArchive) GetChart3DVector() *Chart3DVectorArchive {
	if x != nil {
		return x.Chart3DVector
	}
	return nil
}

func (x *SpecSetChart3DVectorArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecSetChartErrorBarCustomDataArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartErrorBarCustomData *ChartsNSArrayOfNSNumberDoubleArchive `protobuf:"bytes,1,opt,name=chart_error_bar_custom_data,json=chartErrorBarCustomData" json:"chart_error_bar_custom_data,omitempty"`
	Unset                   *bool                                 `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetChartErrorBarCustomDataArchive) Reset() {
	*x = SpecSetChartErrorBarCustomDataArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetChartErrorBarCustomDataArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetChartErrorBarCustomDataArchive) ProtoMessage() {}

func (x *SpecSetChartErrorBarCustomDataArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetChartErrorBarCustomDataArchive.ProtoReflect.Descriptor instead.
func (*SpecSetChartErrorBarCustomDataArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{2}
}

func (x *SpecSetChartErrorBarCustomDataArchive) GetChartErrorBarCustomData() *ChartsNSArrayOfNSNumberDoubleArchive {
	if x != nil {
		return x.ChartErrorBarCustomData
	}
	return nil
}

func (x *SpecSetChartErrorBarCustomDataArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecSetChartsOptionalDoubleArchiveArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartsOptionalDoubleArchive *ChartsNSNumberDoubleArchive `protobuf:"bytes,1,opt,name=charts_optional_double_archive,json=chartsOptionalDoubleArchive" json:"charts_optional_double_archive,omitempty"`
	Unset                       *bool                        `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetChartsOptionalDoubleArchiveArchive) Reset() {
	*x = SpecSetChartsOptionalDoubleArchiveArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetChartsOptionalDoubleArchiveArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetChartsOptionalDoubleArchiveArchive) ProtoMessage() {}

func (x *SpecSetChartsOptionalDoubleArchiveArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetChartsOptionalDoubleArchiveArchive.ProtoReflect.Descriptor instead.
func (*SpecSetChartsOptionalDoubleArchiveArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{3}
}

func (x *SpecSetChartsOptionalDoubleArchiveArchive) GetChartsOptionalDoubleArchive() *ChartsNSNumberDoubleArchive {
	if x != nil {
		return x.ChartsOptionalDoubleArchive
	}
	return nil
}

func (x *SpecSetChartsOptionalDoubleArchiveArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecSetFormatObjectArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatObject *TSKFormatStructArchive `protobuf:"bytes,1,opt,name=format_object,json=formatObject" json:"format_object,omitempty"`
	Unset        *bool                   `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetFormatObjectArchive) Reset() {
	*x = SpecSetFormatObjectArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetFormatObjectArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetFormatObjectArchive) ProtoMessage() {}

func (x *SpecSetFormatObjectArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetFormatObjectArchive.ProtoReflect.Descriptor instead.
func (*SpecSetFormatObjectArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{4}
}

func (x *SpecSetFormatObjectArchive) GetFormatObject() *TSKFormatStructArchive {
	if x != nil {
		return x.FormatObject
	}
	return nil
}

func (x *SpecSetFormatObjectArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecSetNumberFormatArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberFormat *TSKFormatStructArchive `protobuf:"bytes,1,opt,name=number_format,json=numberFormat" json:"number_format,omitempty"`
	Unset        *bool                   `protobuf:"varint,2,req,name=unset" json:"unset,omitempty"`
}

func (x *SpecSetNumberFormatArchive) Reset() {
	*x = SpecSetNumberFormatArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecSetNumberFormatArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecSetNumberFormatArchive) ProtoMessage() {}

func (x *SpecSetNumberFormatArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecSetNumberFormatArchive.ProtoReflect.Descriptor instead.
func (*SpecSetNumberFormatArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{5}
}

func (x *SpecSetNumberFormatArchive) GetNumberFormat() *TSKFormatStructArchive {
	if x != nil {
		return x.NumberFormat
	}
	return nil
}

func (x *SpecSetNumberFormatArchive) GetUnset() bool {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return false
}

type SpecChart3DLightingPackageArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetChart3DLightingPackage *SpecSetChart3DLightingPackageArchive `protobuf:"bytes,1,opt,name=spec_set_chart3d_lighting_package,json=specSetChart3dLightingPackage" json:"spec_set_chart3d_lighting_package,omitempty"`
}

func (x *SpecChart3DLightingPackageArchive) Reset() {
	*x = SpecChart3DLightingPackageArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecChart3DLightingPackageArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecChart3DLightingPackageArchive) ProtoMessage() {}

func (x *SpecChart3DLightingPackageArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecChart3DLightingPackageArchive.ProtoReflect.Descriptor instead.
func (*SpecChart3DLightingPackageArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{6}
}

func (x *SpecChart3DLightingPackageArchive) GetSpecSetChart3DLightingPackage() *SpecSetChart3DLightingPackageArchive {
	if x != nil {
		return x.SpecSetChart3DLightingPackage
	}
	return nil
}

type SpecChart3DVectorArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetChart3DVector *SpecSetChart3DVectorArchive `protobuf:"bytes,1,opt,name=spec_set_chart3d_vector,json=specSetChart3dVector" json:"spec_set_chart3d_vector,omitempty"`
}

func (x *SpecChart3DVectorArchive) Reset() {
	*x = SpecChart3DVectorArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecChart3DVectorArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecChart3DVectorArchive) ProtoMessage() {}

func (x *SpecChart3DVectorArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecChart3DVectorArchive.ProtoReflect.Descriptor instead.
func (*SpecChart3DVectorArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{7}
}

func (x *SpecChart3DVectorArchive) GetSpecSetChart3DVector() *SpecSetChart3DVectorArchive {
	if x != nil {
		return x.SpecSetChart3DVector
	}
	return nil
}

type SpecChartErrorBarCustomDataArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetChartErrorBarCustomData *SpecSetChartErrorBarCustomDataArchive `protobuf:"bytes,1,opt,name=spec_set_chart_error_bar_custom_data,json=specSetChartErrorBarCustomData" json:"spec_set_chart_error_bar_custom_data,omitempty"`
}

func (x *SpecChartErrorBarCustomDataArchive) Reset() {
	*x = SpecChartErrorBarCustomDataArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecChartErrorBarCustomDataArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecChartErrorBarCustomDataArchive) ProtoMessage() {}

func (x *SpecChartErrorBarCustomDataArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecChartErrorBarCustomDataArchive.ProtoReflect.Descriptor instead.
func (*SpecChartErrorBarCustomDataArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{8}
}

func (x *SpecChartErrorBarCustomDataArchive) GetSpecSetChartErrorBarCustomData() *SpecSetChartErrorBarCustomDataArchive {
	if x != nil {
		return x.SpecSetChartErrorBarCustomData
	}
	return nil
}

type SpecChartsOptionalDoubleArchiveArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetChartsOptionalDoubleArchive *SpecSetChartsOptionalDoubleArchiveArchive `protobuf:"bytes,1,opt,name=spec_set_charts_optional_double_archive,json=specSetChartsOptionalDoubleArchive" json:"spec_set_charts_optional_double_archive,omitempty"`
}

func (x *SpecChartsOptionalDoubleArchiveArchive) Reset() {
	*x = SpecChartsOptionalDoubleArchiveArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecChartsOptionalDoubleArchiveArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecChartsOptionalDoubleArchiveArchive) ProtoMessage() {}

func (x *SpecChartsOptionalDoubleArchiveArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecChartsOptionalDoubleArchiveArchive.ProtoReflect.Descriptor instead.
func (*SpecChartsOptionalDoubleArchiveArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{9}
}

func (x *SpecChartsOptionalDoubleArchiveArchive) GetSpecSetChartsOptionalDoubleArchive() *SpecSetChartsOptionalDoubleArchiveArchive {
	if x != nil {
		return x.SpecSetChartsOptionalDoubleArchive
	}
	return nil
}

type SpecFormatObjectArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetFormatObject *SpecSetFormatObjectArchive `protobuf:"bytes,1,opt,name=spec_set_format_object,json=specSetFormatObject" json:"spec_set_format_object,omitempty"`
}

func (x *SpecFormatObjectArchive) Reset() {
	*x = SpecFormatObjectArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecFormatObjectArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecFormatObjectArchive) ProtoMessage() {}

func (x *SpecFormatObjectArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecFormatObjectArchive.ProtoReflect.Descriptor instead.
func (*SpecFormatObjectArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{10}
}

func (x *SpecFormatObjectArchive) GetSpecSetFormatObject() *SpecSetFormatObjectArchive {
	if x != nil {
		return x.SpecSetFormatObject
	}
	return nil
}

type SpecNumberFormatArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecSetNumberFormat *SpecSetNumberFormatArchive `protobuf:"bytes,1,opt,name=spec_set_number_format,json=specSetNumberFormat" json:"spec_set_number_format,omitempty"`
}

func (x *SpecNumberFormatArchive) Reset() {
	*x = SpecNumberFormatArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecNumberFormatArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecNumberFormatArchive) ProtoMessage() {}

func (x *SpecNumberFormatArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecNumberFormatArchive.ProtoReflect.Descriptor instead.
func (*SpecNumberFormatArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{11}
}

func (x *SpecNumberFormatArchive) GetSpecSetNumberFormat() *SpecSetNumberFormatArchive {
	if x != nil {
		return x.SpecSetNumberFormat
	}
	return nil
}

type ChartAxisNonStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default10DateFormat                  *SpecFormatObjectArchive                `protobuf:"bytes,1,opt,name=default10_date_format,json=default10DateFormat" json:"default10_date_format,omitempty"`
	Default10DateFormatUndefined         *bool                                   `protobuf:"varint,2,opt,name=default10_date_format_undefined,json=default10DateFormatUndefined" json:"default10_date_format_undefined,omitempty"`
	Default10NumberFormat                *SpecNumberFormatArchive                `protobuf:"bytes,3,opt,name=default10_number_format,json=default10NumberFormat" json:"default10_number_format,omitempty"`
	Default10NumberFormatUndefined       *bool                                   `protobuf:"varint,4,opt,name=default10_number_format_undefined,json=default10NumberFormatUndefined" json:"default10_number_format_undefined,omitempty"`
	Default3DLabelPosition               *SpecIntegerArchive                     `protobuf:"bytes,5,opt,name=default3d_label_position,json=default3dLabelPosition" json:"default3d_label_position,omitempty"`
	Default3DLabelPositionUndefined      *bool                                   `protobuf:"varint,6,opt,name=default3d_label_position_undefined,json=default3dLabelPositionUndefined" json:"default3d_label_position_undefined,omitempty"`
	DefaultDateFormat                    *SpecFormatObjectArchive                `protobuf:"bytes,7,opt,name=default_date_format,json=defaultDateFormat" json:"default_date_format,omitempty"`
	DefaultDateFormatUndefined           *bool                                   `protobuf:"varint,8,opt,name=default_date_format_undefined,json=defaultDateFormatUndefined" json:"default_date_format_undefined,omitempty"`
	DefaultDurationFormat                *SpecFormatObjectArchive                `protobuf:"bytes,9,opt,name=default_duration_format,json=defaultDurationFormat" json:"default_duration_format,omitempty"`
	DefaultDurationFormatUndefined       *bool                                   `protobuf:"varint,10,opt,name=default_duration_format_undefined,json=defaultDurationFormatUndefined" json:"default_duration_format_undefined,omitempty"`
	DefaultLabelExplosion                *SpecDoubleArchive                      `protobuf:"bytes,11,opt,name=default_label_explosion,json=defaultLabelExplosion" json:"default_label_explosion,omitempty"`
	DefaultLabelExplosionUndefined       *bool                                   `protobuf:"varint,12,opt,name=default_label_explosion_undefined,json=defaultLabelExplosionUndefined" json:"default_label_explosion_undefined,omitempty"`
	DefaultNumberFormat                  *SpecNumberFormatArchive                `protobuf:"bytes,13,opt,name=default_number_format,json=defaultNumberFormat" json:"default_number_format,omitempty"`
	DefaultNumberFormatUndefined         *bool                                   `protobuf:"varint,14,opt,name=default_number_format_undefined,json=defaultNumberFormatUndefined" json:"default_number_format_undefined,omitempty"`
	DefaultNumberFormatType              *SpecIntegerArchive                     `protobuf:"bytes,15,opt,name=default_number_format_type,json=defaultNumberFormatType" json:"default_number_format_type,omitempty"`
	DefaultNumberFormatTypeUndefined     *bool                                   `protobuf:"varint,16,opt,name=default_number_format_type_undefined,json=defaultNumberFormatTypeUndefined" json:"default_number_format_type_undefined,omitempty"`
	ValueNumberOfDecades                 *SpecIntegerArchive                     `protobuf:"bytes,17,opt,name=value_number_of_decades,json=valueNumberOfDecades" json:"value_number_of_decades,omitempty"`
	ValueNumberOfDecadesUndefined        *bool                                   `protobuf:"varint,18,opt,name=value_number_of_decades_undefined,json=valueNumberOfDecadesUndefined" json:"value_number_of_decades_undefined,omitempty"`
	ValueNumberOfMajorGridlines          *SpecIntegerArchive                     `protobuf:"bytes,19,opt,name=value_number_of_major_gridlines,json=valueNumberOfMajorGridlines" json:"value_number_of_major_gridlines,omitempty"`
	ValueNumberOfMajorGridlinesUndefined *bool                                   `protobuf:"varint,20,opt,name=value_number_of_major_gridlines_undefined,json=valueNumberOfMajorGridlinesUndefined" json:"value_number_of_major_gridlines_undefined,omitempty"`
	ValueNumberOfMinorGridlines          *SpecIntegerArchive                     `protobuf:"bytes,21,opt,name=value_number_of_minor_gridlines,json=valueNumberOfMinorGridlines" json:"value_number_of_minor_gridlines,omitempty"`
	ValueNumberOfMinorGridlinesUndefined *bool                                   `protobuf:"varint,22,opt,name=value_number_of_minor_gridlines_undefined,json=valueNumberOfMinorGridlinesUndefined" json:"value_number_of_minor_gridlines_undefined,omitempty"`
	CategoryPlotToEdges                  *SpecBoolArchive                        `protobuf:"bytes,23,opt,name=category_plot_to_edges,json=categoryPlotToEdges" json:"category_plot_to_edges,omitempty"`
	CategoryPlotToEdgesUndefined         *bool                                   `protobuf:"varint,24,opt,name=category_plot_to_edges_undefined,json=categoryPlotToEdgesUndefined" json:"category_plot_to_edges_undefined,omitempty"`
	ValueScale                           *SpecIntegerArchive                     `protobuf:"bytes,25,opt,name=value_scale,json=valueScale" json:"value_scale,omitempty"`
	ValueScaleUndefined                  *bool                                   `protobuf:"varint,26,opt,name=value_scale_undefined,json=valueScaleUndefined" json:"value_scale_undefined,omitempty"`
	CategoryShowLabels                   *SpecBoolArchive                        `protobuf:"bytes,27,opt,name=category_show_labels,json=categoryShowLabels" json:"category_show_labels,omitempty"`
	CategoryShowLabelsUndefined          *bool                                   `protobuf:"varint,28,opt,name=category_show_labels_undefined,json=categoryShowLabelsUndefined" json:"category_show_labels_undefined,omitempty"`
	DefaultShowLabels                    *SpecBoolArchive                        `protobuf:"bytes,29,opt,name=default_show_labels,json=defaultShowLabels" json:"default_show_labels,omitempty"`
	DefaultShowLabelsUndefined           *bool                                   `protobuf:"varint,30,opt,name=default_show_labels_undefined,json=defaultShowLabelsUndefined" json:"default_show_labels_undefined,omitempty"`
	ValueShowLabels                      *SpecBoolArchive                        `protobuf:"bytes,31,opt,name=value_show_labels,json=valueShowLabels" json:"value_show_labels,omitempty"`
	ValueShowLabelsUndefined             *bool                                   `protobuf:"varint,32,opt,name=value_show_labels_undefined,json=valueShowLabelsUndefined" json:"value_show_labels_undefined,omitempty"`
	CategoryShowSeriesLabels             *SpecBoolArchive                        `protobuf:"bytes,33,opt,name=category_show_series_labels,json=categoryShowSeriesLabels" json:"category_show_series_labels,omitempty"`
	CategoryShowSeriesLabelsUndefined    *bool                                   `protobuf:"varint,34,opt,name=category_show_series_labels_undefined,json=categoryShowSeriesLabelsUndefined" json:"category_show_series_labels_undefined,omitempty"`
	MultiDataShowSeriesLabels            *SpecBoolArchive                        `protobuf:"bytes,35,opt,name=multi_data_show_series_labels,json=multiDataShowSeriesLabels" json:"multi_data_show_series_labels,omitempty"`
	MultiDataShowSeriesLabelsUndefined   *bool                                   `protobuf:"varint,36,opt,name=multi_data_show_series_labels_undefined,json=multiDataShowSeriesLabelsUndefined" json:"multi_data_show_series_labels_undefined,omitempty"`
	CategoryShowTitle                    *SpecBoolArchive                        `protobuf:"bytes,37,opt,name=category_show_title,json=categoryShowTitle" json:"category_show_title,omitempty"`
	CategoryShowTitleUndefined           *bool                                   `protobuf:"varint,38,opt,name=category_show_title_undefined,json=categoryShowTitleUndefined" json:"category_show_title_undefined,omitempty"`
	ValueShowTitle                       *SpecBoolArchive                        `protobuf:"bytes,39,opt,name=value_show_title,json=valueShowTitle" json:"value_show_title,omitempty"`
	ValueShowTitleUndefined              *bool                                   `protobuf:"varint,40,opt,name=value_show_title_undefined,json=valueShowTitleUndefined" json:"value_show_title_undefined,omitempty"`
	CategoryTitle                        *SpecStringArchive                      `protobuf:"bytes,41,opt,name=category_title,json=categoryTitle" json:"category_title,omitempty"`
	CategoryTitleUndefined               *bool                                   `protobuf:"varint,42,opt,name=category_title_undefined,json=categoryTitleUndefined" json:"category_title_undefined,omitempty"`
	ValueTitle                           *SpecStringArchive                      `protobuf:"bytes,43,opt,name=value_title,json=valueTitle" json:"value_title,omitempty"`
	ValueTitleUndefined                  *bool                                   `protobuf:"varint,44,opt,name=value_title_undefined,json=valueTitleUndefined" json:"value_title_undefined,omitempty"`
	DefaultUserMax                       *SpecChartsOptionalDoubleArchiveArchive `protobuf:"bytes,45,opt,name=default_user_max,json=defaultUserMax" json:"default_user_max,omitempty"`
	DefaultUserMaxUndefined              *bool                                   `protobuf:"varint,46,opt,name=default_user_max_undefined,json=defaultUserMaxUndefined" json:"default_user_max_undefined,omitempty"`
	DefaultUserMin                       *SpecChartsOptionalDoubleArchiveArchive `protobuf:"bytes,47,opt,name=default_user_min,json=defaultUserMin" json:"default_user_min,omitempty"`
	DefaultUserMinUndefined              *bool                                   `protobuf:"varint,48,opt,name=default_user_min_undefined,json=defaultUserMinUndefined" json:"default_user_min_undefined,omitempty"`
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) Reset() {
	*x = ChartAxisNonStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartAxisNonStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartAxisNonStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartAxisNonStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartAxisNonStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{12}
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault10DateFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.Default10DateFormat
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault10DateFormatUndefined() bool {
	if x != nil && x.Default10DateFormatUndefined != nil {
		return *x.Default10DateFormatUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault10NumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.Default10NumberFormat
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault10NumberFormatUndefined() bool {
	if x != nil && x.Default10NumberFormatUndefined != nil {
		return *x.Default10NumberFormatUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault3DLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.Default3DLabelPosition
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefault3DLabelPositionUndefined() bool {
	if x != nil && x.Default3DLabelPositionUndefined != nil {
		return *x.Default3DLabelPositionUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultDateFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.DefaultDateFormat
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultDateFormatUndefined() bool {
	if x != nil && x.DefaultDateFormatUndefined != nil {
		return *x.DefaultDateFormatUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultDurationFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.DefaultDurationFormat
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultDurationFormatUndefined() bool {
	if x != nil && x.DefaultDurationFormatUndefined != nil {
		return *x.DefaultDurationFormatUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultLabelExplosion() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultLabelExplosion
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultLabelExplosionUndefined() bool {
	if x != nil && x.DefaultLabelExplosionUndefined != nil {
		return *x.DefaultLabelExplosionUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultNumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.DefaultNumberFormat
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultNumberFormatUndefined() bool {
	if x != nil && x.DefaultNumberFormatUndefined != nil {
		return *x.DefaultNumberFormatUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultNumberFormatType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultNumberFormatType
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultNumberFormatTypeUndefined() bool {
	if x != nil && x.DefaultNumberFormatTypeUndefined != nil {
		return *x.DefaultNumberFormatTypeUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfDecades() *SpecIntegerArchive {
	if x != nil {
		return x.ValueNumberOfDecades
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfDecadesUndefined() bool {
	if x != nil && x.ValueNumberOfDecadesUndefined != nil {
		return *x.ValueNumberOfDecadesUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfMajorGridlines() *SpecIntegerArchive {
	if x != nil {
		return x.ValueNumberOfMajorGridlines
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfMajorGridlinesUndefined() bool {
	if x != nil && x.ValueNumberOfMajorGridlinesUndefined != nil {
		return *x.ValueNumberOfMajorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfMinorGridlines() *SpecIntegerArchive {
	if x != nil {
		return x.ValueNumberOfMinorGridlines
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueNumberOfMinorGridlinesUndefined() bool {
	if x != nil && x.ValueNumberOfMinorGridlinesUndefined != nil {
		return *x.ValueNumberOfMinorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryPlotToEdges() *SpecBoolArchive {
	if x != nil {
		return x.CategoryPlotToEdges
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryPlotToEdgesUndefined() bool {
	if x != nil && x.CategoryPlotToEdgesUndefined != nil {
		return *x.CategoryPlotToEdgesUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueScale() *SpecIntegerArchive {
	if x != nil {
		return x.ValueScale
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueScaleUndefined() bool {
	if x != nil && x.ValueScaleUndefined != nil {
		return *x.ValueScaleUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowLabels() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowLabels
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowLabelsUndefined() bool {
	if x != nil && x.CategoryShowLabelsUndefined != nil {
		return *x.CategoryShowLabelsUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultShowLabels() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowLabels
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultShowLabelsUndefined() bool {
	if x != nil && x.DefaultShowLabelsUndefined != nil {
		return *x.DefaultShowLabelsUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueShowLabels() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowLabels
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueShowLabelsUndefined() bool {
	if x != nil && x.ValueShowLabelsUndefined != nil {
		return *x.ValueShowLabelsUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowSeriesLabels() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowSeriesLabels
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowSeriesLabelsUndefined() bool {
	if x != nil && x.CategoryShowSeriesLabelsUndefined != nil {
		return *x.CategoryShowSeriesLabelsUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetMultiDataShowSeriesLabels() *SpecBoolArchive {
	if x != nil {
		return x.MultiDataShowSeriesLabels
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetMultiDataShowSeriesLabelsUndefined() bool {
	if x != nil && x.MultiDataShowSeriesLabelsUndefined != nil {
		return *x.MultiDataShowSeriesLabelsUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowTitle() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowTitle
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryShowTitleUndefined() bool {
	if x != nil && x.CategoryShowTitleUndefined != nil {
		return *x.CategoryShowTitleUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueShowTitle() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowTitle
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueShowTitleUndefined() bool {
	if x != nil && x.ValueShowTitleUndefined != nil {
		return *x.ValueShowTitleUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryTitle() *SpecStringArchive {
	if x != nil {
		return x.CategoryTitle
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetCategoryTitleUndefined() bool {
	if x != nil && x.CategoryTitleUndefined != nil {
		return *x.CategoryTitleUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueTitle() *SpecStringArchive {
	if x != nil {
		return x.ValueTitle
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetValueTitleUndefined() bool {
	if x != nil && x.ValueTitleUndefined != nil {
		return *x.ValueTitleUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultUserMax() *SpecChartsOptionalDoubleArchiveArchive {
	if x != nil {
		return x.DefaultUserMax
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultUserMaxUndefined() bool {
	if x != nil && x.DefaultUserMaxUndefined != nil {
		return *x.DefaultUserMaxUndefined
	}
	return false
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultUserMin() *SpecChartsOptionalDoubleArchiveArchive {
	if x != nil {
		return x.DefaultUserMin
	}
	return nil
}

func (x *ChartAxisNonStylePropertyChangeSetArchive) GetDefaultUserMinUndefined() bool {
	if x != nil && x.DefaultUserMinUndefined != nil {
		return *x.DefaultUserMinUndefined
	}
	return false
}

type ChartAxisStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category3DGridlineOpacity                   *SpecDoubleArchive  `protobuf:"bytes,1,opt,name=category3d_gridline_opacity,json=category3dGridlineOpacity" json:"category3d_gridline_opacity,omitempty"`
	Category3DGridlineOpacityUndefined          *bool               `protobuf:"varint,2,opt,name=category3d_gridline_opacity_undefined,json=category3dGridlineOpacityUndefined" json:"category3d_gridline_opacity_undefined,omitempty"`
	Value3DGridlineOpacity                      *SpecDoubleArchive  `protobuf:"bytes,3,opt,name=value3d_gridline_opacity,json=value3dGridlineOpacity" json:"value3d_gridline_opacity,omitempty"`
	Value3DGridlineOpacityUndefined             *bool               `protobuf:"varint,4,opt,name=value3d_gridline_opacity_undefined,json=value3dGridlineOpacityUndefined" json:"value3d_gridline_opacity_undefined,omitempty"`
	Category3DGridlineStroke                    *SpecStrokeArchive  `protobuf:"bytes,5,opt,name=category3d_gridline_stroke,json=category3dGridlineStroke" json:"category3d_gridline_stroke,omitempty"`
	Category3DGridlineStrokeUndefined           *bool               `protobuf:"varint,6,opt,name=category3d_gridline_stroke_undefined,json=category3dGridlineStrokeUndefined" json:"category3d_gridline_stroke_undefined,omitempty"`
	Value3DGridlineStroke                       *SpecStrokeArchive  `protobuf:"bytes,7,opt,name=value3d_gridline_stroke,json=value3dGridlineStroke" json:"value3d_gridline_stroke,omitempty"`
	Value3DGridlineStrokeUndefined              *bool               `protobuf:"varint,8,opt,name=value3d_gridline_stroke_undefined,json=value3dGridlineStrokeUndefined" json:"value3d_gridline_stroke_undefined,omitempty"`
	CategoryHorizontalSpacing                   *SpecIntegerArchive `protobuf:"bytes,9,opt,name=category_horizontal_spacing,json=categoryHorizontalSpacing" json:"category_horizontal_spacing,omitempty"`
	CategoryHorizontalSpacingUndefined          *bool               `protobuf:"varint,10,opt,name=category_horizontal_spacing_undefined,json=categoryHorizontalSpacingUndefined" json:"category_horizontal_spacing_undefined,omitempty"`
	DefaultLabelAngleBaselineDirection          *SpecIntegerArchive `protobuf:"bytes,11,opt,name=default_label_angle_baseline_direction,json=defaultLabelAngleBaselineDirection" json:"default_label_angle_baseline_direction,omitempty"`
	DefaultLabelAngleBaselineDirectionUndefined *bool               `protobuf:"varint,12,opt,name=default_label_angle_baseline_direction_undefined,json=defaultLabelAngleBaselineDirectionUndefined" json:"default_label_angle_baseline_direction_undefined,omitempty"`
	CategoryLabelParagraphStyleIndex            *SpecIntegerArchive `protobuf:"bytes,13,opt,name=category_label_paragraph_style_index,json=categoryLabelParagraphStyleIndex" json:"category_label_paragraph_style_index,omitempty"`
	CategoryLabelParagraphStyleIndexUndefined   *bool               `protobuf:"varint,14,opt,name=category_label_paragraph_style_index_undefined,json=categoryLabelParagraphStyleIndexUndefined" json:"category_label_paragraph_style_index_undefined,omitempty"`
	DefaultLabelParagraphStyleIndex             *SpecIntegerArchive `protobuf:"bytes,15,opt,name=default_label_paragraph_style_index,json=defaultLabelParagraphStyleIndex" json:"default_label_paragraph_style_index,omitempty"`
	DefaultLabelParagraphStyleIndexUndefined    *bool               `protobuf:"varint,16,opt,name=default_label_paragraph_style_index_undefined,json=defaultLabelParagraphStyleIndexUndefined" json:"default_label_paragraph_style_index_undefined,omitempty"`
	ValueLabelParagraphStyleIndex               *SpecIntegerArchive `protobuf:"bytes,17,opt,name=value_label_paragraph_style_index,json=valueLabelParagraphStyleIndex" json:"value_label_paragraph_style_index,omitempty"`
	ValueLabelParagraphStyleIndexUndefined      *bool               `protobuf:"varint,18,opt,name=value_label_paragraph_style_index_undefined,json=valueLabelParagraphStyleIndexUndefined" json:"value_label_paragraph_style_index_undefined,omitempty"`
	CategoryLabelsOrientation                   *SpecDoubleArchive  `protobuf:"bytes,19,opt,name=category_labels_orientation,json=categoryLabelsOrientation" json:"category_labels_orientation,omitempty"`
	CategoryLabelsOrientationUndefined          *bool               `protobuf:"varint,20,opt,name=category_labels_orientation_undefined,json=categoryLabelsOrientationUndefined" json:"category_labels_orientation_undefined,omitempty"`
	DefaultLabelsOrientation                    *SpecDoubleArchive  `protobuf:"bytes,21,opt,name=default_labels_orientation,json=defaultLabelsOrientation" json:"default_labels_orientation,omitempty"`
	DefaultLabelsOrientationUndefined           *bool               `protobuf:"varint,22,opt,name=default_labels_orientation_undefined,json=defaultLabelsOrientationUndefined" json:"default_labels_orientation_undefined,omitempty"`
	ValueLabelsOrientation                      *SpecDoubleArchive  `protobuf:"bytes,23,opt,name=value_labels_orientation,json=valueLabelsOrientation" json:"value_labels_orientation,omitempty"`
	ValueLabelsOrientationUndefined             *bool               `protobuf:"varint,24,opt,name=value_labels_orientation_undefined,json=valueLabelsOrientationUndefined" json:"value_labels_orientation_undefined,omitempty"`
	CategoryMajorGridlineOpacity                *SpecDoubleArchive  `protobuf:"bytes,25,opt,name=category_major_gridline_opacity,json=categoryMajorGridlineOpacity" json:"category_major_gridline_opacity,omitempty"`
	CategoryMajorGridlineOpacityUndefined       *bool               `protobuf:"varint,26,opt,name=category_major_gridline_opacity_undefined,json=categoryMajorGridlineOpacityUndefined" json:"category_major_gridline_opacity_undefined,omitempty"`
	ValueMajorGridlineOpacity                   *SpecDoubleArchive  `protobuf:"bytes,27,opt,name=value_major_gridline_opacity,json=valueMajorGridlineOpacity" json:"value_major_gridline_opacity,omitempty"`
	ValueMajorGridlineOpacityUndefined          *bool               `protobuf:"varint,28,opt,name=value_major_gridline_opacity_undefined,json=valueMajorGridlineOpacityUndefined" json:"value_major_gridline_opacity_undefined,omitempty"`
	CategoryMajorGridlineShadow                 *SpecShadowArchive  `protobuf:"bytes,29,opt,name=category_major_gridline_shadow,json=categoryMajorGridlineShadow" json:"category_major_gridline_shadow,omitempty"`
	CategoryMajorGridlineShadowUndefined        *bool               `protobuf:"varint,30,opt,name=category_major_gridline_shadow_undefined,json=categoryMajorGridlineShadowUndefined" json:"category_major_gridline_shadow_undefined,omitempty"`
	ValueMajorGridlineShadow                    *SpecShadowArchive  `protobuf:"bytes,31,opt,name=value_major_gridline_shadow,json=valueMajorGridlineShadow" json:"value_major_gridline_shadow,omitempty"`
	ValueMajorGridlineShadowUndefined           *bool               `protobuf:"varint,32,opt,name=value_major_gridline_shadow_undefined,json=valueMajorGridlineShadowUndefined" json:"value_major_gridline_shadow_undefined,omitempty"`
	CategoryMajorGridlineStroke                 *SpecStrokeArchive  `protobuf:"bytes,33,opt,name=category_major_gridline_stroke,json=categoryMajorGridlineStroke" json:"category_major_gridline_stroke,omitempty"`
	CategoryMajorGridlineStrokeUndefined        *bool               `protobuf:"varint,34,opt,name=category_major_gridline_stroke_undefined,json=categoryMajorGridlineStrokeUndefined" json:"category_major_gridline_stroke_undefined,omitempty"`
	ValueMajorGridlineStroke                    *SpecStrokeArchive  `protobuf:"bytes,35,opt,name=value_major_gridline_stroke,json=valueMajorGridlineStroke" json:"value_major_gridline_stroke,omitempty"`
	ValueMajorGridlineStrokeUndefined           *bool               `protobuf:"varint,36,opt,name=value_major_gridline_stroke_undefined,json=valueMajorGridlineStrokeUndefined" json:"value_major_gridline_stroke_undefined,omitempty"`
	CategoryMinorGridlineOpacity                *SpecDoubleArchive  `protobuf:"bytes,37,opt,name=category_minor_gridline_opacity,json=categoryMinorGridlineOpacity" json:"category_minor_gridline_opacity,omitempty"`
	CategoryMinorGridlineOpacityUndefined       *bool               `protobuf:"varint,38,opt,name=category_minor_gridline_opacity_undefined,json=categoryMinorGridlineOpacityUndefined" json:"category_minor_gridline_opacity_undefined,omitempty"`
	ValueMinorGridlineOpacity                   *SpecDoubleArchive  `protobuf:"bytes,39,opt,name=value_minor_gridline_opacity,json=valueMinorGridlineOpacity" json:"value_minor_gridline_opacity,omitempty"`
	ValueMinorGridlineOpacityUndefined          *bool               `protobuf:"varint,40,opt,name=value_minor_gridline_opacity_undefined,json=valueMinorGridlineOpacityUndefined" json:"value_minor_gridline_opacity_undefined,omitempty"`
	CategoryMinorGridlineShadow                 *SpecShadowArchive  `protobuf:"bytes,41,opt,name=category_minor_gridline_shadow,json=categoryMinorGridlineShadow" json:"category_minor_gridline_shadow,omitempty"`
	CategoryMinorGridlineShadowUndefined        *bool               `protobuf:"varint,42,opt,name=category_minor_gridline_shadow_undefined,json=categoryMinorGridlineShadowUndefined" json:"category_minor_gridline_shadow_undefined,omitempty"`
	ValueMinorGridlineShadow                    *SpecShadowArchive  `protobuf:"bytes,43,opt,name=value_minor_gridline_shadow,json=valueMinorGridlineShadow" json:"value_minor_gridline_shadow,omitempty"`
	ValueMinorGridlineShadowUndefined           *bool               `protobuf:"varint,44,opt,name=value_minor_gridline_shadow_undefined,json=valueMinorGridlineShadowUndefined" json:"value_minor_gridline_shadow_undefined,omitempty"`
	CategoryMinorGridlineStroke                 *SpecStrokeArchive  `protobuf:"bytes,45,opt,name=category_minor_gridline_stroke,json=categoryMinorGridlineStroke" json:"category_minor_gridline_stroke,omitempty"`
	CategoryMinorGridlineStrokeUndefined        *bool               `protobuf:"varint,46,opt,name=category_minor_gridline_stroke_undefined,json=categoryMinorGridlineStrokeUndefined" json:"category_minor_gridline_stroke_undefined,omitempty"`
	ValueMinorGridlineStroke                    *SpecStrokeArchive  `protobuf:"bytes,47,opt,name=value_minor_gridline_stroke,json=valueMinorGridlineStroke" json:"value_minor_gridline_stroke,omitempty"`
	ValueMinorGridlineStrokeUndefined           *bool               `protobuf:"varint,48,opt,name=value_minor_gridline_stroke_undefined,json=valueMinorGridlineStrokeUndefined" json:"value_minor_gridline_stroke_undefined,omitempty"`
	CategoryShowAxis                            *SpecBoolArchive    `protobuf:"bytes,49,opt,name=category_show_axis,json=categoryShowAxis" json:"category_show_axis,omitempty"`
	CategoryShowAxisUndefined                   *bool               `protobuf:"varint,50,opt,name=category_show_axis_undefined,json=categoryShowAxisUndefined" json:"category_show_axis_undefined,omitempty"`
	ValueShowAxis                               *SpecBoolArchive    `protobuf:"bytes,51,opt,name=value_show_axis,json=valueShowAxis" json:"value_show_axis,omitempty"`
	ValueShowAxisUndefined                      *bool               `protobuf:"varint,52,opt,name=value_show_axis_undefined,json=valueShowAxisUndefined" json:"value_show_axis_undefined,omitempty"`
	DefaultShowExtensionLines                   *SpecBoolArchive    `protobuf:"bytes,53,opt,name=default_show_extension_lines,json=defaultShowExtensionLines" json:"default_show_extension_lines,omitempty"`
	DefaultShowExtensionLinesUndefined          *bool               `protobuf:"varint,54,opt,name=default_show_extension_lines_undefined,json=defaultShowExtensionLinesUndefined" json:"default_show_extension_lines_undefined,omitempty"`
	CategoryShowGridlineTickmarks               *SpecBoolArchive    `protobuf:"bytes,55,opt,name=category_show_gridline_tickmarks,json=categoryShowGridlineTickmarks" json:"category_show_gridline_tickmarks,omitempty"`
	CategoryShowGridlineTickmarksUndefined      *bool               `protobuf:"varint,56,opt,name=category_show_gridline_tickmarks_undefined,json=categoryShowGridlineTickmarksUndefined" json:"category_show_gridline_tickmarks_undefined,omitempty"`
	ValueShowGridlineTickmarks                  *SpecBoolArchive    `protobuf:"bytes,57,opt,name=value_show_gridline_tickmarks,json=valueShowGridlineTickmarks" json:"value_show_gridline_tickmarks,omitempty"`
	ValueShowGridlineTickmarksUndefined         *bool               `protobuf:"varint,58,opt,name=value_show_gridline_tickmarks_undefined,json=valueShowGridlineTickmarksUndefined" json:"value_show_gridline_tickmarks_undefined,omitempty"`
	CategoryShowLastLabel                       *SpecBoolArchive    `protobuf:"bytes,59,opt,name=category_show_last_label,json=categoryShowLastLabel" json:"category_show_last_label,omitempty"`
	CategoryShowLastLabelUndefined              *bool               `protobuf:"varint,60,opt,name=category_show_last_label_undefined,json=categoryShowLastLabelUndefined" json:"category_show_last_label_undefined,omitempty"`
	CategoryShowMajorGridlines                  *SpecBoolArchive    `protobuf:"bytes,61,opt,name=category_show_major_gridlines,json=categoryShowMajorGridlines" json:"category_show_major_gridlines,omitempty"`
	CategoryShowMajorGridlinesUndefined         *bool               `protobuf:"varint,62,opt,name=category_show_major_gridlines_undefined,json=categoryShowMajorGridlinesUndefined" json:"category_show_major_gridlines_undefined,omitempty"`
	PolarCategoryShowMajorGridlines             *SpecBoolArchive    `protobuf:"bytes,63,opt,name=polar_category_show_major_gridlines,json=polarCategoryShowMajorGridlines" json:"polar_category_show_major_gridlines,omitempty"`
	PolarCategoryShowMajorGridlinesUndefined    *bool               `protobuf:"varint,64,opt,name=polar_category_show_major_gridlines_undefined,json=polarCategoryShowMajorGridlinesUndefined" json:"polar_category_show_major_gridlines_undefined,omitempty"`
	ValueShowMajorGridlines                     *SpecBoolArchive    `protobuf:"bytes,65,opt,name=value_show_major_gridlines,json=valueShowMajorGridlines" json:"value_show_major_gridlines,omitempty"`
	ValueShowMajorGridlinesUndefined            *bool               `protobuf:"varint,66,opt,name=value_show_major_gridlines_undefined,json=valueShowMajorGridlinesUndefined" json:"value_show_major_gridlines_undefined,omitempty"`
	CategoryShowMajorTickmarks                  *SpecBoolArchive    `protobuf:"bytes,67,opt,name=category_show_major_tickmarks,json=categoryShowMajorTickmarks" json:"category_show_major_tickmarks,omitempty"`
	CategoryShowMajorTickmarksUndefined         *bool               `protobuf:"varint,68,opt,name=category_show_major_tickmarks_undefined,json=categoryShowMajorTickmarksUndefined" json:"category_show_major_tickmarks_undefined,omitempty"`
	ValueShowMajorTickmarks                     *SpecBoolArchive    `protobuf:"bytes,69,opt,name=value_show_major_tickmarks,json=valueShowMajorTickmarks" json:"value_show_major_tickmarks,omitempty"`
	ValueShowMajorTickmarksUndefined            *bool               `protobuf:"varint,70,opt,name=value_show_major_tickmarks_undefined,json=valueShowMajorTickmarksUndefined" json:"value_show_major_tickmarks_undefined,omitempty"`
	ValueShowMinimumLabel                       *SpecBoolArchive    `protobuf:"bytes,71,opt,name=value_show_minimum_label,json=valueShowMinimumLabel" json:"value_show_minimum_label,omitempty"`
	ValueShowMinimumLabelUndefined              *bool               `protobuf:"varint,72,opt,name=value_show_minimum_label_undefined,json=valueShowMinimumLabelUndefined" json:"value_show_minimum_label_undefined,omitempty"`
	CategoryShowMinorGridlines                  *SpecBoolArchive    `protobuf:"bytes,73,opt,name=category_show_minor_gridlines,json=categoryShowMinorGridlines" json:"category_show_minor_gridlines,omitempty"`
	CategoryShowMinorGridlinesUndefined         *bool               `protobuf:"varint,74,opt,name=category_show_minor_gridlines_undefined,json=categoryShowMinorGridlinesUndefined" json:"category_show_minor_gridlines_undefined,omitempty"`
	ValueShowMinorGridlines                     *SpecBoolArchive    `protobuf:"bytes,75,opt,name=value_show_minor_gridlines,json=valueShowMinorGridlines" json:"value_show_minor_gridlines,omitempty"`
	ValueShowMinorGridlinesUndefined            *bool               `protobuf:"varint,76,opt,name=value_show_minor_gridlines_undefined,json=valueShowMinorGridlinesUndefined" json:"value_show_minor_gridlines_undefined,omitempty"`
	CategoryShowMinorTickmarks                  *SpecBoolArchive    `protobuf:"bytes,77,opt,name=category_show_minor_tickmarks,json=categoryShowMinorTickmarks" json:"category_show_minor_tickmarks,omitempty"`
	CategoryShowMinorTickmarksUndefined         *bool               `protobuf:"varint,78,opt,name=category_show_minor_tickmarks_undefined,json=categoryShowMinorTickmarksUndefined" json:"category_show_minor_tickmarks_undefined,omitempty"`
	ValueShowMinorTickmarks                     *SpecBoolArchive    `protobuf:"bytes,79,opt,name=value_show_minor_tickmarks,json=valueShowMinorTickmarks" json:"value_show_minor_tickmarks,omitempty"`
	ValueShowMinorTickmarksUndefined            *bool               `protobuf:"varint,80,opt,name=value_show_minor_tickmarks_undefined,json=valueShowMinorTickmarksUndefined" json:"value_show_minor_tickmarks_undefined,omitempty"`
	CategoryTickmarkLocation                    *SpecIntegerArchive `protobuf:"bytes,81,opt,name=category_tickmark_location,json=categoryTickmarkLocation" json:"category_tickmark_location,omitempty"`
	CategoryTickmarkLocationUndefined           *bool               `protobuf:"varint,82,opt,name=category_tickmark_location_undefined,json=categoryTickmarkLocationUndefined" json:"category_tickmark_location_undefined,omitempty"`
	ValueTickmarkLocation                       *SpecIntegerArchive `protobuf:"bytes,83,opt,name=value_tickmark_location,json=valueTickmarkLocation" json:"value_tickmark_location,omitempty"`
	ValueTickmarkLocationUndefined              *bool               `protobuf:"varint,84,opt,name=value_tickmark_location_undefined,json=valueTickmarkLocationUndefined" json:"value_tickmark_location_undefined,omitempty"`
	CategoryTitleParagraphStyleIndex            *SpecIntegerArchive `protobuf:"bytes,85,opt,name=category_title_paragraph_style_index,json=categoryTitleParagraphStyleIndex" json:"category_title_paragraph_style_index,omitempty"`
	CategoryTitleParagraphStyleIndexUndefined   *bool               `protobuf:"varint,86,opt,name=category_title_paragraph_style_index_undefined,json=categoryTitleParagraphStyleIndexUndefined" json:"category_title_paragraph_style_index_undefined,omitempty"`
	DefaultTitleParagraphStyleIndex             *SpecIntegerArchive `protobuf:"bytes,87,opt,name=default_title_paragraph_style_index,json=defaultTitleParagraphStyleIndex" json:"default_title_paragraph_style_index,omitempty"`
	DefaultTitleParagraphStyleIndexUndefined    *bool               `protobuf:"varint,88,opt,name=default_title_paragraph_style_index_undefined,json=defaultTitleParagraphStyleIndexUndefined" json:"default_title_paragraph_style_index_undefined,omitempty"`
	ValueTitleParagraphStyleIndex               *SpecIntegerArchive `protobuf:"bytes,89,opt,name=value_title_paragraph_style_index,json=valueTitleParagraphStyleIndex" json:"value_title_paragraph_style_index,omitempty"`
	ValueTitleParagraphStyleIndexUndefined      *bool               `protobuf:"varint,90,opt,name=value_title_paragraph_style_index_undefined,json=valueTitleParagraphStyleIndexUndefined" json:"value_title_paragraph_style_index_undefined,omitempty"`
	CategoryVerticalSpacing                     *SpecIntegerArchive `protobuf:"bytes,91,opt,name=category_vertical_spacing,json=categoryVerticalSpacing" json:"category_vertical_spacing,omitempty"`
	CategoryVerticalSpacingUndefined            *bool               `protobuf:"varint,92,opt,name=category_vertical_spacing_undefined,json=categoryVerticalSpacingUndefined" json:"category_vertical_spacing_undefined,omitempty"`
}

func (x *ChartAxisStylePropertyChangeSetArchive) Reset() {
	*x = ChartAxisStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartAxisStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartAxisStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartAxisStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartAxisStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartAxisStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{13}
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategory3DGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.Category3DGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategory3DGridlineOpacityUndefined() bool {
	if x != nil && x.Category3DGridlineOpacityUndefined != nil {
		return *x.Category3DGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValue3DGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.Value3DGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValue3DGridlineOpacityUndefined() bool {
	if x != nil && x.Value3DGridlineOpacityUndefined != nil {
		return *x.Value3DGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategory3DGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.Category3DGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategory3DGridlineStrokeUndefined() bool {
	if x != nil && x.Category3DGridlineStrokeUndefined != nil {
		return *x.Category3DGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValue3DGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.Value3DGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValue3DGridlineStrokeUndefined() bool {
	if x != nil && x.Value3DGridlineStrokeUndefined != nil {
		return *x.Value3DGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryHorizontalSpacing() *SpecIntegerArchive {
	if x != nil {
		return x.CategoryHorizontalSpacing
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryHorizontalSpacingUndefined() bool {
	if x != nil && x.CategoryHorizontalSpacingUndefined != nil {
		return *x.CategoryHorizontalSpacingUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelAngleBaselineDirection() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultLabelAngleBaselineDirection
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelAngleBaselineDirectionUndefined() bool {
	if x != nil && x.DefaultLabelAngleBaselineDirectionUndefined != nil {
		return *x.DefaultLabelAngleBaselineDirectionUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.CategoryLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.CategoryLabelParagraphStyleIndexUndefined != nil {
		return *x.CategoryLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.ValueLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.ValueLabelParagraphStyleIndexUndefined != nil {
		return *x.ValueLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryLabelsOrientation() *SpecDoubleArchive {
	if x != nil {
		return x.CategoryLabelsOrientation
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryLabelsOrientationUndefined() bool {
	if x != nil && x.CategoryLabelsOrientationUndefined != nil {
		return *x.CategoryLabelsOrientationUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelsOrientation() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultLabelsOrientation
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultLabelsOrientationUndefined() bool {
	if x != nil && x.DefaultLabelsOrientationUndefined != nil {
		return *x.DefaultLabelsOrientationUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueLabelsOrientation() *SpecDoubleArchive {
	if x != nil {
		return x.ValueLabelsOrientation
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueLabelsOrientationUndefined() bool {
	if x != nil && x.ValueLabelsOrientationUndefined != nil {
		return *x.ValueLabelsOrientationUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.CategoryMajorGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineOpacityUndefined() bool {
	if x != nil && x.CategoryMajorGridlineOpacityUndefined != nil {
		return *x.CategoryMajorGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.ValueMajorGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineOpacityUndefined() bool {
	if x != nil && x.ValueMajorGridlineOpacityUndefined != nil {
		return *x.ValueMajorGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineShadow() *SpecShadowArchive {
	if x != nil {
		return x.CategoryMajorGridlineShadow
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineShadowUndefined() bool {
	if x != nil && x.CategoryMajorGridlineShadowUndefined != nil {
		return *x.CategoryMajorGridlineShadowUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineShadow() *SpecShadowArchive {
	if x != nil {
		return x.ValueMajorGridlineShadow
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineShadowUndefined() bool {
	if x != nil && x.ValueMajorGridlineShadowUndefined != nil {
		return *x.ValueMajorGridlineShadowUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryMajorGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMajorGridlineStrokeUndefined() bool {
	if x != nil && x.CategoryMajorGridlineStrokeUndefined != nil {
		return *x.CategoryMajorGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.ValueMajorGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMajorGridlineStrokeUndefined() bool {
	if x != nil && x.ValueMajorGridlineStrokeUndefined != nil {
		return *x.ValueMajorGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.CategoryMinorGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineOpacityUndefined() bool {
	if x != nil && x.CategoryMinorGridlineOpacityUndefined != nil {
		return *x.CategoryMinorGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.ValueMinorGridlineOpacity
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineOpacityUndefined() bool {
	if x != nil && x.ValueMinorGridlineOpacityUndefined != nil {
		return *x.ValueMinorGridlineOpacityUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineShadow() *SpecShadowArchive {
	if x != nil {
		return x.CategoryMinorGridlineShadow
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineShadowUndefined() bool {
	if x != nil && x.CategoryMinorGridlineShadowUndefined != nil {
		return *x.CategoryMinorGridlineShadowUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineShadow() *SpecShadowArchive {
	if x != nil {
		return x.ValueMinorGridlineShadow
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineShadowUndefined() bool {
	if x != nil && x.ValueMinorGridlineShadowUndefined != nil {
		return *x.ValueMinorGridlineShadowUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.CategoryMinorGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryMinorGridlineStrokeUndefined() bool {
	if x != nil && x.CategoryMinorGridlineStrokeUndefined != nil {
		return *x.CategoryMinorGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.ValueMinorGridlineStroke
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueMinorGridlineStrokeUndefined() bool {
	if x != nil && x.ValueMinorGridlineStrokeUndefined != nil {
		return *x.ValueMinorGridlineStrokeUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowAxis() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowAxis
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowAxisUndefined() bool {
	if x != nil && x.CategoryShowAxisUndefined != nil {
		return *x.CategoryShowAxisUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowAxis() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowAxis
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowAxisUndefined() bool {
	if x != nil && x.ValueShowAxisUndefined != nil {
		return *x.ValueShowAxisUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultShowExtensionLines() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowExtensionLines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultShowExtensionLinesUndefined() bool {
	if x != nil && x.DefaultShowExtensionLinesUndefined != nil {
		return *x.DefaultShowExtensionLinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowGridlineTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowGridlineTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowGridlineTickmarksUndefined() bool {
	if x != nil && x.CategoryShowGridlineTickmarksUndefined != nil {
		return *x.CategoryShowGridlineTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowGridlineTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowGridlineTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowGridlineTickmarksUndefined() bool {
	if x != nil && x.ValueShowGridlineTickmarksUndefined != nil {
		return *x.ValueShowGridlineTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowLastLabel() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowLastLabel
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowLastLabelUndefined() bool {
	if x != nil && x.CategoryShowLastLabelUndefined != nil {
		return *x.CategoryShowLastLabelUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMajorGridlines() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowMajorGridlines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMajorGridlinesUndefined() bool {
	if x != nil && x.CategoryShowMajorGridlinesUndefined != nil {
		return *x.CategoryShowMajorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetPolarCategoryShowMajorGridlines() *SpecBoolArchive {
	if x != nil {
		return x.PolarCategoryShowMajorGridlines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetPolarCategoryShowMajorGridlinesUndefined() bool {
	if x != nil && x.PolarCategoryShowMajorGridlinesUndefined != nil {
		return *x.PolarCategoryShowMajorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMajorGridlines() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowMajorGridlines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMajorGridlinesUndefined() bool {
	if x != nil && x.ValueShowMajorGridlinesUndefined != nil {
		return *x.ValueShowMajorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMajorTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowMajorTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMajorTickmarksUndefined() bool {
	if x != nil && x.CategoryShowMajorTickmarksUndefined != nil {
		return *x.CategoryShowMajorTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMajorTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowMajorTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMajorTickmarksUndefined() bool {
	if x != nil && x.ValueShowMajorTickmarksUndefined != nil {
		return *x.ValueShowMajorTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinimumLabel() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowMinimumLabel
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinimumLabelUndefined() bool {
	if x != nil && x.ValueShowMinimumLabelUndefined != nil {
		return *x.ValueShowMinimumLabelUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMinorGridlines() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowMinorGridlines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMinorGridlinesUndefined() bool {
	if x != nil && x.CategoryShowMinorGridlinesUndefined != nil {
		return *x.CategoryShowMinorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinorGridlines() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowMinorGridlines
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinorGridlinesUndefined() bool {
	if x != nil && x.ValueShowMinorGridlinesUndefined != nil {
		return *x.ValueShowMinorGridlinesUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMinorTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.CategoryShowMinorTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryShowMinorTickmarksUndefined() bool {
	if x != nil && x.CategoryShowMinorTickmarksUndefined != nil {
		return *x.CategoryShowMinorTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinorTickmarks() *SpecBoolArchive {
	if x != nil {
		return x.ValueShowMinorTickmarks
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueShowMinorTickmarksUndefined() bool {
	if x != nil && x.ValueShowMinorTickmarksUndefined != nil {
		return *x.ValueShowMinorTickmarksUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryTickmarkLocation() *SpecIntegerArchive {
	if x != nil {
		return x.CategoryTickmarkLocation
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryTickmarkLocationUndefined() bool {
	if x != nil && x.CategoryTickmarkLocationUndefined != nil {
		return *x.CategoryTickmarkLocationUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueTickmarkLocation() *SpecIntegerArchive {
	if x != nil {
		return x.ValueTickmarkLocation
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueTickmarkLocationUndefined() bool {
	if x != nil && x.ValueTickmarkLocationUndefined != nil {
		return *x.ValueTickmarkLocationUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryTitleParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.CategoryTitleParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryTitleParagraphStyleIndexUndefined() bool {
	if x != nil && x.CategoryTitleParagraphStyleIndexUndefined != nil {
		return *x.CategoryTitleParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultTitleParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTitleParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetDefaultTitleParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultTitleParagraphStyleIndexUndefined != nil {
		return *x.DefaultTitleParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueTitleParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.ValueTitleParagraphStyleIndex
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetValueTitleParagraphStyleIndexUndefined() bool {
	if x != nil && x.ValueTitleParagraphStyleIndexUndefined != nil {
		return *x.ValueTitleParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryVerticalSpacing() *SpecIntegerArchive {
	if x != nil {
		return x.CategoryVerticalSpacing
	}
	return nil
}

func (x *ChartAxisStylePropertyChangeSetArchive) GetCategoryVerticalSpacingUndefined() bool {
	if x != nil && x.CategoryVerticalSpacingUndefined != nil {
		return *x.CategoryVerticalSpacingUndefined
	}
	return false
}

type ChartLegendNonStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChartLegendNonStylePropertyChangeSetArchive) Reset() {
	*x = ChartLegendNonStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartLegendNonStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartLegendNonStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartLegendNonStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartLegendNonStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartLegendNonStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{14}
}

type ChartLegendStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultFill                              *SpecFillArchive    `protobuf:"bytes,1,opt,name=default_fill,json=defaultFill" json:"default_fill,omitempty"`
	DefaultFillUndefined                     *bool               `protobuf:"varint,2,opt,name=default_fill_undefined,json=defaultFillUndefined" json:"default_fill_undefined,omitempty"`
	DefaultLabelParagraphStyleIndex          *SpecIntegerArchive `protobuf:"bytes,3,opt,name=default_label_paragraph_style_index,json=defaultLabelParagraphStyleIndex" json:"default_label_paragraph_style_index,omitempty"`
	DefaultLabelParagraphStyleIndexUndefined *bool               `protobuf:"varint,4,opt,name=default_label_paragraph_style_index_undefined,json=defaultLabelParagraphStyleIndexUndefined" json:"default_label_paragraph_style_index_undefined,omitempty"`
	DefaultOpacity                           *SpecDoubleArchive  `protobuf:"bytes,5,opt,name=default_opacity,json=defaultOpacity" json:"default_opacity,omitempty"`
	DefaultOpacityUndefined                  *bool               `protobuf:"varint,6,opt,name=default_opacity_undefined,json=defaultOpacityUndefined" json:"default_opacity_undefined,omitempty"`
	DefaultShadow                            *SpecShadowArchive  `protobuf:"bytes,7,opt,name=default_shadow,json=defaultShadow" json:"default_shadow,omitempty"`
	DefaultShadowUndefined                   *bool               `protobuf:"varint,8,opt,name=default_shadow_undefined,json=defaultShadowUndefined" json:"default_shadow_undefined,omitempty"`
	DefaultStroke                            *SpecStrokeArchive  `protobuf:"bytes,9,opt,name=default_stroke,json=defaultStroke" json:"default_stroke,omitempty"`
	DefaultStrokeUndefined                   *bool               `protobuf:"varint,10,opt,name=default_stroke_undefined,json=defaultStrokeUndefined" json:"default_stroke_undefined,omitempty"`
}

func (x *ChartLegendStylePropertyChangeSetArchive) Reset() {
	*x = ChartLegendStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartLegendStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartLegendStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartLegendStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartLegendStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartLegendStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{15}
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultFill() *SpecFillArchive {
	if x != nil {
		return x.DefaultFill
	}
	return nil
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultFillUndefined() bool {
	if x != nil && x.DefaultFillUndefined != nil {
		return *x.DefaultFillUndefined
	}
	return false
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultOpacity
	}
	return nil
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultOpacityUndefined() bool {
	if x != nil && x.DefaultOpacityUndefined != nil {
		return *x.DefaultOpacityUndefined
	}
	return false
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultShadow
	}
	return nil
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultShadowUndefined() bool {
	if x != nil && x.DefaultShadowUndefined != nil {
		return *x.DefaultShadowUndefined
	}
	return false
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultStroke
	}
	return nil
}

func (x *ChartLegendStylePropertyChangeSetArchive) GetDefaultStrokeUndefined() bool {
	if x != nil && x.DefaultStrokeUndefined != nil {
		return *x.DefaultStrokeUndefined
	}
	return false
}

type ChartNonStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default3DBarShape                                   *SpecIntegerArchive       `protobuf:"bytes,1,opt,name=default3d_bar_shape,json=default3dBarShape" json:"default3d_bar_shape,omitempty"`
	Default3DBarShapeUndefined                          *bool                     `protobuf:"varint,2,opt,name=default3d_bar_shape_undefined,json=default3dBarShapeUndefined" json:"default3d_bar_shape_undefined,omitempty"`
	Default3DBevelEdges                                 *SpecBoolArchive          `protobuf:"bytes,3,opt,name=default3d_bevel_edges,json=default3dBevelEdges" json:"default3d_bevel_edges,omitempty"`
	Default3DBevelEdgesUndefined                        *bool                     `protobuf:"varint,4,opt,name=default3d_bevel_edges_undefined,json=default3dBevelEdgesUndefined" json:"default3d_bevel_edges_undefined,omitempty"`
	Default3DInterSetDepthGap                           *SpecDoubleArchive        `protobuf:"bytes,5,opt,name=default3d_inter_set_depth_gap,json=default3dInterSetDepthGap" json:"default3d_inter_set_depth_gap,omitempty"`
	Default3DInterSetDepthGapUndefined                  *bool                     `protobuf:"varint,6,opt,name=default3d_inter_set_depth_gap_undefined,json=default3dInterSetDepthGapUndefined" json:"default3d_inter_set_depth_gap_undefined,omitempty"`
	Default3DRotation                                   *SpecChart3DVectorArchive `protobuf:"bytes,7,opt,name=default3d_rotation,json=default3dRotation" json:"default3d_rotation,omitempty"`
	Default3DRotationUndefined                          *bool                     `protobuf:"varint,8,opt,name=default3d_rotation_undefined,json=default3dRotationUndefined" json:"default3d_rotation_undefined,omitempty"`
	Area3DScale                                         *SpecChart3DVectorArchive `protobuf:"bytes,9,opt,name=area3d_scale,json=area3dScale" json:"area3d_scale,omitempty"`
	Area3DScaleUndefined                                *bool                     `protobuf:"varint,10,opt,name=area3d_scale_undefined,json=area3dScaleUndefined" json:"area3d_scale_undefined,omitempty"`
	Bar3DScale                                          *SpecChart3DVectorArchive `protobuf:"bytes,11,opt,name=bar3d_scale,json=bar3dScale" json:"bar3d_scale,omitempty"`
	Bar3DScaleUndefined                                 *bool                     `protobuf:"varint,12,opt,name=bar3d_scale_undefined,json=bar3dScaleUndefined" json:"bar3d_scale_undefined,omitempty"`
	Column3DScale                                       *SpecChart3DVectorArchive `protobuf:"bytes,13,opt,name=column3d_scale,json=column3dScale" json:"column3d_scale,omitempty"`
	Column3DScaleUndefined                              *bool                     `protobuf:"varint,14,opt,name=column3d_scale_undefined,json=column3dScaleUndefined" json:"column3d_scale_undefined,omitempty"`
	Default3DScale                                      *SpecChart3DVectorArchive `protobuf:"bytes,15,opt,name=default3d_scale,json=default3dScale" json:"default3d_scale,omitempty"`
	Default3DScaleUndefined                             *bool                     `protobuf:"varint,16,opt,name=default3d_scale_undefined,json=default3dScaleUndefined" json:"default3d_scale_undefined,omitempty"`
	Line3DScale                                         *SpecChart3DVectorArchive `protobuf:"bytes,17,opt,name=line3d_scale,json=line3dScale" json:"line3d_scale,omitempty"`
	Line3DScaleUndefined                                *bool                     `protobuf:"varint,18,opt,name=line3d_scale_undefined,json=line3dScaleUndefined" json:"line3d_scale_undefined,omitempty"`
	Pie3DScale                                          *SpecChart3DVectorArchive `protobuf:"bytes,19,opt,name=pie3d_scale,json=pie3dScale" json:"pie3d_scale,omitempty"`
	Pie3DScaleUndefined                                 *bool                     `protobuf:"varint,20,opt,name=pie3d_scale_undefined,json=pie3dScaleUndefined" json:"pie3d_scale_undefined,omitempty"`
	Default3DViewport                                   *SpecChart3DVectorArchive `protobuf:"bytes,21,opt,name=default3d_viewport,json=default3dViewport" json:"default3d_viewport,omitempty"`
	Default3DViewportUndefined                          *bool                     `protobuf:"varint,22,opt,name=default3d_viewport_undefined,json=default3dViewportUndefined" json:"default3d_viewport_undefined,omitempty"`
	AreaCalloutLineType                                 *SpecIntegerArchive       `protobuf:"bytes,23,opt,name=area_callout_line_type,json=areaCalloutLineType" json:"area_callout_line_type,omitempty"`
	AreaCalloutLineTypeUndefined                        *bool                     `protobuf:"varint,24,opt,name=area_callout_line_type_undefined,json=areaCalloutLineTypeUndefined" json:"area_callout_line_type_undefined,omitempty"`
	BarCalloutLineType                                  *SpecIntegerArchive       `protobuf:"bytes,25,opt,name=bar_callout_line_type,json=barCalloutLineType" json:"bar_callout_line_type,omitempty"`
	BarCalloutLineTypeUndefined                         *bool                     `protobuf:"varint,26,opt,name=bar_callout_line_type_undefined,json=barCalloutLineTypeUndefined" json:"bar_callout_line_type_undefined,omitempty"`
	BubbleCalloutLineType                               *SpecIntegerArchive       `protobuf:"bytes,27,opt,name=bubble_callout_line_type,json=bubbleCalloutLineType" json:"bubble_callout_line_type,omitempty"`
	BubbleCalloutLineTypeUndefined                      *bool                     `protobuf:"varint,28,opt,name=bubble_callout_line_type_undefined,json=bubbleCalloutLineTypeUndefined" json:"bubble_callout_line_type_undefined,omitempty"`
	DefaultCalloutLineType                              *SpecIntegerArchive       `protobuf:"bytes,29,opt,name=default_callout_line_type,json=defaultCalloutLineType" json:"default_callout_line_type,omitempty"`
	DefaultCalloutLineTypeUndefined                     *bool                     `protobuf:"varint,30,opt,name=default_callout_line_type_undefined,json=defaultCalloutLineTypeUndefined" json:"default_callout_line_type_undefined,omitempty"`
	LineCalloutLineType                                 *SpecIntegerArchive       `protobuf:"bytes,31,opt,name=line_callout_line_type,json=lineCalloutLineType" json:"line_callout_line_type,omitempty"`
	LineCalloutLineTypeUndefined                        *bool                     `protobuf:"varint,32,opt,name=line_callout_line_type_undefined,json=lineCalloutLineTypeUndefined" json:"line_callout_line_type_undefined,omitempty"`
	PieCalloutLineType                                  *SpecIntegerArchive       `protobuf:"bytes,33,opt,name=pie_callout_line_type,json=pieCalloutLineType" json:"pie_callout_line_type,omitempty"`
	PieCalloutLineTypeUndefined                         *bool                     `protobuf:"varint,34,opt,name=pie_callout_line_type_undefined,json=pieCalloutLineTypeUndefined" json:"pie_callout_line_type_undefined,omitempty"`
	ScatterCalloutLineType                              *SpecIntegerArchive       `protobuf:"bytes,35,opt,name=scatter_callout_line_type,json=scatterCalloutLineType" json:"scatter_callout_line_type,omitempty"`
	ScatterCalloutLineTypeUndefined                     *bool                     `protobuf:"varint,36,opt,name=scatter_callout_line_type_undefined,json=scatterCalloutLineTypeUndefined" json:"scatter_callout_line_type_undefined,omitempty"`
	StackedAreaCalloutLineType                          *SpecIntegerArchive       `protobuf:"bytes,37,opt,name=stacked_area_callout_line_type,json=stackedAreaCalloutLineType" json:"stacked_area_callout_line_type,omitempty"`
	StackedAreaCalloutLineTypeUndefined                 *bool                     `protobuf:"varint,38,opt,name=stacked_area_callout_line_type_undefined,json=stackedAreaCalloutLineTypeUndefined" json:"stacked_area_callout_line_type_undefined,omitempty"`
	StackedBarCalloutLineType                           *SpecIntegerArchive       `protobuf:"bytes,39,opt,name=stacked_bar_callout_line_type,json=stackedBarCalloutLineType" json:"stacked_bar_callout_line_type,omitempty"`
	StackedBarCalloutLineTypeUndefined                  *bool                     `protobuf:"varint,40,opt,name=stacked_bar_callout_line_type_undefined,json=stackedBarCalloutLineTypeUndefined" json:"stacked_bar_callout_line_type_undefined,omitempty"`
	DefaultDEPRECATEDRoundedCornerOuterEndOnly          *SpecBoolArchive          `protobuf:"bytes,41,opt,name=default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only,json=defaultDEPRECATEDRoundedCornerOuterEndOnly" json:"default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only,omitempty"`
	DefaultDEPRECATEDRoundedCornerOuterEndOnlyUndefined *bool                     `protobuf:"varint,42,opt,name=default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined,json=defaultDEPRECATEDRoundedCornerOuterEndOnlyUndefined" json:"default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only_undefined,omitempty"`
	DefaultDEPRECATEDRoundedCornerRadius                *SpecDoubleArchive        `protobuf:"bytes,43,opt,name=default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius,json=defaultDEPRECATEDRoundedCornerRadius" json:"default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius,omitempty"`
	DefaultDEPRECATEDRoundedCornerRadiusUndefined       *bool                     `protobuf:"varint,44,opt,name=default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined,json=defaultDEPRECATEDRoundedCornerRadiusUndefined" json:"default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius_undefined,omitempty"`
	DefaultDataSetNameLocation                          *SpecIntegerArchive       `protobuf:"bytes,45,opt,name=default_data_set_name_location,json=defaultDataSetNameLocation" json:"default_data_set_name_location,omitempty"`
	DefaultDataSetNameLocationUndefined                 *bool                     `protobuf:"varint,46,opt,name=default_data_set_name_location_undefined,json=defaultDataSetNameLocationUndefined" json:"default_data_set_name_location_undefined,omitempty"`
	DefaultDonutPlaceTitleAtCenter                      *SpecBoolArchive          `protobuf:"bytes,47,opt,name=default_donut_place_title_at_center,json=defaultDonutPlaceTitleAtCenter" json:"default_donut_place_title_at_center,omitempty"`
	DefaultDonutPlaceTitleAtCenterUndefined             *bool                     `protobuf:"varint,48,opt,name=default_donut_place_title_at_center_undefined,json=defaultDonutPlaceTitleAtCenterUndefined" json:"default_donut_place_title_at_center_undefined,omitempty"`
	DefaultInnerRadius                                  *SpecDoubleArchive        `protobuf:"bytes,49,opt,name=default_inner_radius,json=defaultInnerRadius" json:"default_inner_radius,omitempty"`
	DefaultInnerRadiusUndefined                         *bool                     `protobuf:"varint,50,opt,name=default_inner_radius_undefined,json=defaultInnerRadiusUndefined" json:"default_inner_radius_undefined,omitempty"`
	DefaultMultiDataControlType                         *SpecIntegerArchive       `protobuf:"bytes,51,opt,name=default_multi_data_control_type,json=defaultMultiDataControlType" json:"default_multi_data_control_type,omitempty"`
	DefaultMultiDataControlTypeUndefined                *bool                     `protobuf:"varint,52,opt,name=default_multi_data_control_type_undefined,json=defaultMultiDataControlTypeUndefined" json:"default_multi_data_control_type_undefined,omitempty"`
	DefaultPieStartAngle                                *SpecDoubleArchive        `protobuf:"bytes,53,opt,name=default_pie_start_angle,json=defaultPieStartAngle" json:"default_pie_start_angle,omitempty"`
	DefaultPieStartAngleUndefined                       *bool                     `protobuf:"varint,54,opt,name=default_pie_start_angle_undefined,json=defaultPieStartAngleUndefined" json:"default_pie_start_angle_undefined,omitempty"`
	DefaultRadarStartAngle                              *SpecDoubleArchive        `protobuf:"bytes,55,opt,name=default_radar_start_angle,json=defaultRadarStartAngle" json:"default_radar_start_angle,omitempty"`
	DefaultRadarStartAngleUndefined                     *bool                     `protobuf:"varint,56,opt,name=default_radar_start_angle_undefined,json=defaultRadarStartAngleUndefined" json:"default_radar_start_angle_undefined,omitempty"`
	DefaultShowLegend                                   *SpecBoolArchive          `protobuf:"bytes,57,opt,name=default_show_legend,json=defaultShowLegend" json:"default_show_legend,omitempty"`
	DefaultShowLegendUndefined                          *bool                     `protobuf:"varint,58,opt,name=default_show_legend_undefined,json=defaultShowLegendUndefined" json:"default_show_legend_undefined,omitempty"`
	DefaultShowTitle                                    *SpecBoolArchive          `protobuf:"bytes,59,opt,name=default_show_title,json=defaultShowTitle" json:"default_show_title,omitempty"`
	DefaultShowTitleUndefined                           *bool                     `protobuf:"varint,60,opt,name=default_show_title_undefined,json=defaultShowTitleUndefined" json:"default_show_title_undefined,omitempty"`
	DefaultSkipHiddenData                               *SpecBoolArchive          `protobuf:"bytes,61,opt,name=default_skip_hidden_data,json=defaultSkipHiddenData" json:"default_skip_hidden_data,omitempty"`
	DefaultSkipHiddenDataUndefined                      *bool                     `protobuf:"varint,62,opt,name=default_skip_hidden_data_undefined,json=defaultSkipHiddenDataUndefined" json:"default_skip_hidden_data_undefined,omitempty"`
	DefaultTitle                                        *SpecStringArchive        `protobuf:"bytes,63,opt,name=default_title,json=defaultTitle" json:"default_title,omitempty"`
	DefaultTitleUndefined                               *bool                     `protobuf:"varint,64,opt,name=default_title_undefined,json=defaultTitleUndefined" json:"default_title_undefined,omitempty"`
}

func (x *ChartNonStylePropertyChangeSetArchive) Reset() {
	*x = ChartNonStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartNonStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartNonStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartNonStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartNonStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartNonStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{16}
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DBarShape() *SpecIntegerArchive {
	if x != nil {
		return x.Default3DBarShape
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DBarShapeUndefined() bool {
	if x != nil && x.Default3DBarShapeUndefined != nil {
		return *x.Default3DBarShapeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DBevelEdges() *SpecBoolArchive {
	if x != nil {
		return x.Default3DBevelEdges
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DBevelEdgesUndefined() bool {
	if x != nil && x.Default3DBevelEdgesUndefined != nil {
		return *x.Default3DBevelEdgesUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DInterSetDepthGap() *SpecDoubleArchive {
	if x != nil {
		return x.Default3DInterSetDepthGap
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DInterSetDepthGapUndefined() bool {
	if x != nil && x.Default3DInterSetDepthGapUndefined != nil {
		return *x.Default3DInterSetDepthGapUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DRotation() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Default3DRotation
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DRotationUndefined() bool {
	if x != nil && x.Default3DRotationUndefined != nil {
		return *x.Default3DRotationUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetArea3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Area3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetArea3DScaleUndefined() bool {
	if x != nil && x.Area3DScaleUndefined != nil {
		return *x.Area3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBar3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Bar3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBar3DScaleUndefined() bool {
	if x != nil && x.Bar3DScaleUndefined != nil {
		return *x.Bar3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetColumn3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Column3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetColumn3DScaleUndefined() bool {
	if x != nil && x.Column3DScaleUndefined != nil {
		return *x.Column3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Default3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DScaleUndefined() bool {
	if x != nil && x.Default3DScaleUndefined != nil {
		return *x.Default3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetLine3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Line3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetLine3DScaleUndefined() bool {
	if x != nil && x.Line3DScaleUndefined != nil {
		return *x.Line3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetPie3DScale() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Pie3DScale
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetPie3DScaleUndefined() bool {
	if x != nil && x.Pie3DScaleUndefined != nil {
		return *x.Pie3DScaleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DViewport() *SpecChart3DVectorArchive {
	if x != nil {
		return x.Default3DViewport
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefault3DViewportUndefined() bool {
	if x != nil && x.Default3DViewportUndefined != nil {
		return *x.Default3DViewportUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetAreaCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.AreaCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetAreaCalloutLineTypeUndefined() bool {
	if x != nil && x.AreaCalloutLineTypeUndefined != nil {
		return *x.AreaCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBarCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.BarCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBarCalloutLineTypeUndefined() bool {
	if x != nil && x.BarCalloutLineTypeUndefined != nil {
		return *x.BarCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBubbleCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetBubbleCalloutLineTypeUndefined() bool {
	if x != nil && x.BubbleCalloutLineTypeUndefined != nil {
		return *x.BubbleCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultCalloutLineTypeUndefined() bool {
	if x != nil && x.DefaultCalloutLineTypeUndefined != nil {
		return *x.DefaultCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetLineCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.LineCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetLineCalloutLineTypeUndefined() bool {
	if x != nil && x.LineCalloutLineTypeUndefined != nil {
		return *x.LineCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetPieCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.PieCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetPieCalloutLineTypeUndefined() bool {
	if x != nil && x.PieCalloutLineTypeUndefined != nil {
		return *x.PieCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetScatterCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetScatterCalloutLineTypeUndefined() bool {
	if x != nil && x.ScatterCalloutLineTypeUndefined != nil {
		return *x.ScatterCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetStackedAreaCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.StackedAreaCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetStackedAreaCalloutLineTypeUndefined() bool {
	if x != nil && x.StackedAreaCalloutLineTypeUndefined != nil {
		return *x.StackedAreaCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetStackedBarCalloutLineType() *SpecIntegerArchive {
	if x != nil {
		return x.StackedBarCalloutLineType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetStackedBarCalloutLineTypeUndefined() bool {
	if x != nil && x.StackedBarCalloutLineTypeUndefined != nil {
		return *x.StackedBarCalloutLineTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDEPRECATEDRoundedCornerOuterEndOnly() *SpecBoolArchive {
	if x != nil {
		return x.DefaultDEPRECATEDRoundedCornerOuterEndOnly
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDEPRECATEDRoundedCornerOuterEndOnlyUndefined() bool {
	if x != nil && x.DefaultDEPRECATEDRoundedCornerOuterEndOnlyUndefined != nil {
		return *x.DefaultDEPRECATEDRoundedCornerOuterEndOnlyUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDEPRECATEDRoundedCornerRadius() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultDEPRECATEDRoundedCornerRadius
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDEPRECATEDRoundedCornerRadiusUndefined() bool {
	if x != nil && x.DefaultDEPRECATEDRoundedCornerRadiusUndefined != nil {
		return *x.DefaultDEPRECATEDRoundedCornerRadiusUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDataSetNameLocation() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultDataSetNameLocation
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDataSetNameLocationUndefined() bool {
	if x != nil && x.DefaultDataSetNameLocationUndefined != nil {
		return *x.DefaultDataSetNameLocationUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDonutPlaceTitleAtCenter() *SpecBoolArchive {
	if x != nil {
		return x.DefaultDonutPlaceTitleAtCenter
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultDonutPlaceTitleAtCenterUndefined() bool {
	if x != nil && x.DefaultDonutPlaceTitleAtCenterUndefined != nil {
		return *x.DefaultDonutPlaceTitleAtCenterUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultInnerRadius() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultInnerRadius
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultInnerRadiusUndefined() bool {
	if x != nil && x.DefaultInnerRadiusUndefined != nil {
		return *x.DefaultInnerRadiusUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultMultiDataControlType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultMultiDataControlType
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultMultiDataControlTypeUndefined() bool {
	if x != nil && x.DefaultMultiDataControlTypeUndefined != nil {
		return *x.DefaultMultiDataControlTypeUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultPieStartAngle() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultPieStartAngle
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultPieStartAngleUndefined() bool {
	if x != nil && x.DefaultPieStartAngleUndefined != nil {
		return *x.DefaultPieStartAngleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultRadarStartAngle() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultRadarStartAngle
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultRadarStartAngleUndefined() bool {
	if x != nil && x.DefaultRadarStartAngleUndefined != nil {
		return *x.DefaultRadarStartAngleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultShowLegend() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowLegend
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultShowLegendUndefined() bool {
	if x != nil && x.DefaultShowLegendUndefined != nil {
		return *x.DefaultShowLegendUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultShowTitle() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowTitle
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultShowTitleUndefined() bool {
	if x != nil && x.DefaultShowTitleUndefined != nil {
		return *x.DefaultShowTitleUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultSkipHiddenData() *SpecBoolArchive {
	if x != nil {
		return x.DefaultSkipHiddenData
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultSkipHiddenDataUndefined() bool {
	if x != nil && x.DefaultSkipHiddenDataUndefined != nil {
		return *x.DefaultSkipHiddenDataUndefined
	}
	return false
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultTitle() *SpecStringArchive {
	if x != nil {
		return x.DefaultTitle
	}
	return nil
}

func (x *ChartNonStylePropertyChangeSetArchive) GetDefaultTitleUndefined() bool {
	if x != nil && x.DefaultTitleUndefined != nil {
		return *x.DefaultTitleUndefined
	}
	return false
}

type ChartReferenceLineNonStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultCustomValue             *SpecChartsOptionalDoubleArchiveArchive `protobuf:"bytes,1,opt,name=default_custom_value,json=defaultCustomValue" json:"default_custom_value,omitempty"`
	DefaultCustomValueUndefined    *bool                                   `protobuf:"varint,2,opt,name=default_custom_value_undefined,json=defaultCustomValueUndefined" json:"default_custom_value_undefined,omitempty"`
	DefaultLabel                   *SpecStringArchive                      `protobuf:"bytes,3,opt,name=default_label,json=defaultLabel" json:"default_label,omitempty"`
	DefaultLabelUndefined          *bool                                   `protobuf:"varint,4,opt,name=default_label_undefined,json=defaultLabelUndefined" json:"default_label_undefined,omitempty"`
	DefaultShowLabel               *SpecBoolArchive                        `protobuf:"bytes,5,opt,name=default_show_label,json=defaultShowLabel" json:"default_show_label,omitempty"`
	DefaultShowLabelUndefined      *bool                                   `protobuf:"varint,6,opt,name=default_show_label_undefined,json=defaultShowLabelUndefined" json:"default_show_label_undefined,omitempty"`
	DefaultShowLine                *SpecBoolArchive                        `protobuf:"bytes,7,opt,name=default_show_line,json=defaultShowLine" json:"default_show_line,omitempty"`
	DefaultShowLineUndefined       *bool                                   `protobuf:"varint,8,opt,name=default_show_line_undefined,json=defaultShowLineUndefined" json:"default_show_line_undefined,omitempty"`
	DefaultShowValueLabel          *SpecBoolArchive                        `protobuf:"bytes,9,opt,name=default_show_value_label,json=defaultShowValueLabel" json:"default_show_value_label,omitempty"`
	DefaultShowValueLabelUndefined *bool                                   `protobuf:"varint,10,opt,name=default_show_value_label_undefined,json=defaultShowValueLabelUndefined" json:"default_show_value_label_undefined,omitempty"`
	DefaultType                    *SpecIntegerArchive                     `protobuf:"bytes,11,opt,name=default_type,json=defaultType" json:"default_type,omitempty"`
	DefaultTypeUndefined           *bool                                   `protobuf:"varint,12,opt,name=default_type_undefined,json=defaultTypeUndefined" json:"default_type_undefined,omitempty"`
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) Reset() {
	*x = ChartReferenceLineNonStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartReferenceLineNonStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartReferenceLineNonStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartReferenceLineNonStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{17}
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultCustomValue() *SpecChartsOptionalDoubleArchiveArchive {
	if x != nil {
		return x.DefaultCustomValue
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultCustomValueUndefined() bool {
	if x != nil && x.DefaultCustomValueUndefined != nil {
		return *x.DefaultCustomValueUndefined
	}
	return false
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultLabel() *SpecStringArchive {
	if x != nil {
		return x.DefaultLabel
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultLabelUndefined() bool {
	if x != nil && x.DefaultLabelUndefined != nil {
		return *x.DefaultLabelUndefined
	}
	return false
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowLabel() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowLabel
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowLabelUndefined() bool {
	if x != nil && x.DefaultShowLabelUndefined != nil {
		return *x.DefaultShowLabelUndefined
	}
	return false
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowLine() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowLine
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowLineUndefined() bool {
	if x != nil && x.DefaultShowLineUndefined != nil {
		return *x.DefaultShowLineUndefined
	}
	return false
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowValueLabel() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowValueLabel
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultShowValueLabelUndefined() bool {
	if x != nil && x.DefaultShowValueLabelUndefined != nil {
		return *x.DefaultShowValueLabelUndefined
	}
	return false
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultType
	}
	return nil
}

func (x *ChartReferenceLineNonStylePropertyChangeSetArchive) GetDefaultTypeUndefined() bool {
	if x != nil && x.DefaultTypeUndefined != nil {
		return *x.DefaultTypeUndefined
	}
	return false
}

type ChartReferenceLineStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultLabelParagraphStyleIndex               *SpecIntegerArchive `protobuf:"bytes,1,opt,name=default_label_paragraph_style_index,json=defaultLabelParagraphStyleIndex" json:"default_label_paragraph_style_index,omitempty"`
	DefaultLabelParagraphStyleIndexUndefined      *bool               `protobuf:"varint,2,opt,name=default_label_paragraph_style_index_undefined,json=defaultLabelParagraphStyleIndexUndefined" json:"default_label_paragraph_style_index_undefined,omitempty"`
	DefaultShadow                                 *SpecShadowArchive  `protobuf:"bytes,3,opt,name=default_shadow,json=defaultShadow" json:"default_shadow,omitempty"`
	DefaultShadowUndefined                        *bool               `protobuf:"varint,4,opt,name=default_shadow_undefined,json=defaultShadowUndefined" json:"default_shadow_undefined,omitempty"`
	DefaultStroke                                 *SpecStrokeArchive  `protobuf:"bytes,5,opt,name=default_stroke,json=defaultStroke" json:"default_stroke,omitempty"`
	DefaultStrokeUndefined                        *bool               `protobuf:"varint,6,opt,name=default_stroke_undefined,json=defaultStrokeUndefined" json:"default_stroke_undefined,omitempty"`
	DefaultValueLabelParagraphStyleIndex          *SpecIntegerArchive `protobuf:"bytes,7,opt,name=default_value_label_paragraph_style_index,json=defaultValueLabelParagraphStyleIndex" json:"default_value_label_paragraph_style_index,omitempty"`
	DefaultValueLabelParagraphStyleIndexUndefined *bool               `protobuf:"varint,8,opt,name=default_value_label_paragraph_style_index_undefined,json=defaultValueLabelParagraphStyleIndexUndefined" json:"default_value_label_paragraph_style_index_undefined,omitempty"`
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) Reset() {
	*x = ChartReferenceLineStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartReferenceLineStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartReferenceLineStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartReferenceLineStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{18}
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultShadow
	}
	return nil
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultShadowUndefined() bool {
	if x != nil && x.DefaultShadowUndefined != nil {
		return *x.DefaultShadowUndefined
	}
	return false
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultStroke
	}
	return nil
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultStrokeUndefined() bool {
	if x != nil && x.DefaultStrokeUndefined != nil {
		return *x.DefaultStrokeUndefined
	}
	return false
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultValueLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultValueLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartReferenceLineStylePropertyChangeSetArchive) GetDefaultValueLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultValueLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultValueLabelParagraphStyleIndexUndefined
	}
	return false
}

type ChartSeriesNonStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default10DateFormat                                *SpecFormatObjectArchive            `protobuf:"bytes,1,opt,name=default10_date_format,json=default10DateFormat" json:"default10_date_format,omitempty"`
	Default10DateFormatUndefined                       *bool                               `protobuf:"varint,2,opt,name=default10_date_format_undefined,json=default10DateFormatUndefined" json:"default10_date_format_undefined,omitempty"`
	Default10NumberFormat                              *SpecNumberFormatArchive            `protobuf:"bytes,3,opt,name=default10_number_format,json=default10NumberFormat" json:"default10_number_format,omitempty"`
	Default10NumberFormatUndefined                     *bool                               `protobuf:"varint,4,opt,name=default10_number_format_undefined,json=default10NumberFormatUndefined" json:"default10_number_format_undefined,omitempty"`
	Pie10NumberFormat                                  *SpecNumberFormatArchive            `protobuf:"bytes,5,opt,name=pie10_number_format,json=pie10NumberFormat" json:"pie10_number_format,omitempty"`
	Pie10NumberFormatUndefined                         *bool                               `protobuf:"varint,6,opt,name=pie10_number_format_undefined,json=pie10NumberFormatUndefined" json:"pie10_number_format_undefined,omitempty"`
	Pie23LabelExplosion                                *SpecDoubleArchive                  `protobuf:"bytes,7,opt,name=pie23_label_explosion,json=pie23LabelExplosion" json:"pie23_label_explosion,omitempty"`
	Pie23LabelExplosionUndefined                       *bool                               `protobuf:"varint,8,opt,name=pie23_label_explosion_undefined,json=pie23LabelExplosionUndefined" json:"pie23_label_explosion_undefined,omitempty"`
	BubbleAdjustmentScale                              *SpecDoubleArchive                  `protobuf:"bytes,9,opt,name=bubble_adjustment_scale,json=bubbleAdjustmentScale" json:"bubble_adjustment_scale,omitempty"`
	BubbleAdjustmentScaleUndefined                     *bool                               `protobuf:"varint,10,opt,name=bubble_adjustment_scale_undefined,json=bubbleAdjustmentScaleUndefined" json:"bubble_adjustment_scale_undefined,omitempty"`
	DefaultDateFormat                                  *SpecFormatObjectArchive            `protobuf:"bytes,11,opt,name=default_date_format,json=defaultDateFormat" json:"default_date_format,omitempty"`
	DefaultDateFormatUndefined                         *bool                               `protobuf:"varint,12,opt,name=default_date_format_undefined,json=defaultDateFormatUndefined" json:"default_date_format_undefined,omitempty"`
	DefaultDurationFormat                              *SpecFormatObjectArchive            `protobuf:"bytes,13,opt,name=default_duration_format,json=defaultDurationFormat" json:"default_duration_format,omitempty"`
	DefaultDurationFormatUndefined                     *bool                               `protobuf:"varint,14,opt,name=default_duration_format_undefined,json=defaultDurationFormatUndefined" json:"default_duration_format_undefined,omitempty"`
	AreaEnableCalloutLine                              *SpecIntegerArchive                 `protobuf:"bytes,15,opt,name=area_enable_callout_line,json=areaEnableCalloutLine" json:"area_enable_callout_line,omitempty"`
	AreaEnableCalloutLineUndefined                     *bool                               `protobuf:"varint,16,opt,name=area_enable_callout_line_undefined,json=areaEnableCalloutLineUndefined" json:"area_enable_callout_line_undefined,omitempty"`
	BarEnableCalloutLine                               *SpecIntegerArchive                 `protobuf:"bytes,17,opt,name=bar_enable_callout_line,json=barEnableCalloutLine" json:"bar_enable_callout_line,omitempty"`
	BarEnableCalloutLineUndefined                      *bool                               `protobuf:"varint,18,opt,name=bar_enable_callout_line_undefined,json=barEnableCalloutLineUndefined" json:"bar_enable_callout_line_undefined,omitempty"`
	BubbleEnableCalloutLine                            *SpecIntegerArchive                 `protobuf:"bytes,19,opt,name=bubble_enable_callout_line,json=bubbleEnableCalloutLine" json:"bubble_enable_callout_line,omitempty"`
	BubbleEnableCalloutLineUndefined                   *bool                               `protobuf:"varint,20,opt,name=bubble_enable_callout_line_undefined,json=bubbleEnableCalloutLineUndefined" json:"bubble_enable_callout_line_undefined,omitempty"`
	DefaultEnableCalloutLine                           *SpecIntegerArchive                 `protobuf:"bytes,21,opt,name=default_enable_callout_line,json=defaultEnableCalloutLine" json:"default_enable_callout_line,omitempty"`
	DefaultEnableCalloutLineUndefined                  *bool                               `protobuf:"varint,22,opt,name=default_enable_callout_line_undefined,json=defaultEnableCalloutLineUndefined" json:"default_enable_callout_line_undefined,omitempty"`
	LineEnableCalloutLine                              *SpecIntegerArchive                 `protobuf:"bytes,23,opt,name=line_enable_callout_line,json=lineEnableCalloutLine" json:"line_enable_callout_line,omitempty"`
	LineEnableCalloutLineUndefined                     *bool                               `protobuf:"varint,24,opt,name=line_enable_callout_line_undefined,json=lineEnableCalloutLineUndefined" json:"line_enable_callout_line_undefined,omitempty"`
	PieEnableCalloutLine                               *SpecIntegerArchive                 `protobuf:"bytes,25,opt,name=pie_enable_callout_line,json=pieEnableCalloutLine" json:"pie_enable_callout_line,omitempty"`
	PieEnableCalloutLineUndefined                      *bool                               `protobuf:"varint,26,opt,name=pie_enable_callout_line_undefined,json=pieEnableCalloutLineUndefined" json:"pie_enable_callout_line_undefined,omitempty"`
	ScatterEnableCalloutLine                           *SpecIntegerArchive                 `protobuf:"bytes,27,opt,name=scatter_enable_callout_line,json=scatterEnableCalloutLine" json:"scatter_enable_callout_line,omitempty"`
	ScatterEnableCalloutLineUndefined                  *bool                               `protobuf:"varint,28,opt,name=scatter_enable_callout_line_undefined,json=scatterEnableCalloutLineUndefined" json:"scatter_enable_callout_line_undefined,omitempty"`
	StackedAreaEnableCalloutLine                       *SpecIntegerArchive                 `protobuf:"bytes,29,opt,name=stacked_area_enable_callout_line,json=stackedAreaEnableCalloutLine" json:"stacked_area_enable_callout_line,omitempty"`
	StackedAreaEnableCalloutLineUndefined              *bool                               `protobuf:"varint,30,opt,name=stacked_area_enable_callout_line_undefined,json=stackedAreaEnableCalloutLineUndefined" json:"stacked_area_enable_callout_line_undefined,omitempty"`
	StackedBarEnableCalloutLine                        *SpecIntegerArchive                 `protobuf:"bytes,31,opt,name=stacked_bar_enable_callout_line,json=stackedBarEnableCalloutLine" json:"stacked_bar_enable_callout_line,omitempty"`
	StackedBarEnableCalloutLineUndefined               *bool                               `protobuf:"varint,32,opt,name=stacked_bar_enable_callout_line_undefined,json=stackedBarEnableCalloutLineUndefined" json:"stacked_bar_enable_callout_line_undefined,omitempty"`
	DefaultErrorBarCustomNegativeData                  *SpecChartErrorBarCustomDataArchive `protobuf:"bytes,33,opt,name=default_error_bar_custom_negative_data,json=defaultErrorBarCustomNegativeData" json:"default_error_bar_custom_negative_data,omitempty"`
	DefaultErrorBarCustomNegativeDataUndefined         *bool                               `protobuf:"varint,34,opt,name=default_error_bar_custom_negative_data_undefined,json=defaultErrorBarCustomNegativeDataUndefined" json:"default_error_bar_custom_negative_data_undefined,omitempty"`
	DefaultErrorBarCustomNegativeDataScatterX          *SpecChartErrorBarCustomDataArchive `protobuf:"bytes,35,opt,name=default_error_bar_custom_negative_data_scatter_x,json=defaultErrorBarCustomNegativeDataScatterX" json:"default_error_bar_custom_negative_data_scatter_x,omitempty"`
	DefaultErrorBarCustomNegativeDataScatterXUndefined *bool                               `protobuf:"varint,36,opt,name=default_error_bar_custom_negative_data_scatter_x_undefined,json=defaultErrorBarCustomNegativeDataScatterXUndefined" json:"default_error_bar_custom_negative_data_scatter_x_undefined,omitempty"`
	DefaultErrorBarCustomPositiveData                  *SpecChartErrorBarCustomDataArchive `protobuf:"bytes,37,opt,name=default_error_bar_custom_positive_data,json=defaultErrorBarCustomPositiveData" json:"default_error_bar_custom_positive_data,omitempty"`
	DefaultErrorBarCustomPositiveDataUndefined         *bool                               `protobuf:"varint,38,opt,name=default_error_bar_custom_positive_data_undefined,json=defaultErrorBarCustomPositiveDataUndefined" json:"default_error_bar_custom_positive_data_undefined,omitempty"`
	DefaultErrorBarCustomPositiveDataScatterX          *SpecChartErrorBarCustomDataArchive `protobuf:"bytes,39,opt,name=default_error_bar_custom_positive_data_scatter_x,json=defaultErrorBarCustomPositiveDataScatterX" json:"default_error_bar_custom_positive_data_scatter_x,omitempty"`
	DefaultErrorBarCustomPositiveDataScatterXUndefined *bool                               `protobuf:"varint,40,opt,name=default_error_bar_custom_positive_data_scatter_x_undefined,json=defaultErrorBarCustomPositiveDataScatterXUndefined" json:"default_error_bar_custom_positive_data_scatter_x_undefined,omitempty"`
	DefaultErrorBarFixedValue                          *SpecDoubleArchive                  `protobuf:"bytes,41,opt,name=default_error_bar_fixed_value,json=defaultErrorBarFixedValue" json:"default_error_bar_fixed_value,omitempty"`
	DefaultErrorBarFixedValueUndefined                 *bool                               `protobuf:"varint,42,opt,name=default_error_bar_fixed_value_undefined,json=defaultErrorBarFixedValueUndefined" json:"default_error_bar_fixed_value_undefined,omitempty"`
	DefaultErrorBarFixedValueScatterX                  *SpecDoubleArchive                  `protobuf:"bytes,43,opt,name=default_error_bar_fixed_value_scatter_x,json=defaultErrorBarFixedValueScatterX" json:"default_error_bar_fixed_value_scatter_x,omitempty"`
	DefaultErrorBarFixedValueScatterXUndefined         *bool                               `protobuf:"varint,44,opt,name=default_error_bar_fixed_value_scatter_x_undefined,json=defaultErrorBarFixedValueScatterXUndefined" json:"default_error_bar_fixed_value_scatter_x_undefined,omitempty"`
	DefaultErrorBarPercentValue                        *SpecDoubleArchive                  `protobuf:"bytes,45,opt,name=default_error_bar_percent_value,json=defaultErrorBarPercentValue" json:"default_error_bar_percent_value,omitempty"`
	DefaultErrorBarPercentValueUndefined               *bool                               `protobuf:"varint,46,opt,name=default_error_bar_percent_value_undefined,json=defaultErrorBarPercentValueUndefined" json:"default_error_bar_percent_value_undefined,omitempty"`
	DefaultErrorBarPercentValueScatterX                *SpecDoubleArchive                  `protobuf:"bytes,47,opt,name=default_error_bar_percent_value_scatter_x,json=defaultErrorBarPercentValueScatterX" json:"default_error_bar_percent_value_scatter_x,omitempty"`
	DefaultErrorBarPercentValueScatterXUndefined       *bool                               `protobuf:"varint,48,opt,name=default_error_bar_percent_value_scatter_x_undefined,json=defaultErrorBarPercentValueScatterXUndefined" json:"default_error_bar_percent_value_scatter_x_undefined,omitempty"`
	DefaultErrorBarSetting                             *SpecIntegerArchive                 `protobuf:"bytes,49,opt,name=default_error_bar_setting,json=defaultErrorBarSetting" json:"default_error_bar_setting,omitempty"`
	DefaultErrorBarSettingUndefined                    *bool                               `protobuf:"varint,50,opt,name=default_error_bar_setting_undefined,json=defaultErrorBarSettingUndefined" json:"default_error_bar_setting_undefined,omitempty"`
	DefaultErrorBarSettingScatterX                     *SpecIntegerArchive                 `protobuf:"bytes,51,opt,name=default_error_bar_setting_scatter_x,json=defaultErrorBarSettingScatterX" json:"default_error_bar_setting_scatter_x,omitempty"`
	DefaultErrorBarSettingScatterXUndefined            *bool                               `protobuf:"varint,52,opt,name=default_error_bar_setting_scatter_x_undefined,json=defaultErrorBarSettingScatterXUndefined" json:"default_error_bar_setting_scatter_x_undefined,omitempty"`
	DefaultErrorBarStdDevValue                         *SpecDoubleArchive                  `protobuf:"bytes,53,opt,name=default_error_bar_std_dev_value,json=defaultErrorBarStdDevValue" json:"default_error_bar_std_dev_value,omitempty"`
	DefaultErrorBarStdDevValueUndefined                *bool                               `protobuf:"varint,54,opt,name=default_error_bar_std_dev_value_undefined,json=defaultErrorBarStdDevValueUndefined" json:"default_error_bar_std_dev_value_undefined,omitempty"`
	DefaultErrorBarStdDevValueScatterX                 *SpecDoubleArchive                  `protobuf:"bytes,55,opt,name=default_error_bar_std_dev_value_scatter_x,json=defaultErrorBarStdDevValueScatterX" json:"default_error_bar_std_dev_value_scatter_x,omitempty"`
	DefaultErrorBarStdDevValueScatterXUndefined        *bool                               `protobuf:"varint,56,opt,name=default_error_bar_std_dev_value_scatter_x_undefined,json=defaultErrorBarStdDevValueScatterXUndefined" json:"default_error_bar_std_dev_value_scatter_x_undefined,omitempty"`
	DefaultErrorBarType                                *SpecIntegerArchive                 `protobuf:"bytes,57,opt,name=default_error_bar_type,json=defaultErrorBarType" json:"default_error_bar_type,omitempty"`
	DefaultErrorBarTypeUndefined                       *bool                               `protobuf:"varint,58,opt,name=default_error_bar_type_undefined,json=defaultErrorBarTypeUndefined" json:"default_error_bar_type_undefined,omitempty"`
	DefaultErrorBarTypeScatterX                        *SpecIntegerArchive                 `protobuf:"bytes,59,opt,name=default_error_bar_type_scatter_x,json=defaultErrorBarTypeScatterX" json:"default_error_bar_type_scatter_x,omitempty"`
	DefaultErrorBarTypeScatterXUndefined               *bool                               `protobuf:"varint,60,opt,name=default_error_bar_type_scatter_x_undefined,json=defaultErrorBarTypeScatterXUndefined" json:"default_error_bar_type_scatter_x_undefined,omitempty"`
	PieLabelExplosion                                  *SpecDoubleArchive                  `protobuf:"bytes,61,opt,name=pie_label_explosion,json=pieLabelExplosion" json:"pie_label_explosion,omitempty"`
	PieLabelExplosionUndefined                         *bool                               `protobuf:"varint,62,opt,name=pie_label_explosion_undefined,json=pieLabelExplosionUndefined" json:"pie_label_explosion_undefined,omitempty"`
	BubbleLineType                                     *SpecIntegerArchive                 `protobuf:"bytes,63,opt,name=bubble_line_type,json=bubbleLineType" json:"bubble_line_type,omitempty"`
	BubbleLineTypeUndefined                            *bool                               `protobuf:"varint,64,opt,name=bubble_line_type_undefined,json=bubbleLineTypeUndefined" json:"bubble_line_type_undefined,omitempty"`
	LineLineType                                       *SpecIntegerArchive                 `protobuf:"bytes,65,opt,name=line_line_type,json=lineLineType" json:"line_line_type,omitempty"`
	LineLineTypeUndefined                              *bool                               `protobuf:"varint,66,opt,name=line_line_type_undefined,json=lineLineTypeUndefined" json:"line_line_type_undefined,omitempty"`
	MixedLineLineType                                  *SpecIntegerArchive                 `protobuf:"bytes,67,opt,name=mixed_line_line_type,json=mixedLineLineType" json:"mixed_line_line_type,omitempty"`
	MixedLineLineTypeUndefined                         *bool                               `protobuf:"varint,68,opt,name=mixed_line_line_type_undefined,json=mixedLineLineTypeUndefined" json:"mixed_line_line_type_undefined,omitempty"`
	RadarAreaLineType                                  *SpecIntegerArchive                 `protobuf:"bytes,69,opt,name=radar_area_line_type,json=radarAreaLineType" json:"radar_area_line_type,omitempty"`
	RadarAreaLineTypeUndefined                         *bool                               `protobuf:"varint,70,opt,name=radar_area_line_type_undefined,json=radarAreaLineTypeUndefined" json:"radar_area_line_type_undefined,omitempty"`
	ScatterLineType                                    *SpecIntegerArchive                 `protobuf:"bytes,71,opt,name=scatter_line_type,json=scatterLineType" json:"scatter_line_type,omitempty"`
	ScatterLineTypeUndefined                           *bool                               `protobuf:"varint,72,opt,name=scatter_line_type_undefined,json=scatterLineTypeUndefined" json:"scatter_line_type_undefined,omitempty"`
	DefaultNumberFormat                                *SpecNumberFormatArchive            `protobuf:"bytes,73,opt,name=default_number_format,json=defaultNumberFormat" json:"default_number_format,omitempty"`
	DefaultNumberFormatUndefined                       *bool                               `protobuf:"varint,74,opt,name=default_number_format_undefined,json=defaultNumberFormatUndefined" json:"default_number_format_undefined,omitempty"`
	PieNumberFormat                                    *SpecNumberFormatArchive            `protobuf:"bytes,75,opt,name=pie_number_format,json=pieNumberFormat" json:"pie_number_format,omitempty"`
	PieNumberFormatUndefined                           *bool                               `protobuf:"varint,76,opt,name=pie_number_format_undefined,json=pieNumberFormatUndefined" json:"pie_number_format_undefined,omitempty"`
	DefaultNumberFormatType                            *SpecIntegerArchive                 `protobuf:"bytes,77,opt,name=default_number_format_type,json=defaultNumberFormatType" json:"default_number_format_type,omitempty"`
	DefaultNumberFormatTypeUndefined                   *bool                               `protobuf:"varint,78,opt,name=default_number_format_type_undefined,json=defaultNumberFormatTypeUndefined" json:"default_number_format_type_undefined,omitempty"`
	PieNumberFormatType                                *SpecIntegerArchive                 `protobuf:"bytes,79,opt,name=pie_number_format_type,json=pieNumberFormatType" json:"pie_number_format_type,omitempty"`
	PieNumberFormatTypeUndefined                       *bool                               `protobuf:"varint,80,opt,name=pie_number_format_type_undefined,json=pieNumberFormatTypeUndefined" json:"pie_number_format_type_undefined,omitempty"`
	StackedPercentNumberFormat                         *SpecNumberFormatArchive            `protobuf:"bytes,81,opt,name=stacked_percent_number_format,json=stackedPercentNumberFormat" json:"stacked_percent_number_format,omitempty"`
	StackedPercentNumberFormatUndefined                *bool                               `protobuf:"varint,82,opt,name=stacked_percent_number_format_undefined,json=stackedPercentNumberFormatUndefined" json:"stacked_percent_number_format_undefined,omitempty"`
	DefaultSeriesType                                  *SpecIntegerArchive                 `protobuf:"bytes,83,opt,name=default_series_type,json=defaultSeriesType" json:"default_series_type,omitempty"`
	DefaultSeriesTypeUndefined                         *bool                               `protobuf:"varint,84,opt,name=default_series_type_undefined,json=defaultSeriesTypeUndefined" json:"default_series_type_undefined,omitempty"`
	DefaultShowErrorBar                                *SpecBoolArchive                    `protobuf:"bytes,85,opt,name=default_show_error_bar,json=defaultShowErrorBar" json:"default_show_error_bar,omitempty"`
	DefaultShowErrorBarUndefined                       *bool                               `protobuf:"varint,86,opt,name=default_show_error_bar_undefined,json=defaultShowErrorBarUndefined" json:"default_show_error_bar_undefined,omitempty"`
	DefaultShowErrorBarScatterX                        *SpecBoolArchive                    `protobuf:"bytes,87,opt,name=default_show_error_bar_scatter_x,json=defaultShowErrorBarScatterX" json:"default_show_error_bar_scatter_x,omitempty"`
	DefaultShowErrorBarScatterXUndefined               *bool                               `protobuf:"varint,88,opt,name=default_show_error_bar_scatter_x_undefined,json=defaultShowErrorBarScatterXUndefined" json:"default_show_error_bar_scatter_x_undefined,omitempty"`
	BubbleShowLabelsInFront                            *SpecBoolArchive                    `protobuf:"bytes,89,opt,name=bubble_show_labels_in_front,json=bubbleShowLabelsInFront" json:"bubble_show_labels_in_front,omitempty"`
	BubbleShowLabelsInFrontUndefined                   *bool                               `protobuf:"varint,90,opt,name=bubble_show_labels_in_front_undefined,json=bubbleShowLabelsInFrontUndefined" json:"bubble_show_labels_in_front_undefined,omitempty"`
	DefaultShowLabelsInFront                           *SpecBoolArchive                    `protobuf:"bytes,91,opt,name=default_show_labels_in_front,json=defaultShowLabelsInFront" json:"default_show_labels_in_front,omitempty"`
	DefaultShowLabelsInFrontUndefined                  *bool                               `protobuf:"varint,92,opt,name=default_show_labels_in_front_undefined,json=defaultShowLabelsInFrontUndefined" json:"default_show_labels_in_front_undefined,omitempty"`
	ScatterShowLine                                    *SpecBoolArchive                    `protobuf:"bytes,93,opt,name=scatter_show_line,json=scatterShowLine" json:"scatter_show_line,omitempty"`
	ScatterShowLineUndefined                           *bool                               `protobuf:"varint,94,opt,name=scatter_show_line_undefined,json=scatterShowLineUndefined" json:"scatter_show_line_undefined,omitempty"`
	BubbleShowNegativeData                             *SpecBoolArchive                    `protobuf:"bytes,95,opt,name=bubble_show_negative_data,json=bubbleShowNegativeData" json:"bubble_show_negative_data,omitempty"`
	BubbleShowNegativeDataUndefined                    *bool                               `protobuf:"varint,96,opt,name=bubble_show_negative_data_undefined,json=bubbleShowNegativeDataUndefined" json:"bubble_show_negative_data_undefined,omitempty"`
	BubbleShowSeriesLabels                             *SpecBoolArchive                    `protobuf:"bytes,97,opt,name=bubble_show_series_labels,json=bubbleShowSeriesLabels" json:"bubble_show_series_labels,omitempty"`
	BubbleShowSeriesLabelsUndefined                    *bool                               `protobuf:"varint,98,opt,name=bubble_show_series_labels_undefined,json=bubbleShowSeriesLabelsUndefined" json:"bubble_show_series_labels_undefined,omitempty"`
	PieShowSeriesLabels                                *SpecBoolArchive                    `protobuf:"bytes,99,opt,name=pie_show_series_labels,json=pieShowSeriesLabels" json:"pie_show_series_labels,omitempty"`
	PieShowSeriesLabelsUndefined                       *bool                               `protobuf:"varint,100,opt,name=pie_show_series_labels_undefined,json=pieShowSeriesLabelsUndefined" json:"pie_show_series_labels_undefined,omitempty"`
	ScatterShowSeriesLabels                            *SpecBoolArchive                    `protobuf:"bytes,101,opt,name=scatter_show_series_labels,json=scatterShowSeriesLabels" json:"scatter_show_series_labels,omitempty"`
	ScatterShowSeriesLabelsUndefined                   *bool                               `protobuf:"varint,102,opt,name=scatter_show_series_labels_undefined,json=scatterShowSeriesLabelsUndefined" json:"scatter_show_series_labels_undefined,omitempty"`
	AreaShowSymbol                                     *SpecBoolArchive                    `protobuf:"bytes,103,opt,name=area_show_symbol,json=areaShowSymbol" json:"area_show_symbol,omitempty"`
	AreaShowSymbolUndefined                            *bool                               `protobuf:"varint,104,opt,name=area_show_symbol_undefined,json=areaShowSymbolUndefined" json:"area_show_symbol_undefined,omitempty"`
	LineShowSymbol                                     *SpecBoolArchive                    `protobuf:"bytes,105,opt,name=line_show_symbol,json=lineShowSymbol" json:"line_show_symbol,omitempty"`
	LineShowSymbolUndefined                            *bool                               `protobuf:"varint,106,opt,name=line_show_symbol_undefined,json=lineShowSymbolUndefined" json:"line_show_symbol_undefined,omitempty"`
	MixedAreaShowSymbol                                *SpecBoolArchive                    `protobuf:"bytes,107,opt,name=mixed_area_show_symbol,json=mixedAreaShowSymbol" json:"mixed_area_show_symbol,omitempty"`
	MixedAreaShowSymbolUndefined                       *bool                               `protobuf:"varint,108,opt,name=mixed_area_show_symbol_undefined,json=mixedAreaShowSymbolUndefined" json:"mixed_area_show_symbol_undefined,omitempty"`
	MixedLineShowSymbol                                *SpecBoolArchive                    `protobuf:"bytes,109,opt,name=mixed_line_show_symbol,json=mixedLineShowSymbol" json:"mixed_line_show_symbol,omitempty"`
	MixedLineShowSymbolUndefined                       *bool                               `protobuf:"varint,110,opt,name=mixed_line_show_symbol_undefined,json=mixedLineShowSymbolUndefined" json:"mixed_line_show_symbol_undefined,omitempty"`
	RadarAreaShowSymbol                                *SpecBoolArchive                    `protobuf:"bytes,111,opt,name=radar_area_show_symbol,json=radarAreaShowSymbol" json:"radar_area_show_symbol,omitempty"`
	RadarAreaShowSymbolUndefined                       *bool                               `protobuf:"varint,112,opt,name=radar_area_show_symbol_undefined,json=radarAreaShowSymbolUndefined" json:"radar_area_show_symbol_undefined,omitempty"`
	ScatterShowSymbol                                  *SpecBoolArchive                    `protobuf:"bytes,113,opt,name=scatter_show_symbol,json=scatterShowSymbol" json:"scatter_show_symbol,omitempty"`
	ScatterShowSymbolUndefined                         *bool                               `protobuf:"varint,114,opt,name=scatter_show_symbol_undefined,json=scatterShowSymbolUndefined" json:"scatter_show_symbol_undefined,omitempty"`
	DefaultShowTrendLine                               *SpecBoolArchive                    `protobuf:"bytes,115,opt,name=default_show_trend_line,json=defaultShowTrendLine" json:"default_show_trend_line,omitempty"`
	DefaultShowTrendLineUndefined                      *bool                               `protobuf:"varint,116,opt,name=default_show_trend_line_undefined,json=defaultShowTrendLineUndefined" json:"default_show_trend_line_undefined,omitempty"`
	AreaShowValueLabels                                *SpecBoolArchive                    `protobuf:"bytes,117,opt,name=area_show_value_labels,json=areaShowValueLabels" json:"area_show_value_labels,omitempty"`
	AreaShowValueLabelsUndefined                       *bool                               `protobuf:"varint,118,opt,name=area_show_value_labels_undefined,json=areaShowValueLabelsUndefined" json:"area_show_value_labels_undefined,omitempty"`
	BarShowValueLabels                                 *SpecBoolArchive                    `protobuf:"bytes,119,opt,name=bar_show_value_labels,json=barShowValueLabels" json:"bar_show_value_labels,omitempty"`
	BarShowValueLabelsUndefined                        *bool                               `protobuf:"varint,120,opt,name=bar_show_value_labels_undefined,json=barShowValueLabelsUndefined" json:"bar_show_value_labels_undefined,omitempty"`
	BubbleShowValueLabels                              *SpecBoolArchive                    `protobuf:"bytes,121,opt,name=bubble_show_value_labels,json=bubbleShowValueLabels" json:"bubble_show_value_labels,omitempty"`
	BubbleShowValueLabelsUndefined                     *bool                               `protobuf:"varint,122,opt,name=bubble_show_value_labels_undefined,json=bubbleShowValueLabelsUndefined" json:"bubble_show_value_labels_undefined,omitempty"`
	DefaultShowValueLabels                             *SpecBoolArchive                    `protobuf:"bytes,123,opt,name=default_show_value_labels,json=defaultShowValueLabels" json:"default_show_value_labels,omitempty"`
	DefaultShowValueLabelsUndefined                    *bool                               `protobuf:"varint,124,opt,name=default_show_value_labels_undefined,json=defaultShowValueLabelsUndefined" json:"default_show_value_labels_undefined,omitempty"`
	LineShowValueLabels                                *SpecBoolArchive                    `protobuf:"bytes,125,opt,name=line_show_value_labels,json=lineShowValueLabels" json:"line_show_value_labels,omitempty"`
	LineShowValueLabelsUndefined                       *bool                               `protobuf:"varint,126,opt,name=line_show_value_labels_undefined,json=lineShowValueLabelsUndefined" json:"line_show_value_labels_undefined,omitempty"`
	MixedShowValueLabels                               *SpecBoolArchive                    `protobuf:"bytes,127,opt,name=mixed_show_value_labels,json=mixedShowValueLabels" json:"mixed_show_value_labels,omitempty"`
	MixedShowValueLabelsUndefined                      *bool                               `protobuf:"varint,128,opt,name=mixed_show_value_labels_undefined,json=mixedShowValueLabelsUndefined" json:"mixed_show_value_labels_undefined,omitempty"`
	PieShowValueLabels                                 *SpecBoolArchive                    `protobuf:"bytes,129,opt,name=pie_show_value_labels,json=pieShowValueLabels" json:"pie_show_value_labels,omitempty"`
	PieShowValueLabelsUndefined                        *bool                               `protobuf:"varint,130,opt,name=pie_show_value_labels_undefined,json=pieShowValueLabelsUndefined" json:"pie_show_value_labels_undefined,omitempty"`
	RadarShowValueLabels                               *SpecBoolArchive                    `protobuf:"bytes,131,opt,name=radar_show_value_labels,json=radarShowValueLabels" json:"radar_show_value_labels,omitempty"`
	RadarShowValueLabelsUndefined                      *bool                               `protobuf:"varint,132,opt,name=radar_show_value_labels_undefined,json=radarShowValueLabelsUndefined" json:"radar_show_value_labels_undefined,omitempty"`
	ScatterShowValueLabels                             *SpecBoolArchive                    `protobuf:"bytes,133,opt,name=scatter_show_value_labels,json=scatterShowValueLabels" json:"scatter_show_value_labels,omitempty"`
	ScatterShowValueLabelsUndefined                    *bool                               `protobuf:"varint,134,opt,name=scatter_show_value_labels_undefined,json=scatterShowValueLabelsUndefined" json:"scatter_show_value_labels_undefined,omitempty"`
	BubbleSizeDimension                                *SpecIntegerArchive                 `protobuf:"bytes,135,opt,name=bubble_size_dimension,json=bubbleSizeDimension" json:"bubble_size_dimension,omitempty"`
	BubbleSizeDimensionUndefined                       *bool                               `protobuf:"varint,136,opt,name=bubble_size_dimension_undefined,json=bubbleSizeDimensionUndefined" json:"bubble_size_dimension_undefined,omitempty"`
	AreaStackLabels                                    *SpecBoolArchive                    `protobuf:"bytes,137,opt,name=area_stack_labels,json=areaStackLabels" json:"area_stack_labels,omitempty"`
	AreaStackLabelsUndefined                           *bool                               `protobuf:"varint,138,opt,name=area_stack_labels_undefined,json=areaStackLabelsUndefined" json:"area_stack_labels_undefined,omitempty"`
	BarStackLabels                                     *SpecBoolArchive                    `protobuf:"bytes,139,opt,name=bar_stack_labels,json=barStackLabels" json:"bar_stack_labels,omitempty"`
	BarStackLabelsUndefined                            *bool                               `protobuf:"varint,140,opt,name=bar_stack_labels_undefined,json=barStackLabelsUndefined" json:"bar_stack_labels_undefined,omitempty"`
	BubbleStackLabels                                  *SpecBoolArchive                    `protobuf:"bytes,141,opt,name=bubble_stack_labels,json=bubbleStackLabels" json:"bubble_stack_labels,omitempty"`
	BubbleStackLabelsUndefined                         *bool                               `protobuf:"varint,142,opt,name=bubble_stack_labels_undefined,json=bubbleStackLabelsUndefined" json:"bubble_stack_labels_undefined,omitempty"`
	DefaultStackLabels                                 *SpecBoolArchive                    `protobuf:"bytes,143,opt,name=default_stack_labels,json=defaultStackLabels" json:"default_stack_labels,omitempty"`
	DefaultStackLabelsUndefined                        *bool                               `protobuf:"varint,144,opt,name=default_stack_labels_undefined,json=defaultStackLabelsUndefined" json:"default_stack_labels_undefined,omitempty"`
	LineStackLabels                                    *SpecBoolArchive                    `protobuf:"bytes,145,opt,name=line_stack_labels,json=lineStackLabels" json:"line_stack_labels,omitempty"`
	LineStackLabelsUndefined                           *bool                               `protobuf:"varint,146,opt,name=line_stack_labels_undefined,json=lineStackLabelsUndefined" json:"line_stack_labels_undefined,omitempty"`
	PieStackLabels                                     *SpecBoolArchive                    `protobuf:"bytes,147,opt,name=pie_stack_labels,json=pieStackLabels" json:"pie_stack_labels,omitempty"`
	PieStackLabelsUndefined                            *bool                               `protobuf:"varint,148,opt,name=pie_stack_labels_undefined,json=pieStackLabelsUndefined" json:"pie_stack_labels_undefined,omitempty"`
	ScatterStackLabels                                 *SpecBoolArchive                    `protobuf:"bytes,149,opt,name=scatter_stack_labels,json=scatterStackLabels" json:"scatter_stack_labels,omitempty"`
	ScatterStackLabelsUndefined                        *bool                               `protobuf:"varint,150,opt,name=scatter_stack_labels_undefined,json=scatterStackLabelsUndefined" json:"scatter_stack_labels_undefined,omitempty"`
	StackedAreaStackLabels                             *SpecBoolArchive                    `protobuf:"bytes,151,opt,name=stacked_area_stack_labels,json=stackedAreaStackLabels" json:"stacked_area_stack_labels,omitempty"`
	StackedAreaStackLabelsUndefined                    *bool                               `protobuf:"varint,152,opt,name=stacked_area_stack_labels_undefined,json=stackedAreaStackLabelsUndefined" json:"stacked_area_stack_labels_undefined,omitempty"`
	StackedBarStackLabels                              *SpecBoolArchive                    `protobuf:"bytes,153,opt,name=stacked_bar_stack_labels,json=stackedBarStackLabels" json:"stacked_bar_stack_labels,omitempty"`
	StackedBarStackLabelsUndefined                     *bool                               `protobuf:"varint,154,opt,name=stacked_bar_stack_labels_undefined,json=stackedBarStackLabelsUndefined" json:"stacked_bar_stack_labels_undefined,omitempty"`
	AreaSymbolType                                     *SpecIntegerArchive                 `protobuf:"bytes,155,opt,name=area_symbol_type,json=areaSymbolType" json:"area_symbol_type,omitempty"`
	AreaSymbolTypeUndefined                            *bool                               `protobuf:"varint,156,opt,name=area_symbol_type_undefined,json=areaSymbolTypeUndefined" json:"area_symbol_type_undefined,omitempty"`
	LineSymbolType                                     *SpecIntegerArchive                 `protobuf:"bytes,157,opt,name=line_symbol_type,json=lineSymbolType" json:"line_symbol_type,omitempty"`
	LineSymbolTypeUndefined                            *bool                               `protobuf:"varint,158,opt,name=line_symbol_type_undefined,json=lineSymbolTypeUndefined" json:"line_symbol_type_undefined,omitempty"`
	MixedAreaSymbolType                                *SpecIntegerArchive                 `protobuf:"bytes,159,opt,name=mixed_area_symbol_type,json=mixedAreaSymbolType" json:"mixed_area_symbol_type,omitempty"`
	MixedAreaSymbolTypeUndefined                       *bool                               `protobuf:"varint,160,opt,name=mixed_area_symbol_type_undefined,json=mixedAreaSymbolTypeUndefined" json:"mixed_area_symbol_type_undefined,omitempty"`
	MixedLineSymbolType                                *SpecIntegerArchive                 `protobuf:"bytes,161,opt,name=mixed_line_symbol_type,json=mixedLineSymbolType" json:"mixed_line_symbol_type,omitempty"`
	MixedLineSymbolTypeUndefined                       *bool                               `protobuf:"varint,162,opt,name=mixed_line_symbol_type_undefined,json=mixedLineSymbolTypeUndefined" json:"mixed_line_symbol_type_undefined,omitempty"`
	RadarAreaSymbolType                                *SpecIntegerArchive                 `protobuf:"bytes,163,opt,name=radar_area_symbol_type,json=radarAreaSymbolType" json:"radar_area_symbol_type,omitempty"`
	RadarAreaSymbolTypeUndefined                       *bool                               `protobuf:"varint,164,opt,name=radar_area_symbol_type_undefined,json=radarAreaSymbolTypeUndefined" json:"radar_area_symbol_type_undefined,omitempty"`
	ScatterSymbolType                                  *SpecIntegerArchive                 `protobuf:"bytes,165,opt,name=scatter_symbol_type,json=scatterSymbolType" json:"scatter_symbol_type,omitempty"`
	ScatterSymbolTypeUndefined                         *bool                               `protobuf:"varint,166,opt,name=scatter_symbol_type_undefined,json=scatterSymbolTypeUndefined" json:"scatter_symbol_type_undefined,omitempty"`
	DefaultTrendLineEquationOffsetX                    *SpecDoubleArchive                  `protobuf:"bytes,167,opt,name=default_trend_line_equation_offset_x,json=defaultTrendLineEquationOffsetX" json:"default_trend_line_equation_offset_x,omitempty"`
	DefaultTrendLineEquationOffsetXUndefined           *bool                               `protobuf:"varint,168,opt,name=default_trend_line_equation_offset_x_undefined,json=defaultTrendLineEquationOffsetXUndefined" json:"default_trend_line_equation_offset_x_undefined,omitempty"`
	DefaultTrendLineEquationOffsetY                    *SpecDoubleArchive                  `protobuf:"bytes,169,opt,name=default_trend_line_equation_offset_y,json=defaultTrendLineEquationOffsetY" json:"default_trend_line_equation_offset_y,omitempty"`
	DefaultTrendLineEquationOffsetYUndefined           *bool                               `protobuf:"varint,170,opt,name=default_trend_line_equation_offset_y_undefined,json=defaultTrendLineEquationOffsetYUndefined" json:"default_trend_line_equation_offset_y_undefined,omitempty"`
	DefaultTrendLineLabelString                        *SpecStringArchive                  `protobuf:"bytes,171,opt,name=default_trend_line_label_string,json=defaultTrendLineLabelString" json:"default_trend_line_label_string,omitempty"`
	DefaultTrendLineLabelStringUndefined               *bool                               `protobuf:"varint,172,opt,name=default_trend_line_label_string_undefined,json=defaultTrendLineLabelStringUndefined" json:"default_trend_line_label_string_undefined,omitempty"`
	DefaultTrendLineOrder                              *SpecIntegerArchive                 `protobuf:"bytes,173,opt,name=default_trend_line_order,json=defaultTrendLineOrder" json:"default_trend_line_order,omitempty"`
	DefaultTrendLineOrderUndefined                     *bool                               `protobuf:"varint,174,opt,name=default_trend_line_order_undefined,json=defaultTrendLineOrderUndefined" json:"default_trend_line_order_undefined,omitempty"`
	DefaultTrendLinePeriod                             *SpecIntegerArchive                 `protobuf:"bytes,175,opt,name=default_trend_line_period,json=defaultTrendLinePeriod" json:"default_trend_line_period,omitempty"`
	DefaultTrendLinePeriodUndefined                    *bool                               `protobuf:"varint,176,opt,name=default_trend_line_period_undefined,json=defaultTrendLinePeriodUndefined" json:"default_trend_line_period_undefined,omitempty"`
	DefaultTrendLineRSquaredOffsetX                    *SpecDoubleArchive                  `protobuf:"bytes,177,opt,name=default_trend_line_r_squared_offset_x,json=defaultTrendLineRSquaredOffsetX" json:"default_trend_line_r_squared_offset_x,omitempty"`
	DefaultTrendLineRSquaredOffsetXUndefined           *bool                               `protobuf:"varint,178,opt,name=default_trend_line_r_squared_offset_x_undefined,json=defaultTrendLineRSquaredOffsetXUndefined" json:"default_trend_line_r_squared_offset_x_undefined,omitempty"`
	DefaultTrendLineRSquaredOffsetY                    *SpecDoubleArchive                  `protobuf:"bytes,179,opt,name=default_trend_line_r_squared_offset_y,json=defaultTrendLineRSquaredOffsetY" json:"default_trend_line_r_squared_offset_y,omitempty"`
	DefaultTrendLineRSquaredOffsetYUndefined           *bool                               `protobuf:"varint,180,opt,name=default_trend_line_r_squared_offset_y_undefined,json=defaultTrendLineRSquaredOffsetYUndefined" json:"default_trend_line_r_squared_offset_y_undefined,omitempty"`
	DefaultTrendLineShowEquation                       *SpecBoolArchive                    `protobuf:"bytes,181,opt,name=default_trend_line_show_equation,json=defaultTrendLineShowEquation" json:"default_trend_line_show_equation,omitempty"`
	DefaultTrendLineShowEquationUndefined              *bool                               `protobuf:"varint,182,opt,name=default_trend_line_show_equation_undefined,json=defaultTrendLineShowEquationUndefined" json:"default_trend_line_show_equation_undefined,omitempty"`
	DefaultTrendLineShowLabel                          *SpecBoolArchive                    `protobuf:"bytes,183,opt,name=default_trend_line_show_label,json=defaultTrendLineShowLabel" json:"default_trend_line_show_label,omitempty"`
	DefaultTrendLineShowLabelUndefined                 *bool                               `protobuf:"varint,184,opt,name=default_trend_line_show_label_undefined,json=defaultTrendLineShowLabelUndefined" json:"default_trend_line_show_label_undefined,omitempty"`
	DefaultTrendLineShowR2Value                        *SpecBoolArchive                    `protobuf:"bytes,185,opt,name=default_trend_line_show_r2_value,json=defaultTrendLineShowR2Value" json:"default_trend_line_show_r2_value,omitempty"`
	DefaultTrendLineShowR2ValueUndefined               *bool                               `protobuf:"varint,186,opt,name=default_trend_line_show_r2_value_undefined,json=defaultTrendLineShowR2ValueUndefined" json:"default_trend_line_show_r2_value_undefined,omitempty"`
	DefaultTrendLineType                               *SpecIntegerArchive                 `protobuf:"bytes,187,opt,name=default_trend_line_type,json=defaultTrendLineType" json:"default_trend_line_type,omitempty"`
	DefaultTrendLineTypeUndefined                      *bool                               `protobuf:"varint,188,opt,name=default_trend_line_type_undefined,json=defaultTrendLineTypeUndefined" json:"default_trend_line_type_undefined,omitempty"`
	BubbleValueLabelsAxis                              *SpecIntegerArchive                 `protobuf:"bytes,189,opt,name=bubble_value_labels_axis,json=bubbleValueLabelsAxis" json:"bubble_value_labels_axis,omitempty"`
	BubbleValueLabelsAxisUndefined                     *bool                               `protobuf:"varint,190,opt,name=bubble_value_labels_axis_undefined,json=bubbleValueLabelsAxisUndefined" json:"bubble_value_labels_axis_undefined,omitempty"`
	ScatterValueLabelsAxis                             *SpecIntegerArchive                 `protobuf:"bytes,191,opt,name=scatter_value_labels_axis,json=scatterValueLabelsAxis" json:"scatter_value_labels_axis,omitempty"`
	ScatterValueLabelsAxisUndefined                    *bool                               `protobuf:"varint,192,opt,name=scatter_value_labels_axis_undefined,json=scatterValueLabelsAxisUndefined" json:"scatter_value_labels_axis_undefined,omitempty"`
	PieWedgeExplosion                                  *SpecDoubleArchive                  `protobuf:"bytes,193,opt,name=pie_wedge_explosion,json=pieWedgeExplosion" json:"pie_wedge_explosion,omitempty"`
	PieWedgeExplosionUndefined                         *bool                               `protobuf:"varint,194,opt,name=pie_wedge_explosion_undefined,json=pieWedgeExplosionUndefined" json:"pie_wedge_explosion_undefined,omitempty"`
	DefaultYAxisOrdinal                                *SpecIntegerArchive                 `protobuf:"bytes,195,opt,name=default_y_axis_ordinal,json=defaultYAxisOrdinal" json:"default_y_axis_ordinal,omitempty"`
	DefaultYAxisOrdinalUndefined                       *bool                               `protobuf:"varint,196,opt,name=default_y_axis_ordinal_undefined,json=defaultYAxisOrdinalUndefined" json:"default_y_axis_ordinal_undefined,omitempty"`
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) Reset() {
	*x = ChartSeriesNonStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartSeriesNonStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartSeriesNonStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartSeriesNonStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{19}
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefault10DateFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.Default10DateFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefault10DateFormatUndefined() bool {
	if x != nil && x.Default10DateFormatUndefined != nil {
		return *x.Default10DateFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefault10NumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.Default10NumberFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefault10NumberFormatUndefined() bool {
	if x != nil && x.Default10NumberFormatUndefined != nil {
		return *x.Default10NumberFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPie10NumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.Pie10NumberFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPie10NumberFormatUndefined() bool {
	if x != nil && x.Pie10NumberFormatUndefined != nil {
		return *x.Pie10NumberFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPie23LabelExplosion() *SpecDoubleArchive {
	if x != nil {
		return x.Pie23LabelExplosion
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPie23LabelExplosionUndefined() bool {
	if x != nil && x.Pie23LabelExplosionUndefined != nil {
		return *x.Pie23LabelExplosionUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleAdjustmentScale() *SpecDoubleArchive {
	if x != nil {
		return x.BubbleAdjustmentScale
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleAdjustmentScaleUndefined() bool {
	if x != nil && x.BubbleAdjustmentScaleUndefined != nil {
		return *x.BubbleAdjustmentScaleUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultDateFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.DefaultDateFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultDateFormatUndefined() bool {
	if x != nil && x.DefaultDateFormatUndefined != nil {
		return *x.DefaultDateFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultDurationFormat() *SpecFormatObjectArchive {
	if x != nil {
		return x.DefaultDurationFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultDurationFormatUndefined() bool {
	if x != nil && x.DefaultDurationFormatUndefined != nil {
		return *x.DefaultDurationFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.AreaEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaEnableCalloutLineUndefined() bool {
	if x != nil && x.AreaEnableCalloutLineUndefined != nil {
		return *x.AreaEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.BarEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarEnableCalloutLineUndefined() bool {
	if x != nil && x.BarEnableCalloutLineUndefined != nil {
		return *x.BarEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleEnableCalloutLineUndefined() bool {
	if x != nil && x.BubbleEnableCalloutLineUndefined != nil {
		return *x.BubbleEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultEnableCalloutLineUndefined() bool {
	if x != nil && x.DefaultEnableCalloutLineUndefined != nil {
		return *x.DefaultEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.LineEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineEnableCalloutLineUndefined() bool {
	if x != nil && x.LineEnableCalloutLineUndefined != nil {
		return *x.LineEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.PieEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieEnableCalloutLineUndefined() bool {
	if x != nil && x.PieEnableCalloutLineUndefined != nil {
		return *x.PieEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterEnableCalloutLineUndefined() bool {
	if x != nil && x.ScatterEnableCalloutLineUndefined != nil {
		return *x.ScatterEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedAreaEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.StackedAreaEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedAreaEnableCalloutLineUndefined() bool {
	if x != nil && x.StackedAreaEnableCalloutLineUndefined != nil {
		return *x.StackedAreaEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedBarEnableCalloutLine() *SpecIntegerArchive {
	if x != nil {
		return x.StackedBarEnableCalloutLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedBarEnableCalloutLineUndefined() bool {
	if x != nil && x.StackedBarEnableCalloutLineUndefined != nil {
		return *x.StackedBarEnableCalloutLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomNegativeData() *SpecChartErrorBarCustomDataArchive {
	if x != nil {
		return x.DefaultErrorBarCustomNegativeData
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomNegativeDataUndefined() bool {
	if x != nil && x.DefaultErrorBarCustomNegativeDataUndefined != nil {
		return *x.DefaultErrorBarCustomNegativeDataUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomNegativeDataScatterX() *SpecChartErrorBarCustomDataArchive {
	if x != nil {
		return x.DefaultErrorBarCustomNegativeDataScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomNegativeDataScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarCustomNegativeDataScatterXUndefined != nil {
		return *x.DefaultErrorBarCustomNegativeDataScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomPositiveData() *SpecChartErrorBarCustomDataArchive {
	if x != nil {
		return x.DefaultErrorBarCustomPositiveData
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomPositiveDataUndefined() bool {
	if x != nil && x.DefaultErrorBarCustomPositiveDataUndefined != nil {
		return *x.DefaultErrorBarCustomPositiveDataUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomPositiveDataScatterX() *SpecChartErrorBarCustomDataArchive {
	if x != nil {
		return x.DefaultErrorBarCustomPositiveDataScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarCustomPositiveDataScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarCustomPositiveDataScatterXUndefined != nil {
		return *x.DefaultErrorBarCustomPositiveDataScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarFixedValue() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarFixedValue
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarFixedValueUndefined() bool {
	if x != nil && x.DefaultErrorBarFixedValueUndefined != nil {
		return *x.DefaultErrorBarFixedValueUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarFixedValueScatterX() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarFixedValueScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarFixedValueScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarFixedValueScatterXUndefined != nil {
		return *x.DefaultErrorBarFixedValueScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarPercentValue() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarPercentValue
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarPercentValueUndefined() bool {
	if x != nil && x.DefaultErrorBarPercentValueUndefined != nil {
		return *x.DefaultErrorBarPercentValueUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarPercentValueScatterX() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarPercentValueScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarPercentValueScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarPercentValueScatterXUndefined != nil {
		return *x.DefaultErrorBarPercentValueScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarSetting() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarSetting
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarSettingUndefined() bool {
	if x != nil && x.DefaultErrorBarSettingUndefined != nil {
		return *x.DefaultErrorBarSettingUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarSettingScatterX() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarSettingScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarSettingScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarSettingScatterXUndefined != nil {
		return *x.DefaultErrorBarSettingScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarStdDevValue() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarStdDevValue
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarStdDevValueUndefined() bool {
	if x != nil && x.DefaultErrorBarStdDevValueUndefined != nil {
		return *x.DefaultErrorBarStdDevValueUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarStdDevValueScatterX() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultErrorBarStdDevValueScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarStdDevValueScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarStdDevValueScatterXUndefined != nil {
		return *x.DefaultErrorBarStdDevValueScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarTypeUndefined() bool {
	if x != nil && x.DefaultErrorBarTypeUndefined != nil {
		return *x.DefaultErrorBarTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarTypeScatterX() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarTypeScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultErrorBarTypeScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarTypeScatterXUndefined != nil {
		return *x.DefaultErrorBarTypeScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieLabelExplosion() *SpecDoubleArchive {
	if x != nil {
		return x.PieLabelExplosion
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieLabelExplosionUndefined() bool {
	if x != nil && x.PieLabelExplosionUndefined != nil {
		return *x.PieLabelExplosionUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleLineType() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleLineTypeUndefined() bool {
	if x != nil && x.BubbleLineTypeUndefined != nil {
		return *x.BubbleLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineLineType() *SpecIntegerArchive {
	if x != nil {
		return x.LineLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineLineTypeUndefined() bool {
	if x != nil && x.LineLineTypeUndefined != nil {
		return *x.LineLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineLineType() *SpecIntegerArchive {
	if x != nil {
		return x.MixedLineLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineLineTypeUndefined() bool {
	if x != nil && x.MixedLineLineTypeUndefined != nil {
		return *x.MixedLineLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaLineType() *SpecIntegerArchive {
	if x != nil {
		return x.RadarAreaLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaLineTypeUndefined() bool {
	if x != nil && x.RadarAreaLineTypeUndefined != nil {
		return *x.RadarAreaLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterLineType() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterLineTypeUndefined() bool {
	if x != nil && x.ScatterLineTypeUndefined != nil {
		return *x.ScatterLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultNumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.DefaultNumberFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultNumberFormatUndefined() bool {
	if x != nil && x.DefaultNumberFormatUndefined != nil {
		return *x.DefaultNumberFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieNumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.PieNumberFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieNumberFormatUndefined() bool {
	if x != nil && x.PieNumberFormatUndefined != nil {
		return *x.PieNumberFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultNumberFormatType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultNumberFormatType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultNumberFormatTypeUndefined() bool {
	if x != nil && x.DefaultNumberFormatTypeUndefined != nil {
		return *x.DefaultNumberFormatTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieNumberFormatType() *SpecIntegerArchive {
	if x != nil {
		return x.PieNumberFormatType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieNumberFormatTypeUndefined() bool {
	if x != nil && x.PieNumberFormatTypeUndefined != nil {
		return *x.PieNumberFormatTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedPercentNumberFormat() *SpecNumberFormatArchive {
	if x != nil {
		return x.StackedPercentNumberFormat
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedPercentNumberFormatUndefined() bool {
	if x != nil && x.StackedPercentNumberFormatUndefined != nil {
		return *x.StackedPercentNumberFormatUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultSeriesType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultSeriesType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultSeriesTypeUndefined() bool {
	if x != nil && x.DefaultSeriesTypeUndefined != nil {
		return *x.DefaultSeriesTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowErrorBar() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowErrorBar
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowErrorBarUndefined() bool {
	if x != nil && x.DefaultShowErrorBarUndefined != nil {
		return *x.DefaultShowErrorBarUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowErrorBarScatterX() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowErrorBarScatterX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowErrorBarScatterXUndefined() bool {
	if x != nil && x.DefaultShowErrorBarScatterXUndefined != nil {
		return *x.DefaultShowErrorBarScatterXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowLabelsInFront() *SpecBoolArchive {
	if x != nil {
		return x.BubbleShowLabelsInFront
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowLabelsInFrontUndefined() bool {
	if x != nil && x.BubbleShowLabelsInFrontUndefined != nil {
		return *x.BubbleShowLabelsInFrontUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowLabelsInFront() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowLabelsInFront
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowLabelsInFrontUndefined() bool {
	if x != nil && x.DefaultShowLabelsInFrontUndefined != nil {
		return *x.DefaultShowLabelsInFrontUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowLine() *SpecBoolArchive {
	if x != nil {
		return x.ScatterShowLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowLineUndefined() bool {
	if x != nil && x.ScatterShowLineUndefined != nil {
		return *x.ScatterShowLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowNegativeData() *SpecBoolArchive {
	if x != nil {
		return x.BubbleShowNegativeData
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowNegativeDataUndefined() bool {
	if x != nil && x.BubbleShowNegativeDataUndefined != nil {
		return *x.BubbleShowNegativeDataUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowSeriesLabels() *SpecBoolArchive {
	if x != nil {
		return x.BubbleShowSeriesLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowSeriesLabelsUndefined() bool {
	if x != nil && x.BubbleShowSeriesLabelsUndefined != nil {
		return *x.BubbleShowSeriesLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieShowSeriesLabels() *SpecBoolArchive {
	if x != nil {
		return x.PieShowSeriesLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieShowSeriesLabelsUndefined() bool {
	if x != nil && x.PieShowSeriesLabelsUndefined != nil {
		return *x.PieShowSeriesLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowSeriesLabels() *SpecBoolArchive {
	if x != nil {
		return x.ScatterShowSeriesLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowSeriesLabelsUndefined() bool {
	if x != nil && x.ScatterShowSeriesLabelsUndefined != nil {
		return *x.ScatterShowSeriesLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.AreaShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaShowSymbolUndefined() bool {
	if x != nil && x.AreaShowSymbolUndefined != nil {
		return *x.AreaShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.LineShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineShowSymbolUndefined() bool {
	if x != nil && x.LineShowSymbolUndefined != nil {
		return *x.LineShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedAreaShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.MixedAreaShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedAreaShowSymbolUndefined() bool {
	if x != nil && x.MixedAreaShowSymbolUndefined != nil {
		return *x.MixedAreaShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.MixedLineShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineShowSymbolUndefined() bool {
	if x != nil && x.MixedLineShowSymbolUndefined != nil {
		return *x.MixedLineShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.RadarAreaShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaShowSymbolUndefined() bool {
	if x != nil && x.RadarAreaShowSymbolUndefined != nil {
		return *x.RadarAreaShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowSymbol() *SpecBoolArchive {
	if x != nil {
		return x.ScatterShowSymbol
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowSymbolUndefined() bool {
	if x != nil && x.ScatterShowSymbolUndefined != nil {
		return *x.ScatterShowSymbolUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowTrendLine() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowTrendLine
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowTrendLineUndefined() bool {
	if x != nil && x.DefaultShowTrendLineUndefined != nil {
		return *x.DefaultShowTrendLineUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.AreaShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaShowValueLabelsUndefined() bool {
	if x != nil && x.AreaShowValueLabelsUndefined != nil {
		return *x.AreaShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.BarShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarShowValueLabelsUndefined() bool {
	if x != nil && x.BarShowValueLabelsUndefined != nil {
		return *x.BarShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.BubbleShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleShowValueLabelsUndefined() bool {
	if x != nil && x.BubbleShowValueLabelsUndefined != nil {
		return *x.BubbleShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultShowValueLabelsUndefined() bool {
	if x != nil && x.DefaultShowValueLabelsUndefined != nil {
		return *x.DefaultShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.LineShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineShowValueLabelsUndefined() bool {
	if x != nil && x.LineShowValueLabelsUndefined != nil {
		return *x.LineShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.MixedShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedShowValueLabelsUndefined() bool {
	if x != nil && x.MixedShowValueLabelsUndefined != nil {
		return *x.MixedShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.PieShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieShowValueLabelsUndefined() bool {
	if x != nil && x.PieShowValueLabelsUndefined != nil {
		return *x.PieShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.RadarShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarShowValueLabelsUndefined() bool {
	if x != nil && x.RadarShowValueLabelsUndefined != nil {
		return *x.RadarShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowValueLabels() *SpecBoolArchive {
	if x != nil {
		return x.ScatterShowValueLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterShowValueLabelsUndefined() bool {
	if x != nil && x.ScatterShowValueLabelsUndefined != nil {
		return *x.ScatterShowValueLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleSizeDimension() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleSizeDimension
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleSizeDimensionUndefined() bool {
	if x != nil && x.BubbleSizeDimensionUndefined != nil {
		return *x.BubbleSizeDimensionUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.AreaStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaStackLabelsUndefined() bool {
	if x != nil && x.AreaStackLabelsUndefined != nil {
		return *x.AreaStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.BarStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBarStackLabelsUndefined() bool {
	if x != nil && x.BarStackLabelsUndefined != nil {
		return *x.BarStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.BubbleStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleStackLabelsUndefined() bool {
	if x != nil && x.BubbleStackLabelsUndefined != nil {
		return *x.BubbleStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.DefaultStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultStackLabelsUndefined() bool {
	if x != nil && x.DefaultStackLabelsUndefined != nil {
		return *x.DefaultStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.LineStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineStackLabelsUndefined() bool {
	if x != nil && x.LineStackLabelsUndefined != nil {
		return *x.LineStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.PieStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieStackLabelsUndefined() bool {
	if x != nil && x.PieStackLabelsUndefined != nil {
		return *x.PieStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.ScatterStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterStackLabelsUndefined() bool {
	if x != nil && x.ScatterStackLabelsUndefined != nil {
		return *x.ScatterStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedAreaStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.StackedAreaStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedAreaStackLabelsUndefined() bool {
	if x != nil && x.StackedAreaStackLabelsUndefined != nil {
		return *x.StackedAreaStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedBarStackLabels() *SpecBoolArchive {
	if x != nil {
		return x.StackedBarStackLabels
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetStackedBarStackLabelsUndefined() bool {
	if x != nil && x.StackedBarStackLabelsUndefined != nil {
		return *x.StackedBarStackLabelsUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.AreaSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetAreaSymbolTypeUndefined() bool {
	if x != nil && x.AreaSymbolTypeUndefined != nil {
		return *x.AreaSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.LineSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetLineSymbolTypeUndefined() bool {
	if x != nil && x.LineSymbolTypeUndefined != nil {
		return *x.LineSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedAreaSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.MixedAreaSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedAreaSymbolTypeUndefined() bool {
	if x != nil && x.MixedAreaSymbolTypeUndefined != nil {
		return *x.MixedAreaSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.MixedLineSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetMixedLineSymbolTypeUndefined() bool {
	if x != nil && x.MixedLineSymbolTypeUndefined != nil {
		return *x.MixedLineSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.RadarAreaSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetRadarAreaSymbolTypeUndefined() bool {
	if x != nil && x.RadarAreaSymbolTypeUndefined != nil {
		return *x.RadarAreaSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterSymbolType() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterSymbolType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterSymbolTypeUndefined() bool {
	if x != nil && x.ScatterSymbolTypeUndefined != nil {
		return *x.ScatterSymbolTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineEquationOffsetX() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendLineEquationOffsetX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineEquationOffsetXUndefined() bool {
	if x != nil && x.DefaultTrendLineEquationOffsetXUndefined != nil {
		return *x.DefaultTrendLineEquationOffsetXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineEquationOffsetY() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendLineEquationOffsetY
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineEquationOffsetYUndefined() bool {
	if x != nil && x.DefaultTrendLineEquationOffsetYUndefined != nil {
		return *x.DefaultTrendLineEquationOffsetYUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineLabelString() *SpecStringArchive {
	if x != nil {
		return x.DefaultTrendLineLabelString
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineLabelStringUndefined() bool {
	if x != nil && x.DefaultTrendLineLabelStringUndefined != nil {
		return *x.DefaultTrendLineLabelStringUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineOrder() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTrendLineOrder
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineOrderUndefined() bool {
	if x != nil && x.DefaultTrendLineOrderUndefined != nil {
		return *x.DefaultTrendLineOrderUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLinePeriod() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTrendLinePeriod
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLinePeriodUndefined() bool {
	if x != nil && x.DefaultTrendLinePeriodUndefined != nil {
		return *x.DefaultTrendLinePeriodUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineRSquaredOffsetX() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendLineRSquaredOffsetX
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineRSquaredOffsetXUndefined() bool {
	if x != nil && x.DefaultTrendLineRSquaredOffsetXUndefined != nil {
		return *x.DefaultTrendLineRSquaredOffsetXUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineRSquaredOffsetY() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendLineRSquaredOffsetY
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineRSquaredOffsetYUndefined() bool {
	if x != nil && x.DefaultTrendLineRSquaredOffsetYUndefined != nil {
		return *x.DefaultTrendLineRSquaredOffsetYUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowEquation() *SpecBoolArchive {
	if x != nil {
		return x.DefaultTrendLineShowEquation
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowEquationUndefined() bool {
	if x != nil && x.DefaultTrendLineShowEquationUndefined != nil {
		return *x.DefaultTrendLineShowEquationUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowLabel() *SpecBoolArchive {
	if x != nil {
		return x.DefaultTrendLineShowLabel
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowLabelUndefined() bool {
	if x != nil && x.DefaultTrendLineShowLabelUndefined != nil {
		return *x.DefaultTrendLineShowLabelUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowR2Value() *SpecBoolArchive {
	if x != nil {
		return x.DefaultTrendLineShowR2Value
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineShowR2ValueUndefined() bool {
	if x != nil && x.DefaultTrendLineShowR2ValueUndefined != nil {
		return *x.DefaultTrendLineShowR2ValueUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineType() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTrendLineType
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultTrendLineTypeUndefined() bool {
	if x != nil && x.DefaultTrendLineTypeUndefined != nil {
		return *x.DefaultTrendLineTypeUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleValueLabelsAxis() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleValueLabelsAxis
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetBubbleValueLabelsAxisUndefined() bool {
	if x != nil && x.BubbleValueLabelsAxisUndefined != nil {
		return *x.BubbleValueLabelsAxisUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterValueLabelsAxis() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterValueLabelsAxis
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetScatterValueLabelsAxisUndefined() bool {
	if x != nil && x.ScatterValueLabelsAxisUndefined != nil {
		return *x.ScatterValueLabelsAxisUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieWedgeExplosion() *SpecDoubleArchive {
	if x != nil {
		return x.PieWedgeExplosion
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetPieWedgeExplosionUndefined() bool {
	if x != nil && x.PieWedgeExplosionUndefined != nil {
		return *x.PieWedgeExplosionUndefined
	}
	return false
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultYAxisOrdinal() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultYAxisOrdinal
	}
	return nil
}

func (x *ChartSeriesNonStylePropertyChangeSetArchive) GetDefaultYAxisOrdinalUndefined() bool {
	if x != nil && x.DefaultYAxisOrdinalUndefined != nil {
		return *x.DefaultYAxisOrdinalUndefined
	}
	return false
}

type ChartSeriesStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultCalloutLineEndLineEnd                         *SpecLineEndArchive `protobuf:"bytes,1,opt,name=default_callout_line_end_line_end,json=defaultCalloutLineEndLineEnd" json:"default_callout_line_end_line_end,omitempty"`
	DefaultCalloutLineEndLineEndUndefined                *bool               `protobuf:"varint,2,opt,name=default_callout_line_end_line_end_undefined,json=defaultCalloutLineEndLineEndUndefined" json:"default_callout_line_end_line_end_undefined,omitempty"`
	DefaultCalloutLineStartLineEnd                       *SpecLineEndArchive `protobuf:"bytes,3,opt,name=default_callout_line_start_line_end,json=defaultCalloutLineStartLineEnd" json:"default_callout_line_start_line_end,omitempty"`
	DefaultCalloutLineStartLineEndUndefined              *bool               `protobuf:"varint,4,opt,name=default_callout_line_start_line_end_undefined,json=defaultCalloutLineStartLineEndUndefined" json:"default_callout_line_start_line_end_undefined,omitempty"`
	DefaultCalloutLineStrokeStyle                        *SpecStrokeArchive  `protobuf:"bytes,5,opt,name=default_callout_line_stroke_style,json=defaultCalloutLineStrokeStyle" json:"default_callout_line_stroke_style,omitempty"`
	DefaultCalloutLineStrokeStyleUndefined               *bool               `protobuf:"varint,6,opt,name=default_callout_line_stroke_style_undefined,json=defaultCalloutLineStrokeStyleUndefined" json:"default_callout_line_stroke_style_undefined,omitempty"`
	DefaultErrorBarLineEnd                               *SpecLineEndArchive `protobuf:"bytes,7,opt,name=default_error_bar_line_end,json=defaultErrorBarLineEnd" json:"default_error_bar_line_end,omitempty"`
	DefaultErrorBarLineEndUndefined                      *bool               `protobuf:"varint,8,opt,name=default_error_bar_line_end_undefined,json=defaultErrorBarLineEndUndefined" json:"default_error_bar_line_end_undefined,omitempty"`
	DefaultErrorBarLineEndScatterX                       *SpecLineEndArchive `protobuf:"bytes,9,opt,name=default_error_bar_line_end_scatter_x,json=defaultErrorBarLineEndScatterX" json:"default_error_bar_line_end_scatter_x,omitempty"`
	DefaultErrorBarLineEndScatterXUndefined              *bool               `protobuf:"varint,10,opt,name=default_error_bar_line_end_scatter_x_undefined,json=defaultErrorBarLineEndScatterXUndefined" json:"default_error_bar_line_end_scatter_x_undefined,omitempty"`
	DefaultErrorBarShadow                                *SpecShadowArchive  `protobuf:"bytes,11,opt,name=default_error_bar_shadow,json=defaultErrorBarShadow" json:"default_error_bar_shadow,omitempty"`
	DefaultErrorBarShadowUndefined                       *bool               `protobuf:"varint,12,opt,name=default_error_bar_shadow_undefined,json=defaultErrorBarShadowUndefined" json:"default_error_bar_shadow_undefined,omitempty"`
	DefaultErrorBarSpacing                               *SpecIntegerArchive `protobuf:"bytes,13,opt,name=default_error_bar_spacing,json=defaultErrorBarSpacing" json:"default_error_bar_spacing,omitempty"`
	DefaultErrorBarSpacingUndefined                      *bool               `protobuf:"varint,14,opt,name=default_error_bar_spacing_undefined,json=defaultErrorBarSpacingUndefined" json:"default_error_bar_spacing_undefined,omitempty"`
	DefaultErrorBarSpacingScatterX                       *SpecIntegerArchive `protobuf:"bytes,15,opt,name=default_error_bar_spacing_scatter_x,json=defaultErrorBarSpacingScatterX" json:"default_error_bar_spacing_scatter_x,omitempty"`
	DefaultErrorBarSpacingScatterXUndefined              *bool               `protobuf:"varint,16,opt,name=default_error_bar_spacing_scatter_x_undefined,json=defaultErrorBarSpacingScatterXUndefined" json:"default_error_bar_spacing_scatter_x_undefined,omitempty"`
	DefaultErrorBarStroke                                *SpecStrokeArchive  `protobuf:"bytes,17,opt,name=default_error_bar_stroke,json=defaultErrorBarStroke" json:"default_error_bar_stroke,omitempty"`
	DefaultErrorBarStrokeUndefined                       *bool               `protobuf:"varint,18,opt,name=default_error_bar_stroke_undefined,json=defaultErrorBarStrokeUndefined" json:"default_error_bar_stroke_undefined,omitempty"`
	DefaultErrorBarStrokeScatterX                        *SpecStrokeArchive  `protobuf:"bytes,19,opt,name=default_error_bar_stroke_scatter_x,json=defaultErrorBarStrokeScatterX" json:"default_error_bar_stroke_scatter_x,omitempty"`
	DefaultErrorBarStrokeScatterXUndefined               *bool               `protobuf:"varint,20,opt,name=default_error_bar_stroke_scatter_x_undefined,json=defaultErrorBarStrokeScatterXUndefined" json:"default_error_bar_stroke_scatter_x_undefined,omitempty"`
	Area3DFill                                           *SpecFillArchive    `protobuf:"bytes,21,opt,name=area3d_fill,json=area3dFill" json:"area3d_fill,omitempty"`
	Area3DFillUndefined                                  *bool               `protobuf:"varint,22,opt,name=area3d_fill_undefined,json=area3dFillUndefined" json:"area3d_fill_undefined,omitempty"`
	Bar3DFill                                            *SpecFillArchive    `protobuf:"bytes,23,opt,name=bar3d_fill,json=bar3dFill" json:"bar3d_fill,omitempty"`
	Bar3DFillUndefined                                   *bool               `protobuf:"varint,24,opt,name=bar3d_fill_undefined,json=bar3dFillUndefined" json:"bar3d_fill_undefined,omitempty"`
	Column3DFill                                         *SpecFillArchive    `protobuf:"bytes,25,opt,name=column3d_fill,json=column3dFill" json:"column3d_fill,omitempty"`
	Column3DFillUndefined                                *bool               `protobuf:"varint,26,opt,name=column3d_fill_undefined,json=column3dFillUndefined" json:"column3d_fill_undefined,omitempty"`
	Line3DFill                                           *SpecFillArchive    `protobuf:"bytes,27,opt,name=line3d_fill,json=line3dFill" json:"line3d_fill,omitempty"`
	Line3DFillUndefined                                  *bool               `protobuf:"varint,28,opt,name=line3d_fill_undefined,json=line3dFillUndefined" json:"line3d_fill_undefined,omitempty"`
	Pie3DFill                                            *SpecFillArchive    `protobuf:"bytes,29,opt,name=pie3d_fill,json=pie3dFill" json:"pie3d_fill,omitempty"`
	Pie3DFillUndefined                                   *bool               `protobuf:"varint,30,opt,name=pie3d_fill_undefined,json=pie3dFillUndefined" json:"pie3d_fill_undefined,omitempty"`
	AreaFill                                             *SpecFillArchive    `protobuf:"bytes,31,opt,name=area_fill,json=areaFill" json:"area_fill,omitempty"`
	AreaFillUndefined                                    *bool               `protobuf:"varint,32,opt,name=area_fill_undefined,json=areaFillUndefined" json:"area_fill_undefined,omitempty"`
	BarFill                                              *SpecFillArchive    `protobuf:"bytes,33,opt,name=bar_fill,json=barFill" json:"bar_fill,omitempty"`
	BarFillUndefined                                     *bool               `protobuf:"varint,34,opt,name=bar_fill_undefined,json=barFillUndefined" json:"bar_fill_undefined,omitempty"`
	ColumnFill                                           *SpecFillArchive    `protobuf:"bytes,35,opt,name=column_fill,json=columnFill" json:"column_fill,omitempty"`
	ColumnFillUndefined                                  *bool               `protobuf:"varint,36,opt,name=column_fill_undefined,json=columnFillUndefined" json:"column_fill_undefined,omitempty"`
	DefaultFill                                          *SpecFillArchive    `protobuf:"bytes,37,opt,name=default_fill,json=defaultFill" json:"default_fill,omitempty"`
	DefaultFillUndefined                                 *bool               `protobuf:"varint,38,opt,name=default_fill_undefined,json=defaultFillUndefined" json:"default_fill_undefined,omitempty"`
	MixedAreaFill                                        *SpecFillArchive    `protobuf:"bytes,39,opt,name=mixed_area_fill,json=mixedAreaFill" json:"mixed_area_fill,omitempty"`
	MixedAreaFillUndefined                               *bool               `protobuf:"varint,40,opt,name=mixed_area_fill_undefined,json=mixedAreaFillUndefined" json:"mixed_area_fill_undefined,omitempty"`
	MixedColumnFill                                      *SpecFillArchive    `protobuf:"bytes,41,opt,name=mixed_column_fill,json=mixedColumnFill" json:"mixed_column_fill,omitempty"`
	MixedColumnFillUndefined                             *bool               `protobuf:"varint,42,opt,name=mixed_column_fill_undefined,json=mixedColumnFillUndefined" json:"mixed_column_fill_undefined,omitempty"`
	PieFill                                              *SpecFillArchive    `protobuf:"bytes,43,opt,name=pie_fill,json=pieFill" json:"pie_fill,omitempty"`
	PieFillUndefined                                     *bool               `protobuf:"varint,44,opt,name=pie_fill_undefined,json=pieFillUndefined" json:"pie_fill_undefined,omitempty"`
	RadarAreaFill                                        *SpecFillArchive    `protobuf:"bytes,45,opt,name=radar_area_fill,json=radarAreaFill" json:"radar_area_fill,omitempty"`
	RadarAreaFillUndefined                               *bool               `protobuf:"varint,46,opt,name=radar_area_fill_undefined,json=radarAreaFillUndefined" json:"radar_area_fill_undefined,omitempty"`
	RadarAreaFillUseSeriesStrokeAlphaMultiplier          *SpecDoubleArchive  `protobuf:"bytes,47,opt,name=radar_area_fill_use_series_stroke_alpha_multiplier,json=radarAreaFillUseSeriesStrokeAlphaMultiplier" json:"radar_area_fill_use_series_stroke_alpha_multiplier,omitempty"`
	RadarAreaFillUseSeriesStrokeAlphaMultiplierUndefined *bool               `protobuf:"varint,48,opt,name=radar_area_fill_use_series_stroke_alpha_multiplier_undefined,json=radarAreaFillUseSeriesStrokeAlphaMultiplierUndefined" json:"radar_area_fill_use_series_stroke_alpha_multiplier_undefined,omitempty"`
	RadarAreaFillUseSeriesStroke                         *SpecBoolArchive    `protobuf:"bytes,49,opt,name=radar_area_fill_use_series_stroke,json=radarAreaFillUseSeriesStroke" json:"radar_area_fill_use_series_stroke,omitempty"`
	RadarAreaFillUseSeriesStrokeUndefined                *bool               `protobuf:"varint,50,opt,name=radar_area_fill_use_series_stroke_undefined,json=radarAreaFillUseSeriesStrokeUndefined" json:"radar_area_fill_use_series_stroke_undefined,omitempty"`
	AreaLabelParagraphStyleIndex                         *SpecIntegerArchive `protobuf:"bytes,51,opt,name=area_label_paragraph_style_index,json=areaLabelParagraphStyleIndex" json:"area_label_paragraph_style_index,omitempty"`
	AreaLabelParagraphStyleIndexUndefined                *bool               `protobuf:"varint,52,opt,name=area_label_paragraph_style_index_undefined,json=areaLabelParagraphStyleIndexUndefined" json:"area_label_paragraph_style_index_undefined,omitempty"`
	BarLabelParagraphStyleIndex                          *SpecIntegerArchive `protobuf:"bytes,53,opt,name=bar_label_paragraph_style_index,json=barLabelParagraphStyleIndex" json:"bar_label_paragraph_style_index,omitempty"`
	BarLabelParagraphStyleIndexUndefined                 *bool               `protobuf:"varint,54,opt,name=bar_label_paragraph_style_index_undefined,json=barLabelParagraphStyleIndexUndefined" json:"bar_label_paragraph_style_index_undefined,omitempty"`
	DefaultLabelParagraphStyleIndex                      *SpecIntegerArchive `protobuf:"bytes,55,opt,name=default_label_paragraph_style_index,json=defaultLabelParagraphStyleIndex" json:"default_label_paragraph_style_index,omitempty"`
	DefaultLabelParagraphStyleIndexUndefined             *bool               `protobuf:"varint,56,opt,name=default_label_paragraph_style_index_undefined,json=defaultLabelParagraphStyleIndexUndefined" json:"default_label_paragraph_style_index_undefined,omitempty"`
	DonutLabelParagraphStyleIndex                        *SpecIntegerArchive `protobuf:"bytes,57,opt,name=donut_label_paragraph_style_index,json=donutLabelParagraphStyleIndex" json:"donut_label_paragraph_style_index,omitempty"`
	DonutLabelParagraphStyleIndexUndefined               *bool               `protobuf:"varint,58,opt,name=donut_label_paragraph_style_index_undefined,json=donutLabelParagraphStyleIndexUndefined" json:"donut_label_paragraph_style_index_undefined,omitempty"`
	LineLabelParagraphStyleIndex                         *SpecIntegerArchive `protobuf:"bytes,59,opt,name=line_label_paragraph_style_index,json=lineLabelParagraphStyleIndex" json:"line_label_paragraph_style_index,omitempty"`
	LineLabelParagraphStyleIndexUndefined                *bool               `protobuf:"varint,60,opt,name=line_label_paragraph_style_index_undefined,json=lineLabelParagraphStyleIndexUndefined" json:"line_label_paragraph_style_index_undefined,omitempty"`
	MixedLabelParagraphStyleIndex                        *SpecIntegerArchive `protobuf:"bytes,61,opt,name=mixed_label_paragraph_style_index,json=mixedLabelParagraphStyleIndex" json:"mixed_label_paragraph_style_index,omitempty"`
	MixedLabelParagraphStyleIndexUndefined               *bool               `protobuf:"varint,62,opt,name=mixed_label_paragraph_style_index_undefined,json=mixedLabelParagraphStyleIndexUndefined" json:"mixed_label_paragraph_style_index_undefined,omitempty"`
	PieLabelParagraphStyleIndex                          *SpecIntegerArchive `protobuf:"bytes,63,opt,name=pie_label_paragraph_style_index,json=pieLabelParagraphStyleIndex" json:"pie_label_paragraph_style_index,omitempty"`
	PieLabelParagraphStyleIndexUndefined                 *bool               `protobuf:"varint,64,opt,name=pie_label_paragraph_style_index_undefined,json=pieLabelParagraphStyleIndexUndefined" json:"pie_label_paragraph_style_index_undefined,omitempty"`
	RadarLabelParagraphStyleIndex                        *SpecIntegerArchive `protobuf:"bytes,65,opt,name=radar_label_paragraph_style_index,json=radarLabelParagraphStyleIndex" json:"radar_label_paragraph_style_index,omitempty"`
	RadarLabelParagraphStyleIndexUndefined               *bool               `protobuf:"varint,66,opt,name=radar_label_paragraph_style_index_undefined,json=radarLabelParagraphStyleIndexUndefined" json:"radar_label_paragraph_style_index_undefined,omitempty"`
	DefaultOpacity                                       *SpecDoubleArchive  `protobuf:"bytes,67,opt,name=default_opacity,json=defaultOpacity" json:"default_opacity,omitempty"`
	DefaultOpacityUndefined                              *bool               `protobuf:"varint,68,opt,name=default_opacity_undefined,json=defaultOpacityUndefined" json:"default_opacity_undefined,omitempty"`
	AreaOutsideLabelParagraphStyleIndex                  *SpecIntegerArchive `protobuf:"bytes,69,opt,name=area_outside_label_paragraph_style_index,json=areaOutsideLabelParagraphStyleIndex" json:"area_outside_label_paragraph_style_index,omitempty"`
	AreaOutsideLabelParagraphStyleIndexUndefined         *bool               `protobuf:"varint,70,opt,name=area_outside_label_paragraph_style_index_undefined,json=areaOutsideLabelParagraphStyleIndexUndefined" json:"area_outside_label_paragraph_style_index_undefined,omitempty"`
	BarOutsideLabelParagraphStyleIndex                   *SpecIntegerArchive `protobuf:"bytes,71,opt,name=bar_outside_label_paragraph_style_index,json=barOutsideLabelParagraphStyleIndex" json:"bar_outside_label_paragraph_style_index,omitempty"`
	BarOutsideLabelParagraphStyleIndexUndefined          *bool               `protobuf:"varint,72,opt,name=bar_outside_label_paragraph_style_index_undefined,json=barOutsideLabelParagraphStyleIndexUndefined" json:"bar_outside_label_paragraph_style_index_undefined,omitempty"`
	DefaultOutsideLabelParagraphStyleIndex               *SpecIntegerArchive `protobuf:"bytes,73,opt,name=default_outside_label_paragraph_style_index,json=defaultOutsideLabelParagraphStyleIndex" json:"default_outside_label_paragraph_style_index,omitempty"`
	DefaultOutsideLabelParagraphStyleIndexUndefined      *bool               `protobuf:"varint,74,opt,name=default_outside_label_paragraph_style_index_undefined,json=defaultOutsideLabelParagraphStyleIndexUndefined" json:"default_outside_label_paragraph_style_index_undefined,omitempty"`
	DonutOutsideLabelParagraphStyleIndex                 *SpecIntegerArchive `protobuf:"bytes,75,opt,name=donut_outside_label_paragraph_style_index,json=donutOutsideLabelParagraphStyleIndex" json:"donut_outside_label_paragraph_style_index,omitempty"`
	DonutOutsideLabelParagraphStyleIndexUndefined        *bool               `protobuf:"varint,76,opt,name=donut_outside_label_paragraph_style_index_undefined,json=donutOutsideLabelParagraphStyleIndexUndefined" json:"donut_outside_label_paragraph_style_index_undefined,omitempty"`
	MixedOutsideLabelParagraphStyleIndex                 *SpecIntegerArchive `protobuf:"bytes,77,opt,name=mixed_outside_label_paragraph_style_index,json=mixedOutsideLabelParagraphStyleIndex" json:"mixed_outside_label_paragraph_style_index,omitempty"`
	MixedOutsideLabelParagraphStyleIndexUndefined        *bool               `protobuf:"varint,78,opt,name=mixed_outside_label_paragraph_style_index_undefined,json=mixedOutsideLabelParagraphStyleIndexUndefined" json:"mixed_outside_label_paragraph_style_index_undefined,omitempty"`
	PieOutsideLabelParagraphStyleIndex                   *SpecIntegerArchive `protobuf:"bytes,79,opt,name=pie_outside_label_paragraph_style_index,json=pieOutsideLabelParagraphStyleIndex" json:"pie_outside_label_paragraph_style_index,omitempty"`
	PieOutsideLabelParagraphStyleIndexUndefined          *bool               `protobuf:"varint,80,opt,name=pie_outside_label_paragraph_style_index_undefined,json=pieOutsideLabelParagraphStyleIndexUndefined" json:"pie_outside_label_paragraph_style_index_undefined,omitempty"`
	RadarOutsideLabelParagraphStyleIndex                 *SpecIntegerArchive `protobuf:"bytes,81,opt,name=radar_outside_label_paragraph_style_index,json=radarOutsideLabelParagraphStyleIndex" json:"radar_outside_label_paragraph_style_index,omitempty"`
	RadarOutsideLabelParagraphStyleIndexUndefined        *bool               `protobuf:"varint,82,opt,name=radar_outside_label_paragraph_style_index_undefined,json=radarOutsideLabelParagraphStyleIndexUndefined" json:"radar_outside_label_paragraph_style_index_undefined,omitempty"`
	Area3DShadow                                         *SpecShadowArchive  `protobuf:"bytes,83,opt,name=area3d_shadow,json=area3dShadow" json:"area3d_shadow,omitempty"`
	Area3DShadowUndefined                                *bool               `protobuf:"varint,84,opt,name=area3d_shadow_undefined,json=area3dShadowUndefined" json:"area3d_shadow_undefined,omitempty"`
	Bar3DShadow                                          *SpecShadowArchive  `protobuf:"bytes,85,opt,name=bar3d_shadow,json=bar3dShadow" json:"bar3d_shadow,omitempty"`
	Bar3DShadowUndefined                                 *bool               `protobuf:"varint,86,opt,name=bar3d_shadow_undefined,json=bar3dShadowUndefined" json:"bar3d_shadow_undefined,omitempty"`
	Column3DShadow                                       *SpecShadowArchive  `protobuf:"bytes,87,opt,name=column3d_shadow,json=column3dShadow" json:"column3d_shadow,omitempty"`
	Column3DShadowUndefined                              *bool               `protobuf:"varint,88,opt,name=column3d_shadow_undefined,json=column3dShadowUndefined" json:"column3d_shadow_undefined,omitempty"`
	Line3DShadow                                         *SpecShadowArchive  `protobuf:"bytes,89,opt,name=line3d_shadow,json=line3dShadow" json:"line3d_shadow,omitempty"`
	Line3DShadowUndefined                                *bool               `protobuf:"varint,90,opt,name=line3d_shadow_undefined,json=line3dShadowUndefined" json:"line3d_shadow_undefined,omitempty"`
	Pie3DShadow                                          *SpecShadowArchive  `protobuf:"bytes,91,opt,name=pie3d_shadow,json=pie3dShadow" json:"pie3d_shadow,omitempty"`
	Pie3DShadowUndefined                                 *bool               `protobuf:"varint,92,opt,name=pie3d_shadow_undefined,json=pie3dShadowUndefined" json:"pie3d_shadow_undefined,omitempty"`
	AreaShadow                                           *SpecShadowArchive  `protobuf:"bytes,93,opt,name=area_shadow,json=areaShadow" json:"area_shadow,omitempty"`
	AreaShadowUndefined                                  *bool               `protobuf:"varint,94,opt,name=area_shadow_undefined,json=areaShadowUndefined" json:"area_shadow_undefined,omitempty"`
	BarShadow                                            *SpecShadowArchive  `protobuf:"bytes,95,opt,name=bar_shadow,json=barShadow" json:"bar_shadow,omitempty"`
	BarShadowUndefined                                   *bool               `protobuf:"varint,96,opt,name=bar_shadow_undefined,json=barShadowUndefined" json:"bar_shadow_undefined,omitempty"`
	BubbleShadow                                         *SpecShadowArchive  `protobuf:"bytes,97,opt,name=bubble_shadow,json=bubbleShadow" json:"bubble_shadow,omitempty"`
	BubbleShadowUndefined                                *bool               `protobuf:"varint,98,opt,name=bubble_shadow_undefined,json=bubbleShadowUndefined" json:"bubble_shadow_undefined,omitempty"`
	DefaultShadow                                        *SpecShadowArchive  `protobuf:"bytes,99,opt,name=default_shadow,json=defaultShadow" json:"default_shadow,omitempty"`
	DefaultShadowUndefined                               *bool               `protobuf:"varint,100,opt,name=default_shadow_undefined,json=defaultShadowUndefined" json:"default_shadow_undefined,omitempty"`
	LineShadow                                           *SpecShadowArchive  `protobuf:"bytes,101,opt,name=line_shadow,json=lineShadow" json:"line_shadow,omitempty"`
	LineShadowUndefined                                  *bool               `protobuf:"varint,102,opt,name=line_shadow_undefined,json=lineShadowUndefined" json:"line_shadow_undefined,omitempty"`
	MixedAreaShadow                                      *SpecShadowArchive  `protobuf:"bytes,103,opt,name=mixed_area_shadow,json=mixedAreaShadow" json:"mixed_area_shadow,omitempty"`
	MixedAreaShadowUndefined                             *bool               `protobuf:"varint,104,opt,name=mixed_area_shadow_undefined,json=mixedAreaShadowUndefined" json:"mixed_area_shadow_undefined,omitempty"`
	MixedColumnShadow                                    *SpecShadowArchive  `protobuf:"bytes,105,opt,name=mixed_column_shadow,json=mixedColumnShadow" json:"mixed_column_shadow,omitempty"`
	MixedColumnShadowUndefined                           *bool               `protobuf:"varint,106,opt,name=mixed_column_shadow_undefined,json=mixedColumnShadowUndefined" json:"mixed_column_shadow_undefined,omitempty"`
	MixedLineShadow                                      *SpecShadowArchive  `protobuf:"bytes,107,opt,name=mixed_line_shadow,json=mixedLineShadow" json:"mixed_line_shadow,omitempty"`
	MixedLineShadowUndefined                             *bool               `protobuf:"varint,108,opt,name=mixed_line_shadow_undefined,json=mixedLineShadowUndefined" json:"mixed_line_shadow_undefined,omitempty"`
	PieShadow                                            *SpecShadowArchive  `protobuf:"bytes,109,opt,name=pie_shadow,json=pieShadow" json:"pie_shadow,omitempty"`
	PieShadowUndefined                                   *bool               `protobuf:"varint,110,opt,name=pie_shadow_undefined,json=pieShadowUndefined" json:"pie_shadow_undefined,omitempty"`
	RadarAreaShadow                                      *SpecShadowArchive  `protobuf:"bytes,111,opt,name=radar_area_shadow,json=radarAreaShadow" json:"radar_area_shadow,omitempty"`
	RadarAreaShadowUndefined                             *bool               `protobuf:"varint,112,opt,name=radar_area_shadow_undefined,json=radarAreaShadowUndefined" json:"radar_area_shadow_undefined,omitempty"`
	ScatterShadow                                        *SpecShadowArchive  `protobuf:"bytes,113,opt,name=scatter_shadow,json=scatterShadow" json:"scatter_shadow,omitempty"`
	ScatterShadowUndefined                               *bool               `protobuf:"varint,114,opt,name=scatter_shadow_undefined,json=scatterShadowUndefined" json:"scatter_shadow_undefined,omitempty"`
	AreaStroke                                           *SpecStrokeArchive  `protobuf:"bytes,115,opt,name=area_stroke,json=areaStroke" json:"area_stroke,omitempty"`
	AreaStrokeUndefined                                  *bool               `protobuf:"varint,116,opt,name=area_stroke_undefined,json=areaStrokeUndefined" json:"area_stroke_undefined,omitempty"`
	BarStroke                                            *SpecStrokeArchive  `protobuf:"bytes,117,opt,name=bar_stroke,json=barStroke" json:"bar_stroke,omitempty"`
	BarStrokeUndefined                                   *bool               `protobuf:"varint,118,opt,name=bar_stroke_undefined,json=barStrokeUndefined" json:"bar_stroke_undefined,omitempty"`
	BubbleStroke                                         *SpecStrokeArchive  `protobuf:"bytes,119,opt,name=bubble_stroke,json=bubbleStroke" json:"bubble_stroke,omitempty"`
	BubbleStrokeUndefined                                *bool               `protobuf:"varint,120,opt,name=bubble_stroke_undefined,json=bubbleStrokeUndefined" json:"bubble_stroke_undefined,omitempty"`
	LineStroke                                           *SpecStrokeArchive  `protobuf:"bytes,121,opt,name=line_stroke,json=lineStroke" json:"line_stroke,omitempty"`
	LineStrokeUndefined                                  *bool               `protobuf:"varint,122,opt,name=line_stroke_undefined,json=lineStrokeUndefined" json:"line_stroke_undefined,omitempty"`
	MixedAreaStroke                                      *SpecStrokeArchive  `protobuf:"bytes,123,opt,name=mixed_area_stroke,json=mixedAreaStroke" json:"mixed_area_stroke,omitempty"`
	MixedAreaStrokeUndefined                             *bool               `protobuf:"varint,124,opt,name=mixed_area_stroke_undefined,json=mixedAreaStrokeUndefined" json:"mixed_area_stroke_undefined,omitempty"`
	MixedColumnStroke                                    *SpecStrokeArchive  `protobuf:"bytes,125,opt,name=mixed_column_stroke,json=mixedColumnStroke" json:"mixed_column_stroke,omitempty"`
	MixedColumnStrokeUndefined                           *bool               `protobuf:"varint,126,opt,name=mixed_column_stroke_undefined,json=mixedColumnStrokeUndefined" json:"mixed_column_stroke_undefined,omitempty"`
	MixedLineStroke                                      *SpecStrokeArchive  `protobuf:"bytes,127,opt,name=mixed_line_stroke,json=mixedLineStroke" json:"mixed_line_stroke,omitempty"`
	MixedLineStrokeUndefined                             *bool               `protobuf:"varint,128,opt,name=mixed_line_stroke_undefined,json=mixedLineStrokeUndefined" json:"mixed_line_stroke_undefined,omitempty"`
	PieStroke                                            *SpecStrokeArchive  `protobuf:"bytes,129,opt,name=pie_stroke,json=pieStroke" json:"pie_stroke,omitempty"`
	PieStrokeUndefined                                   *bool               `protobuf:"varint,130,opt,name=pie_stroke_undefined,json=pieStrokeUndefined" json:"pie_stroke_undefined,omitempty"`
	RadarAreaStroke                                      *SpecStrokeArchive  `protobuf:"bytes,131,opt,name=radar_area_stroke,json=radarAreaStroke" json:"radar_area_stroke,omitempty"`
	RadarAreaStrokeUndefined                             *bool               `protobuf:"varint,132,opt,name=radar_area_stroke_undefined,json=radarAreaStrokeUndefined" json:"radar_area_stroke_undefined,omitempty"`
	ScatterStroke                                        *SpecStrokeArchive  `protobuf:"bytes,133,opt,name=scatter_stroke,json=scatterStroke" json:"scatter_stroke,omitempty"`
	ScatterStrokeUndefined                               *bool               `protobuf:"varint,134,opt,name=scatter_stroke_undefined,json=scatterStrokeUndefined" json:"scatter_stroke_undefined,omitempty"`
	AreaSymbolFill                                       *SpecFillArchive    `protobuf:"bytes,135,opt,name=area_symbol_fill,json=areaSymbolFill" json:"area_symbol_fill,omitempty"`
	AreaSymbolFillUndefined                              *bool               `protobuf:"varint,136,opt,name=area_symbol_fill_undefined,json=areaSymbolFillUndefined" json:"area_symbol_fill_undefined,omitempty"`
	BubbleSymbolFill                                     *SpecFillArchive    `protobuf:"bytes,137,opt,name=bubble_symbol_fill,json=bubbleSymbolFill" json:"bubble_symbol_fill,omitempty"`
	BubbleSymbolFillUndefined                            *bool               `protobuf:"varint,138,opt,name=bubble_symbol_fill_undefined,json=bubbleSymbolFillUndefined" json:"bubble_symbol_fill_undefined,omitempty"`
	LineSymbolFill                                       *SpecFillArchive    `protobuf:"bytes,139,opt,name=line_symbol_fill,json=lineSymbolFill" json:"line_symbol_fill,omitempty"`
	LineSymbolFillUndefined                              *bool               `protobuf:"varint,140,opt,name=line_symbol_fill_undefined,json=lineSymbolFillUndefined" json:"line_symbol_fill_undefined,omitempty"`
	MixedAreaSymbolFill                                  *SpecFillArchive    `protobuf:"bytes,141,opt,name=mixed_area_symbol_fill,json=mixedAreaSymbolFill" json:"mixed_area_symbol_fill,omitempty"`
	MixedAreaSymbolFillUndefined                         *bool               `protobuf:"varint,142,opt,name=mixed_area_symbol_fill_undefined,json=mixedAreaSymbolFillUndefined" json:"mixed_area_symbol_fill_undefined,omitempty"`
	MixedLineSymbolFill                                  *SpecFillArchive    `protobuf:"bytes,143,opt,name=mixed_line_symbol_fill,json=mixedLineSymbolFill" json:"mixed_line_symbol_fill,omitempty"`
	MixedLineSymbolFillUndefined                         *bool               `protobuf:"varint,144,opt,name=mixed_line_symbol_fill_undefined,json=mixedLineSymbolFillUndefined" json:"mixed_line_symbol_fill_undefined,omitempty"`
	RadarAreaSymbolFill                                  *SpecFillArchive    `protobuf:"bytes,145,opt,name=radar_area_symbol_fill,json=radarAreaSymbolFill" json:"radar_area_symbol_fill,omitempty"`
	RadarAreaSymbolFillUndefined                         *bool               `protobuf:"varint,146,opt,name=radar_area_symbol_fill_undefined,json=radarAreaSymbolFillUndefined" json:"radar_area_symbol_fill_undefined,omitempty"`
	ScatterSymbolFill                                    *SpecFillArchive    `protobuf:"bytes,147,opt,name=scatter_symbol_fill,json=scatterSymbolFill" json:"scatter_symbol_fill,omitempty"`
	ScatterSymbolFillUndefined                           *bool               `protobuf:"varint,148,opt,name=scatter_symbol_fill_undefined,json=scatterSymbolFillUndefined" json:"scatter_symbol_fill_undefined,omitempty"`
	AreaSymbolFillUseSeriesFill                          *SpecBoolArchive    `protobuf:"bytes,149,opt,name=area_symbol_fill_use_series_fill,json=areaSymbolFillUseSeriesFill" json:"area_symbol_fill_use_series_fill,omitempty"`
	AreaSymbolFillUseSeriesFillUndefined                 *bool               `protobuf:"varint,150,opt,name=area_symbol_fill_use_series_fill_undefined,json=areaSymbolFillUseSeriesFillUndefined" json:"area_symbol_fill_use_series_fill_undefined,omitempty"`
	LineSymbolFillUseSeriesFill                          *SpecBoolArchive    `protobuf:"bytes,151,opt,name=line_symbol_fill_use_series_fill,json=lineSymbolFillUseSeriesFill" json:"line_symbol_fill_use_series_fill,omitempty"`
	LineSymbolFillUseSeriesFillUndefined                 *bool               `protobuf:"varint,152,opt,name=line_symbol_fill_use_series_fill_undefined,json=lineSymbolFillUseSeriesFillUndefined" json:"line_symbol_fill_use_series_fill_undefined,omitempty"`
	MixedAreaSymbolFillUseSeriesFill                     *SpecBoolArchive    `protobuf:"bytes,153,opt,name=mixed_area_symbol_fill_use_series_fill,json=mixedAreaSymbolFillUseSeriesFill" json:"mixed_area_symbol_fill_use_series_fill,omitempty"`
	MixedAreaSymbolFillUseSeriesFillUndefined            *bool               `protobuf:"varint,154,opt,name=mixed_area_symbol_fill_use_series_fill_undefined,json=mixedAreaSymbolFillUseSeriesFillUndefined" json:"mixed_area_symbol_fill_use_series_fill_undefined,omitempty"`
	MixedLineSymbolFillUseSeriesFill                     *SpecBoolArchive    `protobuf:"bytes,155,opt,name=mixed_line_symbol_fill_use_series_fill,json=mixedLineSymbolFillUseSeriesFill" json:"mixed_line_symbol_fill_use_series_fill,omitempty"`
	MixedLineSymbolFillUseSeriesFillUndefined            *bool               `protobuf:"varint,156,opt,name=mixed_line_symbol_fill_use_series_fill_undefined,json=mixedLineSymbolFillUseSeriesFillUndefined" json:"mixed_line_symbol_fill_use_series_fill_undefined,omitempty"`
	RadarAreaSymbolFillUseSeriesFill                     *SpecBoolArchive    `protobuf:"bytes,157,opt,name=radar_area_symbol_fill_use_series_fill,json=radarAreaSymbolFillUseSeriesFill" json:"radar_area_symbol_fill_use_series_fill,omitempty"`
	RadarAreaSymbolFillUseSeriesFillUndefined            *bool               `protobuf:"varint,158,opt,name=radar_area_symbol_fill_use_series_fill_undefined,json=radarAreaSymbolFillUseSeriesFillUndefined" json:"radar_area_symbol_fill_use_series_fill_undefined,omitempty"`
	AreaSymbolFillUseSeriesStroke                        *SpecBoolArchive    `protobuf:"bytes,159,opt,name=area_symbol_fill_use_series_stroke,json=areaSymbolFillUseSeriesStroke" json:"area_symbol_fill_use_series_stroke,omitempty"`
	AreaSymbolFillUseSeriesStrokeUndefined               *bool               `protobuf:"varint,160,opt,name=area_symbol_fill_use_series_stroke_undefined,json=areaSymbolFillUseSeriesStrokeUndefined" json:"area_symbol_fill_use_series_stroke_undefined,omitempty"`
	BubbleSymbolFillUseSeriesStroke                      *SpecBoolArchive    `protobuf:"bytes,161,opt,name=bubble_symbol_fill_use_series_stroke,json=bubbleSymbolFillUseSeriesStroke" json:"bubble_symbol_fill_use_series_stroke,omitempty"`
	BubbleSymbolFillUseSeriesStrokeUndefined             *bool               `protobuf:"varint,162,opt,name=bubble_symbol_fill_use_series_stroke_undefined,json=bubbleSymbolFillUseSeriesStrokeUndefined" json:"bubble_symbol_fill_use_series_stroke_undefined,omitempty"`
	LineSymbolFillUseSeriesStroke                        *SpecBoolArchive    `protobuf:"bytes,163,opt,name=line_symbol_fill_use_series_stroke,json=lineSymbolFillUseSeriesStroke" json:"line_symbol_fill_use_series_stroke,omitempty"`
	LineSymbolFillUseSeriesStrokeUndefined               *bool               `protobuf:"varint,164,opt,name=line_symbol_fill_use_series_stroke_undefined,json=lineSymbolFillUseSeriesStrokeUndefined" json:"line_symbol_fill_use_series_stroke_undefined,omitempty"`
	MixedAreaSymbolFillUseSeriesStroke                   *SpecBoolArchive    `protobuf:"bytes,165,opt,name=mixed_area_symbol_fill_use_series_stroke,json=mixedAreaSymbolFillUseSeriesStroke" json:"mixed_area_symbol_fill_use_series_stroke,omitempty"`
	MixedAreaSymbolFillUseSeriesStrokeUndefined          *bool               `protobuf:"varint,166,opt,name=mixed_area_symbol_fill_use_series_stroke_undefined,json=mixedAreaSymbolFillUseSeriesStrokeUndefined" json:"mixed_area_symbol_fill_use_series_stroke_undefined,omitempty"`
	MixedLineSymbolFillUseSeriesStroke                   *SpecBoolArchive    `protobuf:"bytes,167,opt,name=mixed_line_symbol_fill_use_series_stroke,json=mixedLineSymbolFillUseSeriesStroke" json:"mixed_line_symbol_fill_use_series_stroke,omitempty"`
	MixedLineSymbolFillUseSeriesStrokeUndefined          *bool               `protobuf:"varint,168,opt,name=mixed_line_symbol_fill_use_series_stroke_undefined,json=mixedLineSymbolFillUseSeriesStrokeUndefined" json:"mixed_line_symbol_fill_use_series_stroke_undefined,omitempty"`
	RadarAreaSymbolFillUseSeriesStroke                   *SpecBoolArchive    `protobuf:"bytes,169,opt,name=radar_area_symbol_fill_use_series_stroke,json=radarAreaSymbolFillUseSeriesStroke" json:"radar_area_symbol_fill_use_series_stroke,omitempty"`
	RadarAreaSymbolFillUseSeriesStrokeUndefined          *bool               `protobuf:"varint,170,opt,name=radar_area_symbol_fill_use_series_stroke_undefined,json=radarAreaSymbolFillUseSeriesStrokeUndefined" json:"radar_area_symbol_fill_use_series_stroke_undefined,omitempty"`
	ScatterSymbolFillUseSeriesStroke                     *SpecBoolArchive    `protobuf:"bytes,171,opt,name=scatter_symbol_fill_use_series_stroke,json=scatterSymbolFillUseSeriesStroke" json:"scatter_symbol_fill_use_series_stroke,omitempty"`
	ScatterSymbolFillUseSeriesStrokeUndefined            *bool               `protobuf:"varint,172,opt,name=scatter_symbol_fill_use_series_stroke_undefined,json=scatterSymbolFillUseSeriesStrokeUndefined" json:"scatter_symbol_fill_use_series_stroke_undefined,omitempty"`
	AreaSymbolSize                                       *SpecDoubleArchive  `protobuf:"bytes,173,opt,name=area_symbol_size,json=areaSymbolSize" json:"area_symbol_size,omitempty"`
	AreaSymbolSizeUndefined                              *bool               `protobuf:"varint,174,opt,name=area_symbol_size_undefined,json=areaSymbolSizeUndefined" json:"area_symbol_size_undefined,omitempty"`
	LineSymbolSize                                       *SpecDoubleArchive  `protobuf:"bytes,175,opt,name=line_symbol_size,json=lineSymbolSize" json:"line_symbol_size,omitempty"`
	LineSymbolSizeUndefined                              *bool               `protobuf:"varint,176,opt,name=line_symbol_size_undefined,json=lineSymbolSizeUndefined" json:"line_symbol_size_undefined,omitempty"`
	MixedAreaSymbolSize                                  *SpecDoubleArchive  `protobuf:"bytes,177,opt,name=mixed_area_symbol_size,json=mixedAreaSymbolSize" json:"mixed_area_symbol_size,omitempty"`
	MixedAreaSymbolSizeUndefined                         *bool               `protobuf:"varint,178,opt,name=mixed_area_symbol_size_undefined,json=mixedAreaSymbolSizeUndefined" json:"mixed_area_symbol_size_undefined,omitempty"`
	MixedLineSymbolSize                                  *SpecDoubleArchive  `protobuf:"bytes,179,opt,name=mixed_line_symbol_size,json=mixedLineSymbolSize" json:"mixed_line_symbol_size,omitempty"`
	MixedLineSymbolSizeUndefined                         *bool               `protobuf:"varint,180,opt,name=mixed_line_symbol_size_undefined,json=mixedLineSymbolSizeUndefined" json:"mixed_line_symbol_size_undefined,omitempty"`
	RadarAreaSymbolSize                                  *SpecDoubleArchive  `protobuf:"bytes,181,opt,name=radar_area_symbol_size,json=radarAreaSymbolSize" json:"radar_area_symbol_size,omitempty"`
	RadarAreaSymbolSizeUndefined                         *bool               `protobuf:"varint,182,opt,name=radar_area_symbol_size_undefined,json=radarAreaSymbolSizeUndefined" json:"radar_area_symbol_size_undefined,omitempty"`
	ScatterSymbolSize                                    *SpecDoubleArchive  `protobuf:"bytes,183,opt,name=scatter_symbol_size,json=scatterSymbolSize" json:"scatter_symbol_size,omitempty"`
	ScatterSymbolSizeUndefined                           *bool               `protobuf:"varint,184,opt,name=scatter_symbol_size_undefined,json=scatterSymbolSizeUndefined" json:"scatter_symbol_size_undefined,omitempty"`
	AreaSymbolStroke                                     *SpecStrokeArchive  `protobuf:"bytes,185,opt,name=area_symbol_stroke,json=areaSymbolStroke" json:"area_symbol_stroke,omitempty"`
	AreaSymbolStrokeUndefined                            *bool               `protobuf:"varint,186,opt,name=area_symbol_stroke_undefined,json=areaSymbolStrokeUndefined" json:"area_symbol_stroke_undefined,omitempty"`
	BubbleSymbolStroke                                   *SpecStrokeArchive  `protobuf:"bytes,187,opt,name=bubble_symbol_stroke,json=bubbleSymbolStroke" json:"bubble_symbol_stroke,omitempty"`
	BubbleSymbolStrokeUndefined                          *bool               `protobuf:"varint,188,opt,name=bubble_symbol_stroke_undefined,json=bubbleSymbolStrokeUndefined" json:"bubble_symbol_stroke_undefined,omitempty"`
	LineSymbolStroke                                     *SpecStrokeArchive  `protobuf:"bytes,189,opt,name=line_symbol_stroke,json=lineSymbolStroke" json:"line_symbol_stroke,omitempty"`
	LineSymbolStrokeUndefined                            *bool               `protobuf:"varint,190,opt,name=line_symbol_stroke_undefined,json=lineSymbolStrokeUndefined" json:"line_symbol_stroke_undefined,omitempty"`
	MixedAreaSymbolStroke                                *SpecStrokeArchive  `protobuf:"bytes,191,opt,name=mixed_area_symbol_stroke,json=mixedAreaSymbolStroke" json:"mixed_area_symbol_stroke,omitempty"`
	MixedAreaSymbolStrokeUndefined                       *bool               `protobuf:"varint,192,opt,name=mixed_area_symbol_stroke_undefined,json=mixedAreaSymbolStrokeUndefined" json:"mixed_area_symbol_stroke_undefined,omitempty"`
	MixedLineSymbolStroke                                *SpecStrokeArchive  `protobuf:"bytes,193,opt,name=mixed_line_symbol_stroke,json=mixedLineSymbolStroke" json:"mixed_line_symbol_stroke,omitempty"`
	MixedLineSymbolStrokeUndefined                       *bool               `protobuf:"varint,194,opt,name=mixed_line_symbol_stroke_undefined,json=mixedLineSymbolStrokeUndefined" json:"mixed_line_symbol_stroke_undefined,omitempty"`
	RadarAreaSymbolStroke                                *SpecStrokeArchive  `protobuf:"bytes,195,opt,name=radar_area_symbol_stroke,json=radarAreaSymbolStroke" json:"radar_area_symbol_stroke,omitempty"`
	RadarAreaSymbolStrokeUndefined                       *bool               `protobuf:"varint,196,opt,name=radar_area_symbol_stroke_undefined,json=radarAreaSymbolStrokeUndefined" json:"radar_area_symbol_stroke_undefined,omitempty"`
	ScatterSymbolStroke                                  *SpecStrokeArchive  `protobuf:"bytes,197,opt,name=scatter_symbol_stroke,json=scatterSymbolStroke" json:"scatter_symbol_stroke,omitempty"`
	ScatterSymbolStrokeUndefined                         *bool               `protobuf:"varint,198,opt,name=scatter_symbol_stroke_undefined,json=scatterSymbolStrokeUndefined" json:"scatter_symbol_stroke_undefined,omitempty"`
	DefaultTrendLineShadow                               *SpecShadowArchive  `protobuf:"bytes,199,opt,name=default_trend_line_shadow,json=defaultTrendLineShadow" json:"default_trend_line_shadow,omitempty"`
	DefaultTrendLineShadowUndefined                      *bool               `protobuf:"varint,200,opt,name=default_trend_line_shadow_undefined,json=defaultTrendLineShadowUndefined" json:"default_trend_line_shadow_undefined,omitempty"`
	DefaultTrendLineStroke                               *SpecStrokeArchive  `protobuf:"bytes,201,opt,name=default_trend_line_stroke,json=defaultTrendLineStroke" json:"default_trend_line_stroke,omitempty"`
	DefaultTrendLineStrokeUndefined                      *bool               `protobuf:"varint,202,opt,name=default_trend_line_stroke_undefined,json=defaultTrendLineStrokeUndefined" json:"default_trend_line_stroke_undefined,omitempty"`
	DefaultTrendlineEquationOpacity                      *SpecDoubleArchive  `protobuf:"bytes,203,opt,name=default_trendline_equation_opacity,json=defaultTrendlineEquationOpacity" json:"default_trendline_equation_opacity,omitempty"`
	DefaultTrendlineEquationOpacityUndefined             *bool               `protobuf:"varint,204,opt,name=default_trendline_equation_opacity_undefined,json=defaultTrendlineEquationOpacityUndefined" json:"default_trendline_equation_opacity_undefined,omitempty"`
	DefaultTrendlineEquationParagraphStyleIndex          *SpecIntegerArchive `protobuf:"bytes,205,opt,name=default_trendline_equation_paragraph_style_index,json=defaultTrendlineEquationParagraphStyleIndex" json:"default_trendline_equation_paragraph_style_index,omitempty"`
	DefaultTrendlineEquationParagraphStyleIndexUndefined *bool               `protobuf:"varint,206,opt,name=default_trendline_equation_paragraph_style_index_undefined,json=defaultTrendlineEquationParagraphStyleIndexUndefined" json:"default_trendline_equation_paragraph_style_index_undefined,omitempty"`
	DefaultTrendlineRSquaredOpacity                      *SpecDoubleArchive  `protobuf:"bytes,207,opt,name=default_trendline_r_squared_opacity,json=defaultTrendlineRSquaredOpacity" json:"default_trendline_r_squared_opacity,omitempty"`
	DefaultTrendlineRSquaredOpacityUndefined             *bool               `protobuf:"varint,208,opt,name=default_trendline_r_squared_opacity_undefined,json=defaultTrendlineRSquaredOpacityUndefined" json:"default_trendline_r_squared_opacity_undefined,omitempty"`
	DefaultTrendlineRSquaredParagraphStyleIndex          *SpecIntegerArchive `protobuf:"bytes,209,opt,name=default_trendline_r_squared_paragraph_style_index,json=defaultTrendlineRSquaredParagraphStyleIndex" json:"default_trendline_r_squared_paragraph_style_index,omitempty"`
	DefaultTrendlineRSquaredParagraphStyleIndexUndefined *bool               `protobuf:"varint,210,opt,name=default_trendline_r_squared_paragraph_style_index_undefined,json=defaultTrendlineRSquaredParagraphStyleIndexUndefined" json:"default_trendline_r_squared_paragraph_style_index_undefined,omitempty"`
	AreaValueLabelPosition                               *SpecIntegerArchive `protobuf:"bytes,211,opt,name=area_value_label_position,json=areaValueLabelPosition" json:"area_value_label_position,omitempty"`
	AreaValueLabelPositionUndefined                      *bool               `protobuf:"varint,212,opt,name=area_value_label_position_undefined,json=areaValueLabelPositionUndefined" json:"area_value_label_position_undefined,omitempty"`
	BarValueLabelPosition                                *SpecIntegerArchive `protobuf:"bytes,213,opt,name=bar_value_label_position,json=barValueLabelPosition" json:"bar_value_label_position,omitempty"`
	BarValueLabelPositionUndefined                       *bool               `protobuf:"varint,214,opt,name=bar_value_label_position_undefined,json=barValueLabelPositionUndefined" json:"bar_value_label_position_undefined,omitempty"`
	BubbleValueLabelPosition                             *SpecIntegerArchive `protobuf:"bytes,215,opt,name=bubble_value_label_position,json=bubbleValueLabelPosition" json:"bubble_value_label_position,omitempty"`
	BubbleValueLabelPositionUndefined                    *bool               `protobuf:"varint,216,opt,name=bubble_value_label_position_undefined,json=bubbleValueLabelPositionUndefined" json:"bubble_value_label_position_undefined,omitempty"`
	DefaultValueLabelPosition                            *SpecIntegerArchive `protobuf:"bytes,217,opt,name=default_value_label_position,json=defaultValueLabelPosition" json:"default_value_label_position,omitempty"`
	DefaultValueLabelPositionUndefined                   *bool               `protobuf:"varint,218,opt,name=default_value_label_position_undefined,json=defaultValueLabelPositionUndefined" json:"default_value_label_position_undefined,omitempty"`
	LineValueLabelPosition                               *SpecIntegerArchive `protobuf:"bytes,219,opt,name=line_value_label_position,json=lineValueLabelPosition" json:"line_value_label_position,omitempty"`
	LineValueLabelPositionUndefined                      *bool               `protobuf:"varint,220,opt,name=line_value_label_position_undefined,json=lineValueLabelPositionUndefined" json:"line_value_label_position_undefined,omitempty"`
	MixedAreaValueLabelPosition                          *SpecIntegerArchive `protobuf:"bytes,221,opt,name=mixed_area_value_label_position,json=mixedAreaValueLabelPosition" json:"mixed_area_value_label_position,omitempty"`
	MixedAreaValueLabelPositionUndefined                 *bool               `protobuf:"varint,222,opt,name=mixed_area_value_label_position_undefined,json=mixedAreaValueLabelPositionUndefined" json:"mixed_area_value_label_position_undefined,omitempty"`
	MixedColumnValueLabelPosition                        *SpecIntegerArchive `protobuf:"bytes,223,opt,name=mixed_column_value_label_position,json=mixedColumnValueLabelPosition" json:"mixed_column_value_label_position,omitempty"`
	MixedColumnValueLabelPositionUndefined               *bool               `protobuf:"varint,224,opt,name=mixed_column_value_label_position_undefined,json=mixedColumnValueLabelPositionUndefined" json:"mixed_column_value_label_position_undefined,omitempty"`
	MixedLineValueLabelPosition                          *SpecIntegerArchive `protobuf:"bytes,225,opt,name=mixed_line_value_label_position,json=mixedLineValueLabelPosition" json:"mixed_line_value_label_position,omitempty"`
	MixedLineValueLabelPositionUndefined                 *bool               `protobuf:"varint,226,opt,name=mixed_line_value_label_position_undefined,json=mixedLineValueLabelPositionUndefined" json:"mixed_line_value_label_position_undefined,omitempty"`
	RadarAreaValueLabelPosition                          *SpecIntegerArchive `protobuf:"bytes,227,opt,name=radar_area_value_label_position,json=radarAreaValueLabelPosition" json:"radar_area_value_label_position,omitempty"`
	RadarAreaValueLabelPositionUndefined                 *bool               `protobuf:"varint,228,opt,name=radar_area_value_label_position_undefined,json=radarAreaValueLabelPositionUndefined" json:"radar_area_value_label_position_undefined,omitempty"`
	ScatterValueLabelPosition                            *SpecIntegerArchive `protobuf:"bytes,229,opt,name=scatter_value_label_position,json=scatterValueLabelPosition" json:"scatter_value_label_position,omitempty"`
	ScatterValueLabelPositionUndefined                   *bool               `protobuf:"varint,230,opt,name=scatter_value_label_position_undefined,json=scatterValueLabelPositionUndefined" json:"scatter_value_label_position_undefined,omitempty"`
	StackedAreaValueLabelPosition                        *SpecIntegerArchive `protobuf:"bytes,231,opt,name=stacked_area_value_label_position,json=stackedAreaValueLabelPosition" json:"stacked_area_value_label_position,omitempty"`
	StackedAreaValueLabelPositionUndefined               *bool               `protobuf:"varint,232,opt,name=stacked_area_value_label_position_undefined,json=stackedAreaValueLabelPositionUndefined" json:"stacked_area_value_label_position_undefined,omitempty"`
	StackedBarValueLabelPosition                         *SpecIntegerArchive `protobuf:"bytes,233,opt,name=stacked_bar_value_label_position,json=stackedBarValueLabelPosition" json:"stacked_bar_value_label_position,omitempty"`
	StackedBarValueLabelPositionUndefined                *bool               `protobuf:"varint,234,opt,name=stacked_bar_value_label_position_undefined,json=stackedBarValueLabelPositionUndefined" json:"stacked_bar_value_label_position_undefined,omitempty"`
	DefaultValueLabelSpacing                             *SpecIntegerArchive `protobuf:"bytes,235,opt,name=default_value_label_spacing,json=defaultValueLabelSpacing" json:"default_value_label_spacing,omitempty"`
	DefaultValueLabelSpacingUndefined                    *bool               `protobuf:"varint,236,opt,name=default_value_label_spacing_undefined,json=defaultValueLabelSpacingUndefined" json:"default_value_label_spacing_undefined,omitempty"`
}

func (x *ChartSeriesStylePropertyChangeSetArchive) Reset() {
	*x = ChartSeriesStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartSeriesStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartSeriesStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartSeriesStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartSeriesStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartSeriesStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{20}
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineEndLineEnd() *SpecLineEndArchive {
	if x != nil {
		return x.DefaultCalloutLineEndLineEnd
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineEndLineEndUndefined() bool {
	if x != nil && x.DefaultCalloutLineEndLineEndUndefined != nil {
		return *x.DefaultCalloutLineEndLineEndUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineStartLineEnd() *SpecLineEndArchive {
	if x != nil {
		return x.DefaultCalloutLineStartLineEnd
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineStartLineEndUndefined() bool {
	if x != nil && x.DefaultCalloutLineStartLineEndUndefined != nil {
		return *x.DefaultCalloutLineStartLineEndUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineStrokeStyle() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultCalloutLineStrokeStyle
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultCalloutLineStrokeStyleUndefined() bool {
	if x != nil && x.DefaultCalloutLineStrokeStyleUndefined != nil {
		return *x.DefaultCalloutLineStrokeStyleUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarLineEnd() *SpecLineEndArchive {
	if x != nil {
		return x.DefaultErrorBarLineEnd
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarLineEndUndefined() bool {
	if x != nil && x.DefaultErrorBarLineEndUndefined != nil {
		return *x.DefaultErrorBarLineEndUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarLineEndScatterX() *SpecLineEndArchive {
	if x != nil {
		return x.DefaultErrorBarLineEndScatterX
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarLineEndScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarLineEndScatterXUndefined != nil {
		return *x.DefaultErrorBarLineEndScatterXUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultErrorBarShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarShadowUndefined() bool {
	if x != nil && x.DefaultErrorBarShadowUndefined != nil {
		return *x.DefaultErrorBarShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarSpacing() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarSpacing
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarSpacingUndefined() bool {
	if x != nil && x.DefaultErrorBarSpacingUndefined != nil {
		return *x.DefaultErrorBarSpacingUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarSpacingScatterX() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultErrorBarSpacingScatterX
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarSpacingScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarSpacingScatterXUndefined != nil {
		return *x.DefaultErrorBarSpacingScatterXUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultErrorBarStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarStrokeUndefined() bool {
	if x != nil && x.DefaultErrorBarStrokeUndefined != nil {
		return *x.DefaultErrorBarStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarStrokeScatterX() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultErrorBarStrokeScatterX
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultErrorBarStrokeScatterXUndefined() bool {
	if x != nil && x.DefaultErrorBarStrokeScatterXUndefined != nil {
		return *x.DefaultErrorBarStrokeScatterXUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetArea3DFill() *SpecFillArchive {
	if x != nil {
		return x.Area3DFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetArea3DFillUndefined() bool {
	if x != nil && x.Area3DFillUndefined != nil {
		return *x.Area3DFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBar3DFill() *SpecFillArchive {
	if x != nil {
		return x.Bar3DFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBar3DFillUndefined() bool {
	if x != nil && x.Bar3DFillUndefined != nil {
		return *x.Bar3DFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumn3DFill() *SpecFillArchive {
	if x != nil {
		return x.Column3DFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumn3DFillUndefined() bool {
	if x != nil && x.Column3DFillUndefined != nil {
		return *x.Column3DFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLine3DFill() *SpecFillArchive {
	if x != nil {
		return x.Line3DFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLine3DFillUndefined() bool {
	if x != nil && x.Line3DFillUndefined != nil {
		return *x.Line3DFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPie3DFill() *SpecFillArchive {
	if x != nil {
		return x.Pie3DFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPie3DFillUndefined() bool {
	if x != nil && x.Pie3DFillUndefined != nil {
		return *x.Pie3DFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaFill() *SpecFillArchive {
	if x != nil {
		return x.AreaFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaFillUndefined() bool {
	if x != nil && x.AreaFillUndefined != nil {
		return *x.AreaFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarFill() *SpecFillArchive {
	if x != nil {
		return x.BarFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarFillUndefined() bool {
	if x != nil && x.BarFillUndefined != nil {
		return *x.BarFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumnFill() *SpecFillArchive {
	if x != nil {
		return x.ColumnFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumnFillUndefined() bool {
	if x != nil && x.ColumnFillUndefined != nil {
		return *x.ColumnFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultFill() *SpecFillArchive {
	if x != nil {
		return x.DefaultFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultFillUndefined() bool {
	if x != nil && x.DefaultFillUndefined != nil {
		return *x.DefaultFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaFill() *SpecFillArchive {
	if x != nil {
		return x.MixedAreaFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaFillUndefined() bool {
	if x != nil && x.MixedAreaFillUndefined != nil {
		return *x.MixedAreaFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnFill() *SpecFillArchive {
	if x != nil {
		return x.MixedColumnFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnFillUndefined() bool {
	if x != nil && x.MixedColumnFillUndefined != nil {
		return *x.MixedColumnFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieFill() *SpecFillArchive {
	if x != nil {
		return x.PieFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieFillUndefined() bool {
	if x != nil && x.PieFillUndefined != nil {
		return *x.PieFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFill() *SpecFillArchive {
	if x != nil {
		return x.RadarAreaFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFillUndefined() bool {
	if x != nil && x.RadarAreaFillUndefined != nil {
		return *x.RadarAreaFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFillUseSeriesStrokeAlphaMultiplier() *SpecDoubleArchive {
	if x != nil {
		return x.RadarAreaFillUseSeriesStrokeAlphaMultiplier
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFillUseSeriesStrokeAlphaMultiplierUndefined() bool {
	if x != nil && x.RadarAreaFillUseSeriesStrokeAlphaMultiplierUndefined != nil {
		return *x.RadarAreaFillUseSeriesStrokeAlphaMultiplierUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.RadarAreaFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.RadarAreaFillUseSeriesStrokeUndefined != nil {
		return *x.RadarAreaFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.AreaLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.AreaLabelParagraphStyleIndexUndefined != nil {
		return *x.AreaLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.BarLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.BarLabelParagraphStyleIndexUndefined != nil {
		return *x.BarLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDonutLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DonutLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDonutLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DonutLabelParagraphStyleIndexUndefined != nil {
		return *x.DonutLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.LineLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.LineLabelParagraphStyleIndexUndefined != nil {
		return *x.LineLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.MixedLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.MixedLabelParagraphStyleIndexUndefined != nil {
		return *x.MixedLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.PieLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.PieLabelParagraphStyleIndexUndefined != nil {
		return *x.PieLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.RadarLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.RadarLabelParagraphStyleIndexUndefined != nil {
		return *x.RadarLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultOpacity
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultOpacityUndefined() bool {
	if x != nil && x.DefaultOpacityUndefined != nil {
		return *x.DefaultOpacityUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.AreaOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.AreaOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.AreaOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.BarOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.BarOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.BarOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.DefaultOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDonutOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DonutOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDonutOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.DonutOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.DonutOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.MixedOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.MixedOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.MixedOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.PieOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.PieOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.PieOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarOutsideLabelParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.RadarOutsideLabelParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarOutsideLabelParagraphStyleIndexUndefined() bool {
	if x != nil && x.RadarOutsideLabelParagraphStyleIndexUndefined != nil {
		return *x.RadarOutsideLabelParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetArea3DShadow() *SpecShadowArchive {
	if x != nil {
		return x.Area3DShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetArea3DShadowUndefined() bool {
	if x != nil && x.Area3DShadowUndefined != nil {
		return *x.Area3DShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBar3DShadow() *SpecShadowArchive {
	if x != nil {
		return x.Bar3DShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBar3DShadowUndefined() bool {
	if x != nil && x.Bar3DShadowUndefined != nil {
		return *x.Bar3DShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumn3DShadow() *SpecShadowArchive {
	if x != nil {
		return x.Column3DShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetColumn3DShadowUndefined() bool {
	if x != nil && x.Column3DShadowUndefined != nil {
		return *x.Column3DShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLine3DShadow() *SpecShadowArchive {
	if x != nil {
		return x.Line3DShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLine3DShadowUndefined() bool {
	if x != nil && x.Line3DShadowUndefined != nil {
		return *x.Line3DShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPie3DShadow() *SpecShadowArchive {
	if x != nil {
		return x.Pie3DShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPie3DShadowUndefined() bool {
	if x != nil && x.Pie3DShadowUndefined != nil {
		return *x.Pie3DShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaShadow() *SpecShadowArchive {
	if x != nil {
		return x.AreaShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaShadowUndefined() bool {
	if x != nil && x.AreaShadowUndefined != nil {
		return *x.AreaShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarShadow() *SpecShadowArchive {
	if x != nil {
		return x.BarShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarShadowUndefined() bool {
	if x != nil && x.BarShadowUndefined != nil {
		return *x.BarShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleShadow() *SpecShadowArchive {
	if x != nil {
		return x.BubbleShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleShadowUndefined() bool {
	if x != nil && x.BubbleShadowUndefined != nil {
		return *x.BubbleShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultShadowUndefined() bool {
	if x != nil && x.DefaultShadowUndefined != nil {
		return *x.DefaultShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineShadow() *SpecShadowArchive {
	if x != nil {
		return x.LineShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineShadowUndefined() bool {
	if x != nil && x.LineShadowUndefined != nil {
		return *x.LineShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaShadow() *SpecShadowArchive {
	if x != nil {
		return x.MixedAreaShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaShadowUndefined() bool {
	if x != nil && x.MixedAreaShadowUndefined != nil {
		return *x.MixedAreaShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnShadow() *SpecShadowArchive {
	if x != nil {
		return x.MixedColumnShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnShadowUndefined() bool {
	if x != nil && x.MixedColumnShadowUndefined != nil {
		return *x.MixedColumnShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineShadow() *SpecShadowArchive {
	if x != nil {
		return x.MixedLineShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineShadowUndefined() bool {
	if x != nil && x.MixedLineShadowUndefined != nil {
		return *x.MixedLineShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieShadow() *SpecShadowArchive {
	if x != nil {
		return x.PieShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieShadowUndefined() bool {
	if x != nil && x.PieShadowUndefined != nil {
		return *x.PieShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaShadow() *SpecShadowArchive {
	if x != nil {
		return x.RadarAreaShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaShadowUndefined() bool {
	if x != nil && x.RadarAreaShadowUndefined != nil {
		return *x.RadarAreaShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterShadow() *SpecShadowArchive {
	if x != nil {
		return x.ScatterShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterShadowUndefined() bool {
	if x != nil && x.ScatterShadowUndefined != nil {
		return *x.ScatterShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaStroke() *SpecStrokeArchive {
	if x != nil {
		return x.AreaStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaStrokeUndefined() bool {
	if x != nil && x.AreaStrokeUndefined != nil {
		return *x.AreaStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BarStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarStrokeUndefined() bool {
	if x != nil && x.BarStrokeUndefined != nil {
		return *x.BarStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BubbleStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleStrokeUndefined() bool {
	if x != nil && x.BubbleStrokeUndefined != nil {
		return *x.BubbleStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.LineStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineStrokeUndefined() bool {
	if x != nil && x.LineStrokeUndefined != nil {
		return *x.LineStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaStroke() *SpecStrokeArchive {
	if x != nil {
		return x.MixedAreaStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaStrokeUndefined() bool {
	if x != nil && x.MixedAreaStrokeUndefined != nil {
		return *x.MixedAreaStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnStroke() *SpecStrokeArchive {
	if x != nil {
		return x.MixedColumnStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnStrokeUndefined() bool {
	if x != nil && x.MixedColumnStrokeUndefined != nil {
		return *x.MixedColumnStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.MixedLineStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineStrokeUndefined() bool {
	if x != nil && x.MixedLineStrokeUndefined != nil {
		return *x.MixedLineStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieStroke() *SpecStrokeArchive {
	if x != nil {
		return x.PieStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetPieStrokeUndefined() bool {
	if x != nil && x.PieStrokeUndefined != nil {
		return *x.PieStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaStroke() *SpecStrokeArchive {
	if x != nil {
		return x.RadarAreaStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaStrokeUndefined() bool {
	if x != nil && x.RadarAreaStrokeUndefined != nil {
		return *x.RadarAreaStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterStroke() *SpecStrokeArchive {
	if x != nil {
		return x.ScatterStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterStrokeUndefined() bool {
	if x != nil && x.ScatterStrokeUndefined != nil {
		return *x.ScatterStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.AreaSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFillUndefined() bool {
	if x != nil && x.AreaSymbolFillUndefined != nil {
		return *x.AreaSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.BubbleSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolFillUndefined() bool {
	if x != nil && x.BubbleSymbolFillUndefined != nil {
		return *x.BubbleSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.LineSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFillUndefined() bool {
	if x != nil && x.LineSymbolFillUndefined != nil {
		return *x.LineSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.MixedAreaSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFillUndefined() bool {
	if x != nil && x.MixedAreaSymbolFillUndefined != nil {
		return *x.MixedAreaSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.MixedLineSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFillUndefined() bool {
	if x != nil && x.MixedLineSymbolFillUndefined != nil {
		return *x.MixedLineSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.RadarAreaSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFillUndefined() bool {
	if x != nil && x.RadarAreaSymbolFillUndefined != nil {
		return *x.RadarAreaSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolFill() *SpecFillArchive {
	if x != nil {
		return x.ScatterSymbolFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolFillUndefined() bool {
	if x != nil && x.ScatterSymbolFillUndefined != nil {
		return *x.ScatterSymbolFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFillUseSeriesFill() *SpecBoolArchive {
	if x != nil {
		return x.AreaSymbolFillUseSeriesFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFillUseSeriesFillUndefined() bool {
	if x != nil && x.AreaSymbolFillUseSeriesFillUndefined != nil {
		return *x.AreaSymbolFillUseSeriesFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFillUseSeriesFill() *SpecBoolArchive {
	if x != nil {
		return x.LineSymbolFillUseSeriesFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFillUseSeriesFillUndefined() bool {
	if x != nil && x.LineSymbolFillUseSeriesFillUndefined != nil {
		return *x.LineSymbolFillUseSeriesFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFillUseSeriesFill() *SpecBoolArchive {
	if x != nil {
		return x.MixedAreaSymbolFillUseSeriesFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFillUseSeriesFillUndefined() bool {
	if x != nil && x.MixedAreaSymbolFillUseSeriesFillUndefined != nil {
		return *x.MixedAreaSymbolFillUseSeriesFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFillUseSeriesFill() *SpecBoolArchive {
	if x != nil {
		return x.MixedLineSymbolFillUseSeriesFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFillUseSeriesFillUndefined() bool {
	if x != nil && x.MixedLineSymbolFillUseSeriesFillUndefined != nil {
		return *x.MixedLineSymbolFillUseSeriesFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFillUseSeriesFill() *SpecBoolArchive {
	if x != nil {
		return x.RadarAreaSymbolFillUseSeriesFill
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFillUseSeriesFillUndefined() bool {
	if x != nil && x.RadarAreaSymbolFillUseSeriesFillUndefined != nil {
		return *x.RadarAreaSymbolFillUseSeriesFillUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.AreaSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.AreaSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.AreaSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.BubbleSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.BubbleSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.BubbleSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.LineSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.LineSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.LineSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.MixedAreaSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.MixedAreaSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.MixedAreaSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.MixedLineSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.MixedLineSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.MixedLineSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.RadarAreaSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.RadarAreaSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.RadarAreaSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolFillUseSeriesStroke() *SpecBoolArchive {
	if x != nil {
		return x.ScatterSymbolFillUseSeriesStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolFillUseSeriesStrokeUndefined() bool {
	if x != nil && x.ScatterSymbolFillUseSeriesStrokeUndefined != nil {
		return *x.ScatterSymbolFillUseSeriesStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.AreaSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolSizeUndefined() bool {
	if x != nil && x.AreaSymbolSizeUndefined != nil {
		return *x.AreaSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.LineSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolSizeUndefined() bool {
	if x != nil && x.LineSymbolSizeUndefined != nil {
		return *x.LineSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.MixedAreaSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolSizeUndefined() bool {
	if x != nil && x.MixedAreaSymbolSizeUndefined != nil {
		return *x.MixedAreaSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.MixedLineSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolSizeUndefined() bool {
	if x != nil && x.MixedLineSymbolSizeUndefined != nil {
		return *x.MixedLineSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.RadarAreaSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolSizeUndefined() bool {
	if x != nil && x.RadarAreaSymbolSizeUndefined != nil {
		return *x.RadarAreaSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolSize() *SpecDoubleArchive {
	if x != nil {
		return x.ScatterSymbolSize
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolSizeUndefined() bool {
	if x != nil && x.ScatterSymbolSizeUndefined != nil {
		return *x.ScatterSymbolSizeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.AreaSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaSymbolStrokeUndefined() bool {
	if x != nil && x.AreaSymbolStrokeUndefined != nil {
		return *x.AreaSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.BubbleSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleSymbolStrokeUndefined() bool {
	if x != nil && x.BubbleSymbolStrokeUndefined != nil {
		return *x.BubbleSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.LineSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineSymbolStrokeUndefined() bool {
	if x != nil && x.LineSymbolStrokeUndefined != nil {
		return *x.LineSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.MixedAreaSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaSymbolStrokeUndefined() bool {
	if x != nil && x.MixedAreaSymbolStrokeUndefined != nil {
		return *x.MixedAreaSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.MixedLineSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineSymbolStrokeUndefined() bool {
	if x != nil && x.MixedLineSymbolStrokeUndefined != nil {
		return *x.MixedLineSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.RadarAreaSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaSymbolStrokeUndefined() bool {
	if x != nil && x.RadarAreaSymbolStrokeUndefined != nil {
		return *x.RadarAreaSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolStroke() *SpecStrokeArchive {
	if x != nil {
		return x.ScatterSymbolStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterSymbolStrokeUndefined() bool {
	if x != nil && x.ScatterSymbolStrokeUndefined != nil {
		return *x.ScatterSymbolStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendLineShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultTrendLineShadow
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendLineShadowUndefined() bool {
	if x != nil && x.DefaultTrendLineShadowUndefined != nil {
		return *x.DefaultTrendLineShadowUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendLineStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultTrendLineStroke
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendLineStrokeUndefined() bool {
	if x != nil && x.DefaultTrendLineStrokeUndefined != nil {
		return *x.DefaultTrendLineStrokeUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineEquationOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendlineEquationOpacity
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineEquationOpacityUndefined() bool {
	if x != nil && x.DefaultTrendlineEquationOpacityUndefined != nil {
		return *x.DefaultTrendlineEquationOpacityUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineEquationParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTrendlineEquationParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineEquationParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultTrendlineEquationParagraphStyleIndexUndefined != nil {
		return *x.DefaultTrendlineEquationParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineRSquaredOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultTrendlineRSquaredOpacity
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineRSquaredOpacityUndefined() bool {
	if x != nil && x.DefaultTrendlineRSquaredOpacityUndefined != nil {
		return *x.DefaultTrendlineRSquaredOpacityUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineRSquaredParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTrendlineRSquaredParagraphStyleIndex
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultTrendlineRSquaredParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultTrendlineRSquaredParagraphStyleIndexUndefined != nil {
		return *x.DefaultTrendlineRSquaredParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.AreaValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetAreaValueLabelPositionUndefined() bool {
	if x != nil && x.AreaValueLabelPositionUndefined != nil {
		return *x.AreaValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.BarValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBarValueLabelPositionUndefined() bool {
	if x != nil && x.BarValueLabelPositionUndefined != nil {
		return *x.BarValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.BubbleValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetBubbleValueLabelPositionUndefined() bool {
	if x != nil && x.BubbleValueLabelPositionUndefined != nil {
		return *x.BubbleValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultValueLabelPositionUndefined() bool {
	if x != nil && x.DefaultValueLabelPositionUndefined != nil {
		return *x.DefaultValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.LineValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetLineValueLabelPositionUndefined() bool {
	if x != nil && x.LineValueLabelPositionUndefined != nil {
		return *x.LineValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.MixedAreaValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedAreaValueLabelPositionUndefined() bool {
	if x != nil && x.MixedAreaValueLabelPositionUndefined != nil {
		return *x.MixedAreaValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.MixedColumnValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedColumnValueLabelPositionUndefined() bool {
	if x != nil && x.MixedColumnValueLabelPositionUndefined != nil {
		return *x.MixedColumnValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.MixedLineValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetMixedLineValueLabelPositionUndefined() bool {
	if x != nil && x.MixedLineValueLabelPositionUndefined != nil {
		return *x.MixedLineValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.RadarAreaValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetRadarAreaValueLabelPositionUndefined() bool {
	if x != nil && x.RadarAreaValueLabelPositionUndefined != nil {
		return *x.RadarAreaValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.ScatterValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetScatterValueLabelPositionUndefined() bool {
	if x != nil && x.ScatterValueLabelPositionUndefined != nil {
		return *x.ScatterValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetStackedAreaValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.StackedAreaValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetStackedAreaValueLabelPositionUndefined() bool {
	if x != nil && x.StackedAreaValueLabelPositionUndefined != nil {
		return *x.StackedAreaValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetStackedBarValueLabelPosition() *SpecIntegerArchive {
	if x != nil {
		return x.StackedBarValueLabelPosition
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetStackedBarValueLabelPositionUndefined() bool {
	if x != nil && x.StackedBarValueLabelPositionUndefined != nil {
		return *x.StackedBarValueLabelPositionUndefined
	}
	return false
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultValueLabelSpacing() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultValueLabelSpacing
	}
	return nil
}

func (x *ChartSeriesStylePropertyChangeSetArchive) GetDefaultValueLabelSpacingUndefined() bool {
	if x != nil && x.DefaultValueLabelSpacingUndefined != nil {
		return *x.DefaultValueLabelSpacingUndefined
	}
	return false
}

type ChartStylePropertyChangeSetArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default3DChartOpacity                          *SpecDoubleArchive                 `protobuf:"bytes,1,opt,name=default3d_chart_opacity,json=default3dChartOpacity" json:"default3d_chart_opacity,omitempty"`
	Default3DChartOpacityUndefined                 *bool                              `protobuf:"varint,2,opt,name=default3d_chart_opacity_undefined,json=default3dChartOpacityUndefined" json:"default3d_chart_opacity_undefined,omitempty"`
	Area3DLightingPackage                          *SpecChart3DLightingPackageArchive `protobuf:"bytes,3,opt,name=area3d_lighting_package,json=area3dLightingPackage" json:"area3d_lighting_package,omitempty"`
	Area3DLightingPackageUndefined                 *bool                              `protobuf:"varint,4,opt,name=area3d_lighting_package_undefined,json=area3dLightingPackageUndefined" json:"area3d_lighting_package_undefined,omitempty"`
	Bar3DLightingPackage                           *SpecChart3DLightingPackageArchive `protobuf:"bytes,5,opt,name=bar3d_lighting_package,json=bar3dLightingPackage" json:"bar3d_lighting_package,omitempty"`
	Bar3DLightingPackageUndefined                  *bool                              `protobuf:"varint,6,opt,name=bar3d_lighting_package_undefined,json=bar3dLightingPackageUndefined" json:"bar3d_lighting_package_undefined,omitempty"`
	Column3DLightingPackage                        *SpecChart3DLightingPackageArchive `protobuf:"bytes,7,opt,name=column3d_lighting_package,json=column3dLightingPackage" json:"column3d_lighting_package,omitempty"`
	Column3DLightingPackageUndefined               *bool                              `protobuf:"varint,8,opt,name=column3d_lighting_package_undefined,json=column3dLightingPackageUndefined" json:"column3d_lighting_package_undefined,omitempty"`
	Default3DLightingPackage                       *SpecChart3DLightingPackageArchive `protobuf:"bytes,9,opt,name=default3d_lighting_package,json=default3dLightingPackage" json:"default3d_lighting_package,omitempty"`
	Default3DLightingPackageUndefined              *bool                              `protobuf:"varint,10,opt,name=default3d_lighting_package_undefined,json=default3dLightingPackageUndefined" json:"default3d_lighting_package_undefined,omitempty"`
	Line3DLightingPackage                          *SpecChart3DLightingPackageArchive `protobuf:"bytes,11,opt,name=line3d_lighting_package,json=line3dLightingPackage" json:"line3d_lighting_package,omitempty"`
	Line3DLightingPackageUndefined                 *bool                              `protobuf:"varint,12,opt,name=line3d_lighting_package_undefined,json=line3dLightingPackageUndefined" json:"line3d_lighting_package_undefined,omitempty"`
	Pie3DLightingPackage                           *SpecChart3DLightingPackageArchive `protobuf:"bytes,13,opt,name=pie3d_lighting_package,json=pie3dLightingPackage" json:"pie3d_lighting_package,omitempty"`
	Pie3DLightingPackageUndefined                  *bool                              `protobuf:"varint,14,opt,name=pie3d_lighting_package_undefined,json=pie3dLightingPackageUndefined" json:"pie3d_lighting_package_undefined,omitempty"`
	DefaultBackgroundFill                          *SpecFillArchive                   `protobuf:"bytes,15,opt,name=default_background_fill,json=defaultBackgroundFill" json:"default_background_fill,omitempty"`
	DefaultBackgroundFillUndefined                 *bool                              `protobuf:"varint,16,opt,name=default_background_fill_undefined,json=defaultBackgroundFillUndefined" json:"default_background_fill_undefined,omitempty"`
	DefaultBackgroundStroke                        *SpecStrokeArchive                 `protobuf:"bytes,17,opt,name=default_background_stroke,json=defaultBackgroundStroke" json:"default_background_stroke,omitempty"`
	DefaultBackgroundStrokeUndefined               *bool                              `protobuf:"varint,18,opt,name=default_background_stroke_undefined,json=defaultBackgroundStrokeUndefined" json:"default_background_stroke_undefined,omitempty"`
	DefaultBorderOpacity                           *SpecDoubleArchive                 `protobuf:"bytes,19,opt,name=default_border_opacity,json=defaultBorderOpacity" json:"default_border_opacity,omitempty"`
	DefaultBorderOpacityUndefined                  *bool                              `protobuf:"varint,20,opt,name=default_border_opacity_undefined,json=defaultBorderOpacityUndefined" json:"default_border_opacity_undefined,omitempty"`
	DefaultBorderShadow                            *SpecShadowArchive                 `protobuf:"bytes,21,opt,name=default_border_shadow,json=defaultBorderShadow" json:"default_border_shadow,omitempty"`
	DefaultBorderShadowUndefined                   *bool                              `protobuf:"varint,22,opt,name=default_border_shadow_undefined,json=defaultBorderShadowUndefined" json:"default_border_shadow_undefined,omitempty"`
	DefaultBorderStroke                            *SpecStrokeArchive                 `protobuf:"bytes,23,opt,name=default_border_stroke,json=defaultBorderStroke" json:"default_border_stroke,omitempty"`
	DefaultBorderStrokeUndefined                   *bool                              `protobuf:"varint,24,opt,name=default_border_stroke_undefined,json=defaultBorderStrokeUndefined" json:"default_border_stroke_undefined,omitempty"`
	DefaultCombineLayers                           *SpecBoolArchive                   `protobuf:"bytes,25,opt,name=default_combine_layers,json=defaultCombineLayers" json:"default_combine_layers,omitempty"`
	DefaultCombineLayersUndefined                  *bool                              `protobuf:"varint,26,opt,name=default_combine_layers_undefined,json=defaultCombineLayersUndefined" json:"default_combine_layers_undefined,omitempty"`
	DefaultDataSetNameParagraphStyleIndex          *SpecIntegerArchive                `protobuf:"bytes,27,opt,name=default_data_set_name_paragraph_style_index,json=defaultDataSetNameParagraphStyleIndex" json:"default_data_set_name_paragraph_style_index,omitempty"`
	DefaultDataSetNameParagraphStyleIndexUndefined *bool                              `protobuf:"varint,28,opt,name=default_data_set_name_paragraph_style_index_undefined,json=defaultDataSetNameParagraphStyleIndexUndefined" json:"default_data_set_name_paragraph_style_index_undefined,omitempty"`
	DefaultGridBackgroundFill                      *SpecFillArchive                   `protobuf:"bytes,29,opt,name=default_grid_background_fill,json=defaultGridBackgroundFill" json:"default_grid_background_fill,omitempty"`
	DefaultGridBackgroundFillUndefined             *bool                              `protobuf:"varint,30,opt,name=default_grid_background_fill_undefined,json=defaultGridBackgroundFillUndefined" json:"default_grid_background_fill_undefined,omitempty"`
	DefaultGridBackgroundOpacity                   *SpecDoubleArchive                 `protobuf:"bytes,31,opt,name=default_grid_background_opacity,json=defaultGridBackgroundOpacity" json:"default_grid_background_opacity,omitempty"`
	DefaultGridBackgroundOpacityUndefined          *bool                              `protobuf:"varint,32,opt,name=default_grid_background_opacity_undefined,json=defaultGridBackgroundOpacityUndefined" json:"default_grid_background_opacity_undefined,omitempty"`
	DefaultInterBarGap                             *SpecDoubleArchive                 `protobuf:"bytes,33,opt,name=default_inter_bar_gap,json=defaultInterBarGap" json:"default_inter_bar_gap,omitempty"`
	DefaultInterBarGapUndefined                    *bool                              `protobuf:"varint,34,opt,name=default_inter_bar_gap_undefined,json=defaultInterBarGapUndefined" json:"default_inter_bar_gap_undefined,omitempty"`
	DefaultInterSetGap                             *SpecDoubleArchive                 `protobuf:"bytes,35,opt,name=default_inter_set_gap,json=defaultInterSetGap" json:"default_inter_set_gap,omitempty"`
	DefaultInterSetGapUndefined                    *bool                              `protobuf:"varint,36,opt,name=default_inter_set_gap_undefined,json=defaultInterSetGapUndefined" json:"default_inter_set_gap_undefined,omitempty"`
	DefaultRadarRadiusGridlineCurve                *SpecBoolArchive                   `protobuf:"bytes,37,opt,name=default_radar_radius_gridline_curve,json=defaultRadarRadiusGridlineCurve" json:"default_radar_radius_gridline_curve,omitempty"`
	DefaultRadarRadiusGridlineCurveUndefined       *bool                              `protobuf:"varint,38,opt,name=default_radar_radius_gridline_curve_undefined,json=defaultRadarRadiusGridlineCurveUndefined" json:"default_radar_radius_gridline_curve_undefined,omitempty"`
	DefaultRoundedCornerOuterEndOnly               *SpecBoolArchive                   `protobuf:"bytes,39,opt,name=default_rounded_corner_outer_end_only,json=defaultRoundedCornerOuterEndOnly" json:"default_rounded_corner_outer_end_only,omitempty"`
	DefaultRoundedCornerOuterEndOnlyUndefined      *bool                              `protobuf:"varint,40,opt,name=default_rounded_corner_outer_end_only_undefined,json=defaultRoundedCornerOuterEndOnlyUndefined" json:"default_rounded_corner_outer_end_only_undefined,omitempty"`
	DefaultRoundedCornerRadius                     *SpecDoubleArchive                 `protobuf:"bytes,41,opt,name=default_rounded_corner_radius,json=defaultRoundedCornerRadius" json:"default_rounded_corner_radius,omitempty"`
	DefaultRoundedCornerRadiusUndefined            *bool                              `protobuf:"varint,42,opt,name=default_rounded_corner_radius_undefined,json=defaultRoundedCornerRadiusUndefined" json:"default_rounded_corner_radius_undefined,omitempty"`
	DefaultShowBorder                              *SpecBoolArchive                   `protobuf:"bytes,43,opt,name=default_show_border,json=defaultShowBorder" json:"default_show_border,omitempty"`
	DefaultShowBorderUndefined                     *bool                              `protobuf:"varint,44,opt,name=default_show_border_undefined,json=defaultShowBorderUndefined" json:"default_show_border_undefined,omitempty"`
	DefaultTitleColor                              *SpecColorArchive                  `protobuf:"bytes,45,opt,name=default_title_color,json=defaultTitleColor" json:"default_title_color,omitempty"`
	DefaultTitleColorUndefined                     *bool                              `protobuf:"varint,46,opt,name=default_title_color_undefined,json=defaultTitleColorUndefined" json:"default_title_color_undefined,omitempty"`
	DefaultTitleParagraphStyleIndex                *SpecIntegerArchive                `protobuf:"bytes,47,opt,name=default_title_paragraph_style_index,json=defaultTitleParagraphStyleIndex" json:"default_title_paragraph_style_index,omitempty"`
	DefaultTitleParagraphStyleIndexUndefined       *bool                              `protobuf:"varint,48,opt,name=default_title_paragraph_style_index_undefined,json=defaultTitleParagraphStyleIndexUndefined" json:"default_title_paragraph_style_index_undefined,omitempty"`
}

func (x *ChartStylePropertyChangeSetArchive) Reset() {
	*x = ChartStylePropertyChangeSetArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TSCHArchives_sos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartStylePropertyChangeSetArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartStylePropertyChangeSetArchive) ProtoMessage() {}

func (x *ChartStylePropertyChangeSetArchive) ProtoReflect() protoreflect.Message {
	mi := &file_TSCHArchives_sos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartStylePropertyChangeSetArchive.ProtoReflect.Descriptor instead.
func (*ChartStylePropertyChangeSetArchive) Descriptor() ([]byte, []int) {
	return file_TSCHArchives_sos_proto_rawDescGZIP(), []int{21}
}

func (x *ChartStylePropertyChangeSetArchive) GetDefault3DChartOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.Default3DChartOpacity
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefault3DChartOpacityUndefined() bool {
	if x != nil && x.Default3DChartOpacityUndefined != nil {
		return *x.Default3DChartOpacityUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetArea3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Area3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetArea3DLightingPackageUndefined() bool {
	if x != nil && x.Area3DLightingPackageUndefined != nil {
		return *x.Area3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetBar3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Bar3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetBar3DLightingPackageUndefined() bool {
	if x != nil && x.Bar3DLightingPackageUndefined != nil {
		return *x.Bar3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetColumn3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Column3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetColumn3DLightingPackageUndefined() bool {
	if x != nil && x.Column3DLightingPackageUndefined != nil {
		return *x.Column3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefault3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Default3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefault3DLightingPackageUndefined() bool {
	if x != nil && x.Default3DLightingPackageUndefined != nil {
		return *x.Default3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetLine3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Line3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetLine3DLightingPackageUndefined() bool {
	if x != nil && x.Line3DLightingPackageUndefined != nil {
		return *x.Line3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetPie3DLightingPackage() *SpecChart3DLightingPackageArchive {
	if x != nil {
		return x.Pie3DLightingPackage
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetPie3DLightingPackageUndefined() bool {
	if x != nil && x.Pie3DLightingPackageUndefined != nil {
		return *x.Pie3DLightingPackageUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBackgroundFill() *SpecFillArchive {
	if x != nil {
		return x.DefaultBackgroundFill
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBackgroundFillUndefined() bool {
	if x != nil && x.DefaultBackgroundFillUndefined != nil {
		return *x.DefaultBackgroundFillUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBackgroundStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultBackgroundStroke
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBackgroundStrokeUndefined() bool {
	if x != nil && x.DefaultBackgroundStrokeUndefined != nil {
		return *x.DefaultBackgroundStrokeUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultBorderOpacity
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderOpacityUndefined() bool {
	if x != nil && x.DefaultBorderOpacityUndefined != nil {
		return *x.DefaultBorderOpacityUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderShadow() *SpecShadowArchive {
	if x != nil {
		return x.DefaultBorderShadow
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderShadowUndefined() bool {
	if x != nil && x.DefaultBorderShadowUndefined != nil {
		return *x.DefaultBorderShadowUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderStroke() *SpecStrokeArchive {
	if x != nil {
		return x.DefaultBorderStroke
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultBorderStrokeUndefined() bool {
	if x != nil && x.DefaultBorderStrokeUndefined != nil {
		return *x.DefaultBorderStrokeUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultCombineLayers() *SpecBoolArchive {
	if x != nil {
		return x.DefaultCombineLayers
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultCombineLayersUndefined() bool {
	if x != nil && x.DefaultCombineLayersUndefined != nil {
		return *x.DefaultCombineLayersUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultDataSetNameParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultDataSetNameParagraphStyleIndex
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultDataSetNameParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultDataSetNameParagraphStyleIndexUndefined != nil {
		return *x.DefaultDataSetNameParagraphStyleIndexUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultGridBackgroundFill() *SpecFillArchive {
	if x != nil {
		return x.DefaultGridBackgroundFill
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultGridBackgroundFillUndefined() bool {
	if x != nil && x.DefaultGridBackgroundFillUndefined != nil {
		return *x.DefaultGridBackgroundFillUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultGridBackgroundOpacity() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultGridBackgroundOpacity
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultGridBackgroundOpacityUndefined() bool {
	if x != nil && x.DefaultGridBackgroundOpacityUndefined != nil {
		return *x.DefaultGridBackgroundOpacityUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultInterBarGap() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultInterBarGap
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultInterBarGapUndefined() bool {
	if x != nil && x.DefaultInterBarGapUndefined != nil {
		return *x.DefaultInterBarGapUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultInterSetGap() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultInterSetGap
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultInterSetGapUndefined() bool {
	if x != nil && x.DefaultInterSetGapUndefined != nil {
		return *x.DefaultInterSetGapUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRadarRadiusGridlineCurve() *SpecBoolArchive {
	if x != nil {
		return x.DefaultRadarRadiusGridlineCurve
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRadarRadiusGridlineCurveUndefined() bool {
	if x != nil && x.DefaultRadarRadiusGridlineCurveUndefined != nil {
		return *x.DefaultRadarRadiusGridlineCurveUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRoundedCornerOuterEndOnly() *SpecBoolArchive {
	if x != nil {
		return x.DefaultRoundedCornerOuterEndOnly
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRoundedCornerOuterEndOnlyUndefined() bool {
	if x != nil && x.DefaultRoundedCornerOuterEndOnlyUndefined != nil {
		return *x.DefaultRoundedCornerOuterEndOnlyUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRoundedCornerRadius() *SpecDoubleArchive {
	if x != nil {
		return x.DefaultRoundedCornerRadius
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultRoundedCornerRadiusUndefined() bool {
	if x != nil && x.DefaultRoundedCornerRadiusUndefined != nil {
		return *x.DefaultRoundedCornerRadiusUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultShowBorder() *SpecBoolArchive {
	if x != nil {
		return x.DefaultShowBorder
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultShowBorderUndefined() bool {
	if x != nil && x.DefaultShowBorderUndefined != nil {
		return *x.DefaultShowBorderUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultTitleColor() *SpecColorArchive {
	if x != nil {
		return x.DefaultTitleColor
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultTitleColorUndefined() bool {
	if x != nil && x.DefaultTitleColorUndefined != nil {
		return *x.DefaultTitleColorUndefined
	}
	return false
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultTitleParagraphStyleIndex() *SpecIntegerArchive {
	if x != nil {
		return x.DefaultTitleParagraphStyleIndex
	}
	return nil
}

func (x *ChartStylePropertyChangeSetArchive) GetDefaultTitleParagraphStyleIndexUndefined() bool {
	if x != nil && x.DefaultTitleParagraphStyleIndexUndefined != nil {
		return *x.DefaultTitleParagraphStyleIndexUndefined
	}
	return false
}

var File_TSCHArchives_sos_proto protoreflect.FileDescriptor

var file_TSCHArchives_sos_proto_rawDesc = []byte{
	0x0a, 0x16, 0x54, 0x53, 0x43, 0x48, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x73,
	0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f,
	0x53, 0x1a, 0x14, 0x54, 0x53, 0x43, 0x48, 0x33, 0x44, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x54, 0x53, 0x43, 0x48, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x54, 0x53, 0x44, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f,
	0x73, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x54, 0x53, 0x4b, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x54, 0x53,
	0x53, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x24, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x5d, 0x0a, 0x18,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x54, 0x53, 0x43, 0x48, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x44, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x16, 0x63, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x65,
	0x74, 0x22, 0x76, 0x0a, 0x1b, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x5f, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x44, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x25, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x12, 0x68, 0x0a, 0x1b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x53, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4f, 0x66, 0x4e,
	0x53, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x75, 0x6e,
	0x73, 0x65, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x29, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x66, 0x0a, 0x1e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x53, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x22,
	0x74, 0x0a, 0x1a, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x40, 0x0a,
	0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x53, 0x4b, 0x2e, 0x54, 0x53, 0x4b, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05,
	0x75, 0x6e, 0x73, 0x65, 0x74, 0x22, 0x74, 0x0a, 0x1a, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x53, 0x4b,
	0x2e, 0x54, 0x53, 0x4b, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x21,
	0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x77, 0x0a, 0x21, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x54,
	0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x73, 0x70, 0x65,
	0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x18, 0x53, 0x70,
	0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x73,
	0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x22, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x7c, 0x0a, 0x24, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1e, 0x73, 0x70, 0x65, 0x63, 0x53, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x01, 0x0a, 0x26, 0x53, 0x70, 0x65,
	0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x27, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x73, 0x70, 0x65, 0x63, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x22, 0x73, 0x0a,
	0x17, 0x53, 0x70, 0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x58, 0x0a, 0x16, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x73,
	0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x73, 0x0a, 0x17, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x58, 0x0a,
	0x16, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63, 0x53, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xea, 0x1c, 0x0a, 0x29, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x41, 0x78, 0x69, 0x73, 0x4e, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x54, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x31, 0x30, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31,
	0x30, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x44,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x58, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x21,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x31, 0x30, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x33, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x33, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x41, 0x0a, 0x1d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x58, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x54, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x57, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x63, 0x61,
	0x64, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x61, 0x64, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x21, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64,
	0x65, 0x63, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x61, 0x64, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67,
	0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x29, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x60, 0x0a, 0x1f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x12, 0x57, 0x0a, 0x29, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x5f,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x6c,
	0x6f, 0x74, 0x54, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x6c, 0x6f,
	0x74, 0x54, 0x6f, 0x45, 0x64, 0x67, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x49, 0x0a, 0x14, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x43, 0x0a,
	0x1e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f,
	0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x43,
	0x0a, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x56, 0x0a, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x18, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x25, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x1d,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x27, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x13,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x12,
	0x3b, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x22, 0xd9, 0x3f, 0x0a, 0x26, 0x43, 0x68, 0x61, 0x72, 0x74, 0x41, 0x78,
	0x69, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12,
	0x59, 0x0a, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x5f, 0x67, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x19, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x25, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a,
	0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x4b, 0x0a, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64, 0x5f, 0x67, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x57, 0x0a, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x5f, 0x67, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4f, 0x0a, 0x24, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x33, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x33, 0x64, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x33, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64, 0x47, 0x72,
	0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x49, 0x0a, 0x21,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x64,
	0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x25, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x48, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6e, 0x0a, 0x26, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x30, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a,
	0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x61, 0x0a, 0x2e, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x29, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x23,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a,
	0x2b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x26, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x1b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6f, 0x72,
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x25, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4f, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x72,
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x53, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x16, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x4f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x29, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x5a, 0x0a, 0x1c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f,
	0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x19, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x26,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x5e, 0x0a, 0x1e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6a,
	0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x12, 0x56, 0x0a, 0x28, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x12, 0x50, 0x0a, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x56, 0x0a, 0x28, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x29, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x69,
	0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x52, 0x0a, 0x26, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f,
	0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x12, 0x56, 0x0a, 0x28, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x1b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x50, 0x0a, 0x25, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1e, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x56, 0x0a, 0x28, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x58, 0x0a, 0x1b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f,
	0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x12,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x78,
	0x69, 0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x41,
	0x78, 0x69, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x78, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x41, 0x78, 0x69, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x41, 0x78, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x58, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x26, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60,
	0x0a, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x47,
	0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x12, 0x5a, 0x0a, 0x2a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68,
	0x6f, 0x77, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x54, 0x0a, 0x27, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50,
	0x0a, 0x18, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x4a, 0x0a, 0x22, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47,
	0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f,
	0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x65,
	0x0a, 0x23, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x70, 0x6f,
	0x6c, 0x61, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x1a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x24,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x43, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x54,
	0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x44, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54,
	0x0a, 0x1a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x45, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x12, 0x4e, 0x0a, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x46, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x6a,
	0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x15, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x54,
	0x0a, 0x27, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x1a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x24, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x67,
	0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x54, 0x69, 0x63,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x54, 0x0a, 0x27, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x1a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0x4e, 0x0a, 0x24, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x6f, 0x72,
	0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x58, 0x0a, 0x1a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x18, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x24,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x52, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a,
	0x17, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x49, 0x0a, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x54, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x24,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x61, 0x0a, 0x2e, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x56, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x29, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x23, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x58, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x21, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x59, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a, 0x2b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x26, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x19, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x12, 0x4d, 0x0a, 0x23, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x22, 0x2d, 0x0a, 0x2b, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x22,
	0xdf, 0x05, 0x0a, 0x28, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68,
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a,
	0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x18, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x22, 0xf9, 0x27, 0x0a, 0x25, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x6e, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x42,
	0x61, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x33, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x42, 0x61, 0x72, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x15, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x62, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x42, 0x65, 0x76,
	0x65, 0x6c, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x33, 0x64, 0x5f, 0x62, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x42, 0x65, 0x76, 0x65, 0x6c,
	0x45, 0x64, 0x67, 0x65, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5b,
	0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x67, 0x61, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x47, 0x61, 0x70, 0x12, 0x53, 0x0a, 0x27, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x67, 0x61, 0x70, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x47, 0x61, 0x70, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x50, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54,
	0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x33, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x61,
	0x72, 0x65, 0x61, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x72,
	0x65, 0x61, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x72, 0x65, 0x61,
	0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x0b, 0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x72, 0x33, 0x64, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x62, 0x61, 0x72, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x6c,
	0x69, 0x6e, 0x65, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x69,
	0x6e, 0x65, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6c, 0x69, 0x6e, 0x65,
	0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x0b, 0x70, 0x69, 0x65, 0x33, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x70, 0x69, 0x65, 0x33, 0x64, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x69, 0x65, 0x33, 0x64, 0x5f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x69, 0x65, 0x33, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x33, 0x64, 0x56, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x1c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x56, 0x69, 0x65, 0x77, 0x70,
	0x6f, 0x72, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x61, 0x72, 0x65, 0x61, 0x43, 0x61,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a,
	0x20, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x61, 0x72, 0x65, 0x61, 0x43, 0x61, 0x6c,
	0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x12, 0x62, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x62,
	0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x18, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4a, 0x0a, 0x22, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x19, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x4f, 0x0a, 0x16, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x46, 0x0a, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x70, 0x69, 0x65,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x70, 0x69, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x70, 0x69, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x70, 0x69, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55,
	0x0a, 0x19, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x28, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x72,
	0x65, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1d, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x27, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x42, 0x61, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x86, 0x01,
	0x0a, 0x39, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x5f, 0x65, 0x5f, 0x70, 0x5f,
	0x72, 0x5f, 0x65, 0x5f, 0x63, 0x5f, 0x61, 0x5f, 0x74, 0x5f, 0x65, 0x5f, 0x64, 0x5f, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x2a, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x80, 0x01, 0x0a, 0x43, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x64, 0x5f, 0x65, 0x5f, 0x70, 0x5f, 0x72, 0x5f, 0x65, 0x5f, 0x63, 0x5f, 0x61,
	0x5f, 0x74, 0x5f, 0x65, 0x5f, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x33, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x45, 0x50,
	0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f,
	0x72, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x79,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x7a, 0x0a, 0x31, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x5f, 0x65, 0x5f, 0x70, 0x5f, 0x72, 0x5f, 0x65, 0x5f, 0x63,
	0x5f, 0x61, 0x5f, 0x74, 0x5f, 0x65, 0x5f, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x72, 0x0a, 0x3b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x64, 0x5f, 0x65, 0x5f, 0x70, 0x5f, 0x72, 0x5f, 0x65, 0x5f, 0x63, 0x5f, 0x61, 0x5f, 0x74,
	0x5f, 0x65, 0x5f, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72,
	0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x28, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x75,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x74,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x6f, 0x6e, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x74,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x27, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x29, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70,
	0x69, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x69, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x69, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x54, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x37, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x61, 0x64, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x38, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x61, 0x64, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x1d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x67,
	0x65, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77,
	0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6b, 0x69, 0x70, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x22, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6b,
	0x69, 0x70, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x22, 0xf3, 0x06,
	0x0a, 0x32, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x17,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3f, 0x0a, 0x1c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x11,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x50, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3d,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x22, 0xd5, 0x05, 0x0a, 0x2f, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x68, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x40,
	0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x73, 0x0a, 0x29, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x6a, 0x0a, 0x33, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x22, 0xba, 0x7e, 0x0a, 0x2b,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x6f, 0x6e, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x54, 0x0a, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x31, 0x30, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x31, 0x30, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a,
	0x13, 0x70, 0x69, 0x65, 0x31, 0x30, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x70, 0x69,
	0x65, 0x31, 0x30, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x41, 0x0a, 0x1d, 0x70, 0x69, 0x65, 0x31, 0x30, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x70, 0x69, 0x65, 0x31, 0x30, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x70, 0x69, 0x65, 0x32, 0x33, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x70, 0x69,
	0x65, 0x32, 0x33, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x69, 0x65, 0x32, 0x33, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x70, 0x69, 0x65, 0x32,
	0x33, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x62,
	0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x17, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54,
	0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x53, 0x0a, 0x18, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15,
	0x61, 0x72, 0x65, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1e, 0x61, 0x72, 0x65, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x17, 0x62, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14,
	0x62, 0x61, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x62, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1d, 0x62, 0x61, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x57,
	0x0a, 0x1a, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69,
	0x6e, 0x65, 0x12, 0x50, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x18, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x17, 0x70, 0x69, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x14, 0x70, 0x69, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x70, 0x69, 0x65, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1d, 0x70, 0x69, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x59, 0x0a, 0x1b, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x18, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x50, 0x0a,
	0x25, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x62, 0x0a, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x72,
	0x65, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x59, 0x0a, 0x2a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75,
	0x74, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60,
	0x0a, 0x1f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x1b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x57, 0x0a, 0x29, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x24, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x7e, 0x0a, 0x26, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53, 0x43, 0x48,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x64, 0x0a, 0x30, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x2a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x90, 0x01, 0x0a, 0x30, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x78, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x58, 0x12, 0x76, 0x0a, 0x3a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x32, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x7e, 0x0a, 0x26, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x64, 0x0a, 0x30, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x2a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x90, 0x01, 0x0a, 0x30, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x54, 0x53,
	0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x58, 0x12, 0x76, 0x0a, 0x3a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x32, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x1d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72,
	0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x53, 0x0a, 0x27, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6d, 0x0a,
	0x27, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62,
	0x61, 0x72, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x12, 0x65, 0x0a, 0x31,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61,
	0x72, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x71, 0x0a,
	0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62,
	0x61, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x23, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58,
	0x12, 0x69, 0x0a, 0x33, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x19, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x67, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x12, 0x5e, 0x0a, 0x2d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x27, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x1f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x74, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x74,
	0x64, 0x44, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x56, 0x0a, 0x29, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x74, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x36, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x74, 0x64,
	0x44, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x70, 0x0a, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72,
	0x53, 0x74, 0x64, 0x44, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x58, 0x12, 0x68, 0x0a, 0x33, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61,
	0x72, 0x53, 0x74, 0x64, 0x44, 0x65, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a,
	0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62,
	0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46,
	0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x62, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x12, 0x58, 0x0a, 0x2a, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x70, 0x69, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x70, 0x69, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x1d, 0x70, 0x69, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x3e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x70, 0x69, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45,
	0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x44, 0x0a, 0x10, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69,
	0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69,
	0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x4b, 0x0a, 0x14, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x1e,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x44,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x4b, 0x0a, 0x14, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a,
	0x1e, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61,
	0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x46, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x48, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x45,
	0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x11, 0x70, 0x69, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0f, 0x70, 0x69, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x69, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x70, 0x69, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x57, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x70,
	0x69, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x70, 0x69, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x20,
	0x70, 0x69, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x70, 0x69, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x54, 0x53,
	0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1a, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x54, 0x0a, 0x27, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x52, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x4a, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x54, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c,
	0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x12, 0x46, 0x0a, 0x20,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x56, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x5e, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x68, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x58, 0x12, 0x58, 0x0a, 0x2a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x58, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55,
	0x0a, 0x1b, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x59, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x25, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x49, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12,
	0x51, 0x0a, 0x26, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x49, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x68, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x19, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x16, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x23, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x60, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x19, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x23,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x62, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x70, 0x69,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x13, 0x70, 0x69, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x70, 0x69, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1c, 0x70, 0x69, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x54, 0x0a, 0x1a, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4e, 0x0a, 0x24, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x10, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61,
	0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x20, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x72, 0x61, 0x64,
	0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x46, 0x0a, 0x20, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x41, 0x0a, 0x1d, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x72, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c,
	0x0a, 0x16, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x61, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x20,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x76, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x61, 0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x15, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x77, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x62, 0x61,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x44, 0x0a, 0x1f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x62, 0x61, 0x72, 0x53, 0x68,
	0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x18, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x22, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68,
	0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x16, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x13, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x17,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x21,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x53,
	0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x15, 0x70, 0x69, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x12, 0x70, 0x69, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b,
	0x70, 0x69, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x17, 0x72,
	0x61, 0x64, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x72, 0x61, 0x64, 0x61, 0x72, 0x53, 0x68, 0x6f,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x21,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x72, 0x61, 0x64, 0x61, 0x72, 0x53,
	0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x19, 0x73, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x6f,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x23,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x15, 0x62,
	0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x87, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x1f,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x88, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x11, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x89, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x61, 0x72, 0x65, 0x61, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x61, 0x72, 0x65, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x62, 0x61,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x8b,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e,
	0x62, 0x61, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3c,
	0x0a, 0x1a, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x8c, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x62, 0x61, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x13,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x11, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x14, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x11,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x91, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0f, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x92, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x93, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x70, 0x69, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x94, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x70, 0x69, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x14, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x95, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x44, 0x0a, 0x1e, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x73, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x19, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x16, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x23, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x18, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x99, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42,
	0x61, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4b, 0x0a,
	0x22, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x9a, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9b,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x9c, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9f,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x50, 0x0a, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x47, 0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x72, 0x61,
	0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x20,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x13, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa5, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x42, 0x0a, 0x1d, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0xa6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x69, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x78, 0x18, 0xa7,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x58, 0x12, 0x61, 0x0a, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0xa8, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x71, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x69, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x18, 0xa9, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x12,
	0x61, 0x0a, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xab, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x58, 0x0a, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0xac, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54,
	0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0xad, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xae, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x56, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0xaf,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x4d, 0x0a, 0x23, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0xb0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72,
	0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
	0x78, 0x18, 0xb1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x58, 0x12, 0x62, 0x0a, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x78, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72,
	0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
	0x79, 0x18, 0xb3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x59, 0x12, 0x62, 0x0a, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x79, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xb5, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x2a, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0xb7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x54, 0x0a, 0x27, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb8, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x72, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0xb9, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x52, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x59, 0x0a, 0x2a, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x72, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xba, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0xbb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xbc, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x18, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x18,
	0xbd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x78, 0x69, 0x73, 0x12, 0x4b, 0x0a, 0x22, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0xbe, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x78, 0x69, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x19, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x61,
	0x78, 0x69, 0x73, 0x18, 0xbf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x78, 0x69, 0x73, 0x12, 0x4d,
	0x0a, 0x23, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x41, 0x78, 0x69, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4a, 0x0a,
	0x13, 0x70, 0x69, 0x65, 0x5f, 0x77, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0xc1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x70, 0x69, 0x65, 0x57, 0x65, 0x64, 0x67, 0x65,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x1d, 0x70, 0x69, 0x65,
	0x5f, 0x77, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc2, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1a, 0x70, 0x69, 0x65, 0x57, 0x65, 0x64, 0x67, 0x65, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x50, 0x0a,
	0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x79, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0xc3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x59, 0x41, 0x78, 0x69, 0x73, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12,
	0x47, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x79, 0x5f, 0x61, 0x78, 0x69,
	0x73, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0xc4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x59, 0x41, 0x78, 0x69, 0x73, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x22, 0x8a, 0x96, 0x01, 0x0a, 0x28, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x63, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x4c,
	0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e,
	0x65, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x2b, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x5e, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x27, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x63, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x56, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x4d, 0x0a, 0x24, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x24, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x58, 0x12, 0x5f, 0x0a, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x27, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x4c, 0x69, 0x6e, 0x65,
	0x45, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x61, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x4a, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x61, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x23, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x23, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x61, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x58, 0x12, 0x5e, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x27, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x52, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x61, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x64, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x12, 0x5c, 0x0a, 0x2c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x61, 0x72, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x58, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x09, 0x62, 0x61, 0x72, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x14,
	0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x62, 0x61, 0x72, 0x33,
	0x64, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c,
	0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x17,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x32,
	0x0a, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6c,
	0x69, 0x6e, 0x65, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x09, 0x70, 0x69, 0x65, 0x33, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x69,
	0x65, 0x33, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70, 0x69, 0x65, 0x33, 0x64, 0x46,
	0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x09,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c,
	0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x46, 0x69,
	0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x61, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x62, 0x61, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x62,
	0x61, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x72, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x62, 0x61, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x34,
	0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x43, 0x0a, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x69, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x07, 0x70, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x69, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x69, 0x65, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c,
	0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41,
	0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x82, 0x01, 0x0a, 0x32, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x2b, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x7a, 0x0a, 0x3c, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x34, 0x72,
	0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x21, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x5a, 0x0a, 0x2b, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x62, 0x0a, 0x20, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x61, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x59, 0x0a, 0x2a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x61, 0x72, 0x65, 0x61, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x60, 0x0a, 0x1f, 0x62, 0x61, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x62, 0x61, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x57, 0x0a, 0x29, 0x62, 0x61, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x62, 0x61, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x23, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x21, 0x64, 0x6f, 0x6e, 0x75, 0x74, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x64,
	0x6f, 0x6e, 0x75, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a, 0x2b,
	0x64, 0x6f, 0x6e, 0x75, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x26, 0x64, 0x6f, 0x6e, 0x75, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x20, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1c, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x59, 0x0a,
	0x2a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x25, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x21, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x3d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b,
	0x0a, 0x2b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x26, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x70,
	0x69, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x3f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1b, 0x70, 0x69, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x57, 0x0a,
	0x29, 0x70, 0x69, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x40, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x24, 0x70, 0x69, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x64, 0x0a, 0x21, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x41, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x72,
	0x61, 0x64, 0x61, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a, 0x2b,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x26, 0x72, 0x61, 0x64, 0x61, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x43, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a,
	0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x44, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x71, 0x0a, 0x28, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x45, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x23, 0x61, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x68, 0x0a, 0x32,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2c, 0x61, 0x72, 0x65, 0x61, 0x4f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6f, 0x0a, 0x27, 0x62, 0x61, 0x72, 0x5f, 0x6f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x22, 0x62, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x66, 0x0a, 0x31, 0x62, 0x61, 0x72, 0x5f, 0x6f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x2b, 0x62, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x77, 0x0a, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x49,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x26, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6e, 0x0a, 0x35, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x73, 0x0a, 0x29, 0x64, 0x6f, 0x6e, 0x75,
	0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x24, 0x64, 0x6f, 0x6e, 0x75, 0x74, 0x4f, 0x75,
	0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6a, 0x0a,
	0x33, 0x64, 0x6f, 0x6e, 0x75, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2d, 0x64, 0x6f, 0x6e, 0x75,
	0x74, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x73, 0x0a, 0x29, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x24, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6a,
	0x0a, 0x33, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2d, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6f, 0x0a, 0x27, 0x70, 0x69,
	0x65, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x70, 0x69, 0x65, 0x4f, 0x75, 0x74, 0x73,
	0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x66, 0x0a, 0x31, 0x70,
	0x69, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x50, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x70, 0x69, 0x65, 0x4f, 0x75, 0x74, 0x73, 0x69,
	0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x73, 0x0a, 0x29, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x6f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x24, 0x72, 0x61, 0x64, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6a, 0x0a, 0x33, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x52, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2d, 0x72, 0x61, 0x64, 0x61, 0x72, 0x4f, 0x75, 0x74, 0x73,
	0x69, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x54, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0c,
	0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x55, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x62,
	0x61, 0x72, 0x33, 0x64, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61,
	0x72, 0x33, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x56, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x62, 0x61, 0x72, 0x33,
	0x64, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x73, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x58, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33,
	0x64, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x3e, 0x0a, 0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x12, 0x36, 0x0a, 0x17, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x69, 0x65, 0x33,
	0x64, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x70, 0x69, 0x65, 0x33, 0x64,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x69, 0x65, 0x33, 0x64, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x5c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x69, 0x65, 0x33, 0x64, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x5d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x61, 0x72,
	0x65, 0x61, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x72, 0x65, 0x61, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0a,
	0x62, 0x61, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x09, 0x62, 0x61, 0x72,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x60,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x62, 0x61, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0c, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x36, 0x0a, 0x17, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x62, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x40, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x11,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x41, 0x0a,
	0x1d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x45, 0x0a, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x09, 0x70, 0x69, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x12, 0x30, 0x0a, 0x14, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x70, 0x69, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x3d, 0x0a, 0x1b, 0x72, 0x61, 0x64,
	0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x70, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x73, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x72, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x63,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x74, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x61, 0x72, 0x65, 0x61, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x09, 0x62, 0x61, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x76, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x62, 0x61,
	0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0c, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x12, 0x36, 0x0a, 0x17, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x78, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x7b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12,
	0x3d, 0x0a, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x49,
	0x0a, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1a, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x11,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x0f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x09, 0x70, 0x69, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x31,
	0x0a, 0x14, 0x70, 0x69, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70,
	0x69, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x46, 0x0a, 0x11, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x72, 0x61, 0x64,
	0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x85, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0d, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x39, 0x0a, 0x18,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x86, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x87, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x61, 0x72, 0x65,
	0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x3c, 0x0a, 0x1a, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x88, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x12, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x89, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x10, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c,
	0x6c, 0x12, 0x40, 0x0a, 0x1c, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x8b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x12, 0x47, 0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a,
	0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x47, 0x0a, 0x20,
	0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x16, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x91, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x13, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x12, 0x47, 0x0a, 0x20, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x92, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x48, 0x0a,
	0x13, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x66, 0x69, 0x6c, 0x6c, 0x18, 0x93, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x42, 0x0a, 0x1d, 0x73, 0x63, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x94, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1a, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69,
	0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x20, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x95, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1b, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x59, 0x0a, 0x2a,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x24, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x97, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x12, 0x59, 0x0a, 0x2a, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x98, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x26, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x99, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x6d,
	0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x12,
	0x64, 0x0a, 0x30, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x9a, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x29, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x26, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18,
	0x9b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x6c, 0x12, 0x64, 0x0a, 0x30, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x29, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6a, 0x0a, 0x26, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x18, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x20, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46,
	0x69, 0x6c, 0x6c, 0x12, 0x64, 0x0a, 0x30, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x9e, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x29,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46,
	0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6c,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x22, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x9f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1d, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x5d,
	0x0a, 0x2c, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa0,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x67, 0x0a,
	0x24, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66,
	0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x61, 0x0a, 0x2e, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x28, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x22, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1d, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x5d,
	0x0a, 0x2c, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa4,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6e, 0x0a,
	0x28, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xa5, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f,
	0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x68, 0x0a,
	0x32, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0xa6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x6e, 0x0a, 0x28, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x18, 0xa7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x22, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x68, 0x0a, 0x32, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xa8, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x2b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x6e, 0x0a, 0x28, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xa9, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x22, 0x72,
	0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46, 0x69,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x12, 0x68, 0x0a, 0x32, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2b,
	0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46,
	0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x69, 0x0a, 0x25, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x18, 0xab, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x63, 0x0a, 0x2f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xac, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x29, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x46,
	0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0xad, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0xae, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x44, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0xaf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0xb0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xb1, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x13, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a,
	0x16, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xb3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x47,
	0x0a, 0x20, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x72, 0x61, 0x64, 0x61, 0x72,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0xb5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f,
	0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x52, 0x13, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x72, 0x61, 0x64, 0x61,
	0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb6, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1c, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xb7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x73, 0x63, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a,
	0x1d, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xb8,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x12, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xb9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x10, 0x61, 0x72, 0x65, 0x61, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xba, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x61, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a,
	0x14, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xbb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x44, 0x0a, 0x1e, 0x62,
	0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xbc, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xbd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x10, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xbe, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x53, 0x0a,
	0x18, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xbf, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x12, 0x4b, 0x0a, 0x22, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1e, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x53, 0x0a, 0x18, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xc1, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x6d,
	0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4b, 0x0a, 0x22, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc2, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1e, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x53, 0x0a, 0x18, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xc3, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x15, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4b, 0x0a, 0x22, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc4, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1e, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72, 0x65, 0x61, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xc5, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x12, 0x46, 0x0a, 0x1f, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x19, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61,
	0x64, 0x6f, 0x77, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x12, 0x4d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x55, 0x0a, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0xca, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0xcb, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x5f, 0x0a, 0x2c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x82, 0x01, 0x0a, 0x30, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x71, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x79, 0x0a, 0x3a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x71, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x34, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x71, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x68, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x60, 0x0a, 0x2d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xd0, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x83, 0x01,
	0x0a, 0x31, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x7a, 0x0a, 0x3b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74,
	0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x34, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x56, 0x0a, 0x19, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd3, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x16, 0x61, 0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x23, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xd4,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x61, 0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x18, 0x62, 0x61, 0x72, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0xd5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x62, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x22,
	0x62, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x61, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1b, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x25, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xd8,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xd9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x26, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0xda, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x19, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x16, 0x6c, 0x69, 0x6e,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x23, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1f, 0x6c, 0x69, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x61, 0x0a, 0x1f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xdd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54,
	0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x29, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0xde, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x41, 0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x65, 0x0a, 0x21, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x2b, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xe0, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26, 0x6d, 0x69,
	0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x1f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x6d, 0x69, 0x78, 0x65,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x29, 0x6d, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x6d, 0x69, 0x78,
	0x65, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x61, 0x0a, 0x1f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53,
	0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1b, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x29, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0xe4, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x72, 0x61, 0x64, 0x61, 0x72, 0x41,
	0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5c,
	0x0a, 0x1c, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe5,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x19, 0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x26,
	0x73, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x73,
	0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x65, 0x0a, 0x21, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1d, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x2b, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xe8, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x26,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x63, 0x0a, 0x20, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xe9, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x2a, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xea, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x25, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73,
	0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0xec, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x22, 0xaf, 0x20, 0x0a, 0x22, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x51, 0x0a,
	0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x33, 0x64, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x17, 0x61,
	0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54,
	0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x49, 0x0a, 0x21, 0x61, 0x72, 0x65, 0x61, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x61, 0x72, 0x65, 0x61,
	0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x16, 0x62, 0x61,
	0x72, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43,
	0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14, 0x62, 0x61, 0x72, 0x33, 0x64, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x20,
	0x62, 0x61, 0x72, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x62, 0x61, 0x72, 0x33, 0x64, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x66, 0x0a, 0x19, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33,
	0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a,
	0x23, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a, 0x1a,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x18, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x24, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x33, 0x64, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x62, 0x0a, 0x17, 0x6c, 0x69, 0x6e, 0x65, 0x33,
	0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x6c,
	0x69, 0x6e, 0x65, 0x33, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x6c, 0x69, 0x6e, 0x65, 0x33, 0x64, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x16, 0x70, 0x69, 0x65, 0x33, 0x64, 0x5f,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x54, 0x53, 0x43, 0x48, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x61, 0x72, 0x74, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x14, 0x70, 0x69, 0x65, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x70, 0x69, 0x65, 0x33,
	0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x70, 0x69, 0x65, 0x33, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x4f, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x46, 0x69, 0x6c, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x15, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x6c, 0x12, 0x49, 0x0a, 0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55, 0x0a,
	0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74,
	0x72, 0x6f, 0x6b, 0x65, 0x12, 0x4d, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54,
	0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x45, 0x0a, 0x1f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x13, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x16, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53,
	0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x76, 0x0a, 0x2b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6d, 0x0a, 0x35, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x54, 0x53, 0x44, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x46, 0x69, 0x6c, 0x6c,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x19, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x47, 0x72, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x6c, 0x12, 0x52, 0x0a, 0x26, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x67, 0x72,
	0x69, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x22, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x72, 0x69, 0x64, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x72, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x29, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x25, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x47, 0x72, 0x69, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x4c, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x67, 0x61, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x12, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x72, 0x47, 0x61, 0x70,
	0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x67, 0x61, 0x70, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x72, 0x47, 0x61, 0x70, 0x55, 0x6e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x61, 0x70, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x47, 0x61, 0x70, 0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x61, 0x70, 0x5f, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x47, 0x61,
	0x70, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x23, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x61, 0x64, 0x61, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x76,
	0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x42, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x61, 0x64, 0x61, 0x72, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x47, 0x72, 0x69, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x72, 0x76,
	0x65, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x61, 0x64,
	0x61, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x61, 0x64, 0x61, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x47, 0x72, 0x69, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x72, 0x76, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x68, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x20, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x62, 0x0a, 0x2f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x29, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x5c, 0x0a, 0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x54,
	0x0a, 0x27, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f,
	0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x55, 0x6e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x41, 0x0a,
	0x1d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x48, 0x0a, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x54, 0x53, 0x53, 0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x1d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x68, 0x0a,
	0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x54, 0x53, 0x53,
	0x53, 0x4f, 0x53, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5f, 0x0a, 0x2d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x28,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55,
	0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6b, 0x70,
	0x62,
}

var (
	file_TSCHArchives_sos_proto_rawDescOnce sync.Once
	file_TSCHArchives_sos_proto_rawDescData = file_TSCHArchives_sos_proto_rawDesc
)

func file_TSCHArchives_sos_proto_rawDescGZIP() []byte {
	file_TSCHArchives_sos_proto_rawDescOnce.Do(func() {
		file_TSCHArchives_sos_proto_rawDescData = protoimpl.X.CompressGZIP(file_TSCHArchives_sos_proto_rawDescData)
	})
	return file_TSCHArchives_sos_proto_rawDescData
}

var file_TSCHArchives_sos_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_TSCHArchives_sos_proto_goTypes = []interface{}{
	(*SpecSetChart3DLightingPackageArchive)(nil),               // 0: TSCHSOS.SpecSetChart3dLightingPackageArchive
	(*SpecSetChart3DVectorArchive)(nil),                        // 1: TSCHSOS.SpecSetChart3dVectorArchive
	(*SpecSetChartErrorBarCustomDataArchive)(nil),              // 2: TSCHSOS.SpecSetChartErrorBarCustomDataArchive
	(*SpecSetChartsOptionalDoubleArchiveArchive)(nil),          // 3: TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive
	(*SpecSetFormatObjectArchive)(nil),                         // 4: TSCHSOS.SpecSetFormatObjectArchive
	(*SpecSetNumberFormatArchive)(nil),                         // 5: TSCHSOS.SpecSetNumberFormatArchive
	(*SpecChart3DLightingPackageArchive)(nil),                  // 6: TSCHSOS.SpecChart3dLightingPackageArchive
	(*SpecChart3DVectorArchive)(nil),                           // 7: TSCHSOS.SpecChart3dVectorArchive
	(*SpecChartErrorBarCustomDataArchive)(nil),                 // 8: TSCHSOS.SpecChartErrorBarCustomDataArchive
	(*SpecChartsOptionalDoubleArchiveArchive)(nil),             // 9: TSCHSOS.SpecChartsOptionalDoubleArchiveArchive
	(*SpecFormatObjectArchive)(nil),                            // 10: TSCHSOS.SpecFormatObjectArchive
	(*SpecNumberFormatArchive)(nil),                            // 11: TSCHSOS.SpecNumberFormatArchive
	(*ChartAxisNonStylePropertyChangeSetArchive)(nil),          // 12: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive
	(*ChartAxisStylePropertyChangeSetArchive)(nil),             // 13: TSCHSOS.ChartAxisStylePropertyChangeSetArchive
	(*ChartLegendNonStylePropertyChangeSetArchive)(nil),        // 14: TSCHSOS.ChartLegendNonStylePropertyChangeSetArchive
	(*ChartLegendStylePropertyChangeSetArchive)(nil),           // 15: TSCHSOS.ChartLegendStylePropertyChangeSetArchive
	(*ChartNonStylePropertyChangeSetArchive)(nil),              // 16: TSCHSOS.ChartNonStylePropertyChangeSetArchive
	(*ChartReferenceLineNonStylePropertyChangeSetArchive)(nil), // 17: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive
	(*ChartReferenceLineStylePropertyChangeSetArchive)(nil),    // 18: TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive
	(*ChartSeriesNonStylePropertyChangeSetArchive)(nil),        // 19: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive
	(*ChartSeriesStylePropertyChangeSetArchive)(nil),           // 20: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive
	(*ChartStylePropertyChangeSetArchive)(nil),                 // 21: TSCHSOS.ChartStylePropertyChangeSetArchive
	(*Chart3DLightingPackageArchive)(nil),                      // 22: TSCH.Chart3DLightingPackageArchive
	(*Chart3DVectorArchive)(nil),                               // 23: TSCH.Chart3DVectorArchive
	(*ChartsNSArrayOfNSNumberDoubleArchive)(nil),               // 24: TSCH.ChartsNSArrayOfNSNumberDoubleArchive
	(*ChartsNSNumberDoubleArchive)(nil),                        // 25: TSCH.ChartsNSNumberDoubleArchive
	(*TSKFormatStructArchive)(nil),                             // 26: TSK.TSKFormatStructArchive
	(*SpecIntegerArchive)(nil),                                 // 27: TSSSOS.SpecIntegerArchive
	(*SpecDoubleArchive)(nil),                                  // 28: TSSSOS.SpecDoubleArchive
	(*SpecBoolArchive)(nil),                                    // 29: TSSSOS.SpecBoolArchive
	(*SpecStringArchive)(nil),                                  // 30: TSSSOS.SpecStringArchive
	(*SpecStrokeArchive)(nil),                                  // 31: TSDSOS.SpecStrokeArchive
	(*SpecShadowArchive)(nil),                                  // 32: TSDSOS.SpecShadowArchive
	(*SpecFillArchive)(nil),                                    // 33: TSDSOS.SpecFillArchive
	(*SpecLineEndArchive)(nil),                                 // 34: TSDSOS.SpecLineEndArchive
	(*SpecColorArchive)(nil),                                   // 35: TSSSOS.SpecColorArchive
}
var file_TSCHArchives_sos_proto_depIdxs = []int32{
	22,  // 0: TSCHSOS.SpecSetChart3dLightingPackageArchive.chart3d_lighting_package:type_name -> TSCH.Chart3DLightingPackageArchive
	23,  // 1: TSCHSOS.SpecSetChart3dVectorArchive.chart3d_vector:type_name -> TSCH.Chart3DVectorArchive
	24,  // 2: TSCHSOS.SpecSetChartErrorBarCustomDataArchive.chart_error_bar_custom_data:type_name -> TSCH.ChartsNSArrayOfNSNumberDoubleArchive
	25,  // 3: TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive.charts_optional_double_archive:type_name -> TSCH.ChartsNSNumberDoubleArchive
	26,  // 4: TSCHSOS.SpecSetFormatObjectArchive.format_object:type_name -> TSK.TSKFormatStructArchive
	26,  // 5: TSCHSOS.SpecSetNumberFormatArchive.number_format:type_name -> TSK.TSKFormatStructArchive
	0,   // 6: TSCHSOS.SpecChart3dLightingPackageArchive.spec_set_chart3d_lighting_package:type_name -> TSCHSOS.SpecSetChart3dLightingPackageArchive
	1,   // 7: TSCHSOS.SpecChart3dVectorArchive.spec_set_chart3d_vector:type_name -> TSCHSOS.SpecSetChart3dVectorArchive
	2,   // 8: TSCHSOS.SpecChartErrorBarCustomDataArchive.spec_set_chart_error_bar_custom_data:type_name -> TSCHSOS.SpecSetChartErrorBarCustomDataArchive
	3,   // 9: TSCHSOS.SpecChartsOptionalDoubleArchiveArchive.spec_set_charts_optional_double_archive:type_name -> TSCHSOS.SpecSetChartsOptionalDoubleArchiveArchive
	4,   // 10: TSCHSOS.SpecFormatObjectArchive.spec_set_format_object:type_name -> TSCHSOS.SpecSetFormatObjectArchive
	5,   // 11: TSCHSOS.SpecNumberFormatArchive.spec_set_number_format:type_name -> TSCHSOS.SpecSetNumberFormatArchive
	10,  // 12: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default10_date_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	11,  // 13: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default10_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	27,  // 14: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default3d_label_position:type_name -> TSSSOS.SpecIntegerArchive
	10,  // 15: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_date_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	10,  // 16: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_duration_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	28,  // 17: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_label_explosion:type_name -> TSSSOS.SpecDoubleArchive
	11,  // 18: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	27,  // 19: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_number_format_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 20: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_number_of_decades:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 21: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_number_of_major_gridlines:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 22: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_number_of_minor_gridlines:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 23: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.category_plot_to_edges:type_name -> TSSSOS.SpecBoolArchive
	27,  // 24: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_scale:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 25: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.category_show_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 26: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_show_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 27: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_show_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 28: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.category_show_series_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 29: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.multi_data_show_series_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 30: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.category_show_title:type_name -> TSSSOS.SpecBoolArchive
	29,  // 31: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_show_title:type_name -> TSSSOS.SpecBoolArchive
	30,  // 32: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.category_title:type_name -> TSSSOS.SpecStringArchive
	30,  // 33: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.value_title:type_name -> TSSSOS.SpecStringArchive
	9,   // 34: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_user_max:type_name -> TSCHSOS.SpecChartsOptionalDoubleArchiveArchive
	9,   // 35: TSCHSOS.ChartAxisNonStylePropertyChangeSetArchive.default_user_min:type_name -> TSCHSOS.SpecChartsOptionalDoubleArchiveArchive
	28,  // 36: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category3d_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 37: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value3d_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	31,  // 38: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category3d_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 39: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value3d_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	27,  // 40: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_horizontal_spacing:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 41: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.default_label_angle_baseline_direction:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 42: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 43: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.default_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 44: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 45: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_labels_orientation:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 46: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.default_labels_orientation:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 47: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_labels_orientation:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 48: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_major_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 49: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_major_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	32,  // 50: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_major_gridline_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 51: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_major_gridline_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 52: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_major_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 53: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_major_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	28,  // 54: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_minor_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 55: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_minor_gridline_opacity:type_name -> TSSSOS.SpecDoubleArchive
	32,  // 56: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_minor_gridline_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 57: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_minor_gridline_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 58: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_minor_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 59: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_minor_gridline_stroke:type_name -> TSDSOS.SpecStrokeArchive
	29,  // 60: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_axis:type_name -> TSSSOS.SpecBoolArchive
	29,  // 61: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_axis:type_name -> TSSSOS.SpecBoolArchive
	29,  // 62: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.default_show_extension_lines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 63: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_gridline_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	29,  // 64: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_gridline_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	29,  // 65: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_last_label:type_name -> TSSSOS.SpecBoolArchive
	29,  // 66: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_major_gridlines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 67: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.polar_category_show_major_gridlines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 68: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_major_gridlines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 69: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_major_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	29,  // 70: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_major_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	29,  // 71: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_minimum_label:type_name -> TSSSOS.SpecBoolArchive
	29,  // 72: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_minor_gridlines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 73: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_minor_gridlines:type_name -> TSSSOS.SpecBoolArchive
	29,  // 74: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_show_minor_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	29,  // 75: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_show_minor_tickmarks:type_name -> TSSSOS.SpecBoolArchive
	27,  // 76: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_tickmark_location:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 77: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_tickmark_location:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 78: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_title_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 79: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.default_title_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 80: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.value_title_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 81: TSCHSOS.ChartAxisStylePropertyChangeSetArchive.category_vertical_spacing:type_name -> TSSSOS.SpecIntegerArchive
	33,  // 82: TSCHSOS.ChartLegendStylePropertyChangeSetArchive.default_fill:type_name -> TSDSOS.SpecFillArchive
	27,  // 83: TSCHSOS.ChartLegendStylePropertyChangeSetArchive.default_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 84: TSCHSOS.ChartLegendStylePropertyChangeSetArchive.default_opacity:type_name -> TSSSOS.SpecDoubleArchive
	32,  // 85: TSCHSOS.ChartLegendStylePropertyChangeSetArchive.default_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 86: TSCHSOS.ChartLegendStylePropertyChangeSetArchive.default_stroke:type_name -> TSDSOS.SpecStrokeArchive
	27,  // 87: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_bar_shape:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 88: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_bevel_edges:type_name -> TSSSOS.SpecBoolArchive
	28,  // 89: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_inter_set_depth_gap:type_name -> TSSSOS.SpecDoubleArchive
	7,   // 90: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_rotation:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 91: TSCHSOS.ChartNonStylePropertyChangeSetArchive.area3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 92: TSCHSOS.ChartNonStylePropertyChangeSetArchive.bar3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 93: TSCHSOS.ChartNonStylePropertyChangeSetArchive.column3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 94: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 95: TSCHSOS.ChartNonStylePropertyChangeSetArchive.line3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 96: TSCHSOS.ChartNonStylePropertyChangeSetArchive.pie3d_scale:type_name -> TSCHSOS.SpecChart3dVectorArchive
	7,   // 97: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default3d_viewport:type_name -> TSCHSOS.SpecChart3dVectorArchive
	27,  // 98: TSCHSOS.ChartNonStylePropertyChangeSetArchive.area_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 99: TSCHSOS.ChartNonStylePropertyChangeSetArchive.bar_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 100: TSCHSOS.ChartNonStylePropertyChangeSetArchive.bubble_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 101: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 102: TSCHSOS.ChartNonStylePropertyChangeSetArchive.line_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 103: TSCHSOS.ChartNonStylePropertyChangeSetArchive.pie_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 104: TSCHSOS.ChartNonStylePropertyChangeSetArchive.scatter_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 105: TSCHSOS.ChartNonStylePropertyChangeSetArchive.stacked_area_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 106: TSCHSOS.ChartNonStylePropertyChangeSetArchive.stacked_bar_callout_line_type:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 107: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_outer_end_only:type_name -> TSSSOS.SpecBoolArchive
	28,  // 108: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_d_e_p_r_e_c_a_t_e_d_rounded_corner_radius:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 109: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_data_set_name_location:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 110: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_donut_place_title_at_center:type_name -> TSSSOS.SpecBoolArchive
	28,  // 111: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_inner_radius:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 112: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_multi_data_control_type:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 113: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_pie_start_angle:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 114: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_radar_start_angle:type_name -> TSSSOS.SpecDoubleArchive
	29,  // 115: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_show_legend:type_name -> TSSSOS.SpecBoolArchive
	29,  // 116: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_show_title:type_name -> TSSSOS.SpecBoolArchive
	29,  // 117: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_skip_hidden_data:type_name -> TSSSOS.SpecBoolArchive
	30,  // 118: TSCHSOS.ChartNonStylePropertyChangeSetArchive.default_title:type_name -> TSSSOS.SpecStringArchive
	9,   // 119: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_custom_value:type_name -> TSCHSOS.SpecChartsOptionalDoubleArchiveArchive
	30,  // 120: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_label:type_name -> TSSSOS.SpecStringArchive
	29,  // 121: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_show_label:type_name -> TSSSOS.SpecBoolArchive
	29,  // 122: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_show_line:type_name -> TSSSOS.SpecBoolArchive
	29,  // 123: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_show_value_label:type_name -> TSSSOS.SpecBoolArchive
	27,  // 124: TSCHSOS.ChartReferenceLineNonStylePropertyChangeSetArchive.default_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 125: TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive.default_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	32,  // 126: TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive.default_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 127: TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive.default_stroke:type_name -> TSDSOS.SpecStrokeArchive
	27,  // 128: TSCHSOS.ChartReferenceLineStylePropertyChangeSetArchive.default_value_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	10,  // 129: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default10_date_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	11,  // 130: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default10_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	11,  // 131: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie10_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	28,  // 132: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie23_label_explosion:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 133: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_adjustment_scale:type_name -> TSSSOS.SpecDoubleArchive
	10,  // 134: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_date_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	10,  // 135: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_duration_format:type_name -> TSCHSOS.SpecFormatObjectArchive
	27,  // 136: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.area_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 137: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bar_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 138: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 139: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 140: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 141: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 142: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 143: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.stacked_area_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 144: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.stacked_bar_enable_callout_line:type_name -> TSSSOS.SpecIntegerArchive
	8,   // 145: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_custom_negative_data:type_name -> TSCHSOS.SpecChartErrorBarCustomDataArchive
	8,   // 146: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_custom_negative_data_scatter_x:type_name -> TSCHSOS.SpecChartErrorBarCustomDataArchive
	8,   // 147: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_custom_positive_data:type_name -> TSCHSOS.SpecChartErrorBarCustomDataArchive
	8,   // 148: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_custom_positive_data_scatter_x:type_name -> TSCHSOS.SpecChartErrorBarCustomDataArchive
	28,  // 149: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_fixed_value:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 150: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_fixed_value_scatter_x:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 151: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_percent_value:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 152: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_percent_value_scatter_x:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 153: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_setting:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 154: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_setting_scatter_x:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 155: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_std_dev_value:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 156: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_std_dev_value_scatter_x:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 157: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 158: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_error_bar_type_scatter_x:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 159: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_label_explosion:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 160: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 161: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 162: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_line_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 163: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.radar_area_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 164: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_line_type:type_name -> TSSSOS.SpecIntegerArchive
	11,  // 165: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	11,  // 166: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	27,  // 167: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_number_format_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 168: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_number_format_type:type_name -> TSSSOS.SpecIntegerArchive
	11,  // 169: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.stacked_percent_number_format:type_name -> TSCHSOS.SpecNumberFormatArchive
	27,  // 170: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_series_type:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 171: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_show_error_bar:type_name -> TSSSOS.SpecBoolArchive
	29,  // 172: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_show_error_bar_scatter_x:type_name -> TSSSOS.SpecBoolArchive
	29,  // 173: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_show_labels_in_front:type_name -> TSSSOS.SpecBoolArchive
	29,  // 174: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_show_labels_in_front:type_name -> TSSSOS.SpecBoolArchive
	29,  // 175: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_show_line:type_name -> TSSSOS.SpecBoolArchive
	29,  // 176: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_show_negative_data:type_name -> TSSSOS.SpecBoolArchive
	29,  // 177: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_show_series_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 178: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_show_series_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 179: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_show_series_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 180: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.area_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 181: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 182: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_area_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 183: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_line_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 184: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.radar_area_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 185: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_show_symbol:type_name -> TSSSOS.SpecBoolArchive
	29,  // 186: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_show_trend_line:type_name -> TSSSOS.SpecBoolArchive
	29,  // 187: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.area_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 188: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bar_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 189: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 190: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 191: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 192: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 193: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 194: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.radar_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 195: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_show_value_labels:type_name -> TSSSOS.SpecBoolArchive
	27,  // 196: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_size_dimension:type_name -> TSSSOS.SpecIntegerArchive
	29,  // 197: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.area_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 198: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bar_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 199: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 200: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 201: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 202: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 203: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 204: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.stacked_area_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	29,  // 205: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.stacked_bar_stack_labels:type_name -> TSSSOS.SpecBoolArchive
	27,  // 206: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.area_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 207: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.line_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 208: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_area_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 209: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.mixed_line_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 210: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.radar_area_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 211: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_symbol_type:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 212: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_equation_offset_x:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 213: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_equation_offset_y:type_name -> TSSSOS.SpecDoubleArchive
	30,  // 214: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_label_string:type_name -> TSSSOS.SpecStringArchive
	27,  // 215: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_order:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 216: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_period:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 217: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_r_squared_offset_x:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 218: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_r_squared_offset_y:type_name -> TSSSOS.SpecDoubleArchive
	29,  // 219: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_show_equation:type_name -> TSSSOS.SpecBoolArchive
	29,  // 220: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_show_label:type_name -> TSSSOS.SpecBoolArchive
	29,  // 221: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_show_r2_value:type_name -> TSSSOS.SpecBoolArchive
	27,  // 222: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_trend_line_type:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 223: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.bubble_value_labels_axis:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 224: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.scatter_value_labels_axis:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 225: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.pie_wedge_explosion:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 226: TSCHSOS.ChartSeriesNonStylePropertyChangeSetArchive.default_y_axis_ordinal:type_name -> TSSSOS.SpecIntegerArchive
	34,  // 227: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_callout_line_end_line_end:type_name -> TSDSOS.SpecLineEndArchive
	34,  // 228: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_callout_line_start_line_end:type_name -> TSDSOS.SpecLineEndArchive
	31,  // 229: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_callout_line_stroke_style:type_name -> TSDSOS.SpecStrokeArchive
	34,  // 230: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_line_end:type_name -> TSDSOS.SpecLineEndArchive
	34,  // 231: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_line_end_scatter_x:type_name -> TSDSOS.SpecLineEndArchive
	32,  // 232: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_shadow:type_name -> TSDSOS.SpecShadowArchive
	27,  // 233: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_spacing:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 234: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_spacing_scatter_x:type_name -> TSSSOS.SpecIntegerArchive
	31,  // 235: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 236: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_error_bar_stroke_scatter_x:type_name -> TSDSOS.SpecStrokeArchive
	33,  // 237: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area3d_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 238: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar3d_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 239: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.column3d_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 240: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line3d_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 241: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie3d_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 242: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 243: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 244: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.column_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 245: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 246: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 247: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_column_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 248: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 249: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_fill:type_name -> TSDSOS.SpecFillArchive
	28,  // 250: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_fill_use_series_stroke_alpha_multiplier:type_name -> TSSSOS.SpecDoubleArchive
	29,  // 251: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	27,  // 252: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 253: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 254: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 255: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.donut_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 256: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 257: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 258: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 259: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 260: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_opacity:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 261: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 262: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 263: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 264: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.donut_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 265: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 266: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 267: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_outside_label_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	32,  // 268: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area3d_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 269: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar3d_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 270: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.column3d_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 271: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line3d_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 272: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie3d_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 273: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 274: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 275: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 276: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 277: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 278: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 279: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_column_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 280: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 281: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 282: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_shadow:type_name -> TSDSOS.SpecShadowArchive
	32,  // 283: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 284: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 285: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 286: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 287: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 288: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 289: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_column_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 290: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 291: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.pie_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 292: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 293: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_stroke:type_name -> TSDSOS.SpecStrokeArchive
	33,  // 294: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 295: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 296: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 297: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 298: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 299: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	33,  // 300: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_symbol_fill:type_name -> TSDSOS.SpecFillArchive
	29,  // 301: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_symbol_fill_use_series_fill:type_name -> TSSSOS.SpecBoolArchive
	29,  // 302: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_symbol_fill_use_series_fill:type_name -> TSSSOS.SpecBoolArchive
	29,  // 303: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_symbol_fill_use_series_fill:type_name -> TSSSOS.SpecBoolArchive
	29,  // 304: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_symbol_fill_use_series_fill:type_name -> TSSSOS.SpecBoolArchive
	29,  // 305: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_symbol_fill_use_series_fill:type_name -> TSSSOS.SpecBoolArchive
	29,  // 306: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 307: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 308: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 309: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 310: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 311: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	29,  // 312: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_symbol_fill_use_series_stroke:type_name -> TSSSOS.SpecBoolArchive
	28,  // 313: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 314: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 315: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 316: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 317: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 318: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_symbol_size:type_name -> TSSSOS.SpecDoubleArchive
	31,  // 319: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 320: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 321: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 322: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 323: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 324: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	31,  // 325: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_symbol_stroke:type_name -> TSDSOS.SpecStrokeArchive
	32,  // 326: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trend_line_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 327: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trend_line_stroke:type_name -> TSDSOS.SpecStrokeArchive
	28,  // 328: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trendline_equation_opacity:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 329: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trendline_equation_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 330: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trendline_r_squared_opacity:type_name -> TSSSOS.SpecDoubleArchive
	27,  // 331: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_trendline_r_squared_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 332: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.area_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 333: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bar_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 334: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.bubble_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 335: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 336: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.line_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 337: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_area_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 338: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_column_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 339: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.mixed_line_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 340: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.radar_area_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 341: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.scatter_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 342: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.stacked_area_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 343: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.stacked_bar_value_label_position:type_name -> TSSSOS.SpecIntegerArchive
	27,  // 344: TSCHSOS.ChartSeriesStylePropertyChangeSetArchive.default_value_label_spacing:type_name -> TSSSOS.SpecIntegerArchive
	28,  // 345: TSCHSOS.ChartStylePropertyChangeSetArchive.default3d_chart_opacity:type_name -> TSSSOS.SpecDoubleArchive
	6,   // 346: TSCHSOS.ChartStylePropertyChangeSetArchive.area3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	6,   // 347: TSCHSOS.ChartStylePropertyChangeSetArchive.bar3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	6,   // 348: TSCHSOS.ChartStylePropertyChangeSetArchive.column3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	6,   // 349: TSCHSOS.ChartStylePropertyChangeSetArchive.default3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	6,   // 350: TSCHSOS.ChartStylePropertyChangeSetArchive.line3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	6,   // 351: TSCHSOS.ChartStylePropertyChangeSetArchive.pie3d_lighting_package:type_name -> TSCHSOS.SpecChart3dLightingPackageArchive
	33,  // 352: TSCHSOS.ChartStylePropertyChangeSetArchive.default_background_fill:type_name -> TSDSOS.SpecFillArchive
	31,  // 353: TSCHSOS.ChartStylePropertyChangeSetArchive.default_background_stroke:type_name -> TSDSOS.SpecStrokeArchive
	28,  // 354: TSCHSOS.ChartStylePropertyChangeSetArchive.default_border_opacity:type_name -> TSSSOS.SpecDoubleArchive
	32,  // 355: TSCHSOS.ChartStylePropertyChangeSetArchive.default_border_shadow:type_name -> TSDSOS.SpecShadowArchive
	31,  // 356: TSCHSOS.ChartStylePropertyChangeSetArchive.default_border_stroke:type_name -> TSDSOS.SpecStrokeArchive
	29,  // 357: TSCHSOS.ChartStylePropertyChangeSetArchive.default_combine_layers:type_name -> TSSSOS.SpecBoolArchive
	27,  // 358: TSCHSOS.ChartStylePropertyChangeSetArchive.default_data_set_name_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	33,  // 359: TSCHSOS.ChartStylePropertyChangeSetArchive.default_grid_background_fill:type_name -> TSDSOS.SpecFillArchive
	28,  // 360: TSCHSOS.ChartStylePropertyChangeSetArchive.default_grid_background_opacity:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 361: TSCHSOS.ChartStylePropertyChangeSetArchive.default_inter_bar_gap:type_name -> TSSSOS.SpecDoubleArchive
	28,  // 362: TSCHSOS.ChartStylePropertyChangeSetArchive.default_inter_set_gap:type_name -> TSSSOS.SpecDoubleArchive
	29,  // 363: TSCHSOS.ChartStylePropertyChangeSetArchive.default_radar_radius_gridline_curve:type_name -> TSSSOS.SpecBoolArchive
	29,  // 364: TSCHSOS.ChartStylePropertyChangeSetArchive.default_rounded_corner_outer_end_only:type_name -> TSSSOS.SpecBoolArchive
	28,  // 365: TSCHSOS.ChartStylePropertyChangeSetArchive.default_rounded_corner_radius:type_name -> TSSSOS.SpecDoubleArchive
	29,  // 366: TSCHSOS.ChartStylePropertyChangeSetArchive.default_show_border:type_name -> TSSSOS.SpecBoolArchive
	35,  // 367: TSCHSOS.ChartStylePropertyChangeSetArchive.default_title_color:type_name -> TSSSOS.SpecColorArchive
	27,  // 368: TSCHSOS.ChartStylePropertyChangeSetArchive.default_title_paragraph_style_index:type_name -> TSSSOS.SpecIntegerArchive
	369, // [369:369] is the sub-list for method output_type
	369, // [369:369] is the sub-list for method input_type
	369, // [369:369] is the sub-list for extension type_name
	369, // [369:369] is the sub-list for extension extendee
	0,   // [0:369] is the sub-list for field type_name
}

func init() { file_TSCHArchives_sos_proto_init() }
func file_TSCHArchives_sos_proto_init() {
	if File_TSCHArchives_sos_proto != nil {
		return
	}
	file_TSCH3DArchives_proto_init()
	file_TSCHArchives_Common_proto_init()
	file_TSDArchives_sos_proto_init()
	file_TSKArchives_proto_init()
	file_TSSArchives_sos_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TSCHArchives_sos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetChart3DLightingPackageArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetChart3DVectorArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetChartErrorBarCustomDataArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetChartsOptionalDoubleArchiveArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetFormatObjectArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecSetNumberFormatArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecChart3DLightingPackageArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecChart3DVectorArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecChartErrorBarCustomDataArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecChartsOptionalDoubleArchiveArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecFormatObjectArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecNumberFormatArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartAxisNonStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartAxisStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartLegendNonStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartLegendStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartNonStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartReferenceLineNonStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartReferenceLineStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartSeriesNonStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartSeriesStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TSCHArchives_sos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartStylePropertyChangeSetArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TSCHArchives_sos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TSCHArchives_sos_proto_goTypes,
		DependencyIndexes: file_TSCHArchives_sos_proto_depIdxs,
		MessageInfos:      file_TSCHArchives_sos_proto_msgTypes,
	}.Build()
	File_TSCHArchives_sos_proto = out.File
	file_TSCHArchives_sos_proto_rawDesc = nil
	file_TSCHArchives_sos_proto_goTypes = nil
	file_TSCHArchives_sos_proto_depIdxs = nil
}
